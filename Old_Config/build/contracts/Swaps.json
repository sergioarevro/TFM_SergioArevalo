{
  "contractName": "Swaps",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "owned",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "noteHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "CreateNote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "noteHash",
          "type": "bytes32"
        }
      ],
      "name": "DestroyNote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "holdId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "lockPreimage",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "ExecutedHold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "fromPartition",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "TransferByPartition",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "canReceive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "partition",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "holder1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "holder2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "executer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenAddress1",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenValue1",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId1",
              "type": "bytes32"
            },
            {
              "internalType": "enum Swaps.Standard",
              "name": "tokenStandard1",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "tokenAddress2",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenValue2",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "tokenId2",
              "type": "bytes32"
            },
            {
              "internalType": "enum Swaps.Standard",
              "name": "tokenStandard2",
              "type": "uint8"
            },
            {
              "internalType": "enum Swaps.TradeType",
              "name": "tradeType1",
              "type": "uint8"
            },
            {
              "internalType": "enum Swaps.TradeType",
              "name": "tradeType2",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "settlementDate",
              "type": "uint256"
            }
          ],
          "internalType": "struct Swaps.TradeRequestInput",
          "name": "inputData",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "requestTrade",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "acceptTrade",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTradeAcceptanceStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "approveTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "approveTradeWithPreimage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTradeApprovalStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "executeTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "executeTradeWithPreimage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "forceTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "forceTradeWithPreimage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "cancelTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradeExecuters",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        }
      ],
      "name": "setTradeExecuters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "tokenControllers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "operators",
          "type": "address[]"
        }
      ],
      "name": "setTokenControllers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "priceOracles",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "oracles",
          "type": "address[]"
        }
      ],
      "name": "setPriceOracles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress2",
          "type": "address"
        }
      ],
      "name": "getPriceOwnership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress2",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "priceOwnership",
          "type": "bool"
        }
      ],
      "name": "setPriceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "variablePriceStartDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        }
      ],
      "name": "setVariablePriceStartDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress2",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId1",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId2",
          "type": "bytes32"
        }
      ],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress2",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId1",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "tokenId2",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "setTokenPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTrade",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "holder1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "holder2",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "executer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "settlementDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenValue",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "tokenId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum Swaps.Standard",
                  "name": "tokenStandard",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "accepted",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                },
                {
                  "internalType": "enum Swaps.TradeType",
                  "name": "tradeType",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Swaps.UserTradeData",
              "name": "userTradeData1",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenValue",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "tokenId",
                  "type": "bytes32"
                },
                {
                  "internalType": "enum Swaps.Standard",
                  "name": "tokenStandard",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "accepted",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                },
                {
                  "internalType": "enum Swaps.TradeType",
                  "name": "tradeType",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Swaps.UserTradeData",
              "name": "userTradeData2",
              "type": "tuple"
            },
            {
              "internalType": "enum Swaps.State",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct Swaps.Trade",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getNbTrades",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"owned\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"noteHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"CreateNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"noteHash\",\"type\":\"bytes32\"}],\"name\":\"DestroyNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"holdId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"lockPreimage\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"ExecutedHold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"fromPartition\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"TransferByPartition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"acceptTrade\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"approveTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"approveTradeWithPreimage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"canReceive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"cancelTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"executeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"executeTradeWithPreimage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"forceTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"forceTradeWithPreimage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNbTrades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress2\",\"type\":\"address\"}],\"name\":\"getPriceOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId2\",\"type\":\"bytes32\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTrade\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"holder1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"settlementDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"enum Swaps.Standard\",\"name\":\"tokenStandard\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"enum Swaps.TradeType\",\"name\":\"tradeType\",\"type\":\"uint8\"}],\"internalType\":\"struct Swaps.UserTradeData\",\"name\":\"userTradeData1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"enum Swaps.Standard\",\"name\":\"tokenStandard\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"enum Swaps.TradeType\",\"name\":\"tradeType\",\"type\":\"uint8\"}],\"internalType\":\"struct Swaps.UserTradeData\",\"name\":\"userTradeData2\",\"type\":\"tuple\"},{\"internalType\":\"enum Swaps.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct Swaps.Trade\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTradeAcceptanceStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTradeApprovalStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"priceOracles\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"holder1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenValue1\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId1\",\"type\":\"bytes32\"},{\"internalType\":\"enum Swaps.Standard\",\"name\":\"tokenStandard1\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenValue2\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId2\",\"type\":\"bytes32\"},{\"internalType\":\"enum Swaps.Standard\",\"name\":\"tokenStandard2\",\"type\":\"uint8\"},{\"internalType\":\"enum Swaps.TradeType\",\"name\":\"tradeType1\",\"type\":\"uint8\"},{\"internalType\":\"enum Swaps.TradeType\",\"name\":\"tradeType2\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"settlementDate\",\"type\":\"uint256\"}],\"internalType\":\"struct Swaps.TradeRequestInput\",\"name\":\"inputData\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"preimage\",\"type\":\"bytes32\"}],\"name\":\"requestTrade\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"oracles\",\"type\":\"address[]\"}],\"name\":\"setPriceOracles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress2\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"priceOwnership\",\"type\":\"bool\"}],\"name\":\"setPriceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"}],\"name\":\"setTokenControllers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId2\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"}],\"name\":\"setTradeExecuters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"}],\"name\":\"setVariablePriceStartDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"tokenControllers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"partition\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeExecuters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"variablePriceStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Delivery-Vs-Payment contract for investor-to-investor token trades.Intended usage: The purpose of the contract is to allow secure token transfers/exchanges between 2 stakeholders (called holder1 and holder2). From now on, an operation in the Swaps smart contract (transfer/exchange) is called a trade. Depending on the type of trade, one/multiple token transfers will be executed. The simplified workflow is the following: 1) A trade request is created in the Swaps smart contract, it specifies:  - The token holder(s) involved in the trade  - The trade executer (optional)  - An expiration date  - Details on the first token (address, requested amount, standard)  - Details on the second token (address, requested amount, standard)  - Whether the tokens need to be escrowed in the Swaps contract or not  - The current status of the trade (pending / executed / forced / cancelled) 2) The trade is accepted by both token holders 3) [OPTIONAL] The trade is approved by token controllers (only if requested by tokens controllers) 4) The trade is executed (either by the executer in case the executer is specified, or by anyone) STANDARD-AGNOSTIC: The Swaps smart contract is standard-agnostic, it supports ETH, ERC20, ERC721, ERC1400. The advantage of using an ERC1400 token is to leverages its hook property, thus requiring ONE single transaction (operatorTransferByPartition()) to send tokens to the Swaps smart contract instead of TWO with the ERC20 token standard (approve() + transferFrom()). OFF-CHAIN PAYMENT: The contract can be used as escrow contract while waiting for an off-chain payment. Once payment is received off-chain, the token sender realeases the tokens escrowed in the Swaps contract to deliver them to the recipient. ESCROW VS SWAP MODE: In case escrow mode is selected, tokens need to be escrowed in Swaps smart contract before the trade can occur. In case swap mode is selected, tokens are not escrowed in the Swaps. Instead, the Swaps contract is only allowed to transfer tokens ON BEHALF of their owners. When trade is executed, an atomic token swap occurs. EXPIRATION DATE: The trade can be cancelled by both parties in case expiration date is passed. CLAIMS: The executer has the ability to force or cancel the trade. In case of disagreement/missing payment, both parties can contact the \\\"executer\\\" of the trade to deposit a claim and solve the issue. MARKETPLACE: The contract can be used as a token marketplace. Indeed, when trades are created without specifying the recipient address, anyone can purchase them by sending the requested payment in exchange. PRICE ORACLES: When price oracles are defined, those can define the price at which trades need to be executed. This feature is particularly useful for assets with NAV (net asset value).\",\"events\":{\"ExecutedHold(address,bytes32,bytes32,address)\":{\"details\":\"Include token events so they can be parsed by Ethereum clients from the settlement transactions.\"}},\"kind\":\"dev\",\"methods\":{\"acceptTrade(uint256,bytes32)\":{\"details\":\"Accept a given trade (+ potentially escrow tokens).\",\"params\":{\"index\":\"Index of the trade to be accepted.\"}},\"approveTradeWithPreimage(uint256,bool,bytes32)\":{\"details\":\"Approve a trade (if the tokens involved in the trade are controlled) This function can only be called by a token controller of one of the tokens involved in the trade. Indeed, when a token smart contract is controlled by an owner, the owner can decide to open the secondary market by:  - Allowlisting the Swaps smart contract  - Setting \\\"token controllers\\\" in the Swaps smart contract, in order to approve all the trades made with his token\",\"params\":{\"approved\":\"'true' if trade is approved, 'false' if not.\",\"index\":\"Index of the trade to be executed.\"}},\"canReceive(bytes,bytes32,address,address,address,uint256,bytes,bytes)\":{\"details\":\"Indicate whether or not the Swaps contract can receive the tokens or not. [USED FOR ERC1400 TOKENS ONLY]\",\"params\":{\"data\":\"Information attached to the token transfer.\",\"operatorData\":\"Information attached to the Swaps transfer, by the operator.\"},\"returns\":{\"_0\":\"'true' if the Swaps contract can receive the tokens, 'false' if not.\"}},\"cancelTrade(uint256)\":{\"details\":\"Cancel a trade execution in the Swaps contract by transferring tokens back to their initial owners.\",\"params\":{\"index\":\"Index of the trade to be cancelled.\"}},\"constructor\":{\"details\":\"Initialize Swaps + register the contract implementation in ERC1820Registry.\"},\"executeTradeWithPreimage(uint256,bytes32)\":{\"details\":\"Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required). This function can only be called by the executer specified at trade creation. If no executer is specified, the trade can be launched by anyone.\",\"params\":{\"index\":\"Index of the trade to be executed.\"}},\"forceTradeWithPreimage(uint256,bytes32)\":{\"details\":\"Force a trade execution in the Swaps contract by transferring tokens back to their target recipients.\",\"params\":{\"index\":\"Index of the trade to be forced.\"}},\"getNbTrades()\":{\"details\":\"Get the total number of requests in the Swaps contract.\",\"returns\":{\"_0\":\"Total number of requests in the Swaps contract.\"}},\"getPrice(uint256)\":{\"details\":\"Get amount of token2 to pay to acquire the token1.\",\"params\":{\"index\":\"Index of the Swaps request.\"}},\"getPriceOwnership(address,address)\":{\"details\":\"Get price of the token.\",\"params\":{\"tokenAddress1\":\"Address of the token to be priced.\",\"tokenAddress2\":\"Address of the token to pay for token1.\"}},\"getTokenPrice(address,address,bytes32,bytes32)\":{\"details\":\"Get price of the token.\",\"params\":{\"tokenAddress1\":\"Address of the token to be priced.\",\"tokenAddress2\":\"Address of the token to pay for token1.\",\"tokenId1\":\"ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions).\"}},\"getTrade(uint256)\":{\"details\":\"Get the trade.\",\"params\":{\"index\":\"Index of the trade.\"},\"returns\":{\"_0\":\"Trade.\"}},\"getTradeAcceptanceStatus(uint256)\":{\"details\":\"Verify if a trade has been accepted by the token holders. The trade needs to be accepted by both parties (token holders) before it gets executed.\",\"params\":{\"index\":\"Index of the trade to be accepted.\"}},\"getTradeApprovalStatus(uint256)\":{\"details\":\"Verify if a trade has been approved by the token controllers. In case a given token has token controllers, those need to validate the trade before it gets executed.\",\"params\":{\"index\":\"Index of the trade to be approved.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"priceOracles(address)\":{\"details\":\"Get the list of price oracles for a given token.\",\"params\":{\"tokenAddress\":\"Token address.\"},\"returns\":{\"_0\":\"List of addresses of all the price oracles for a given token.\"}},\"renounceOwnership()\":{\"details\":\"Renounce ownership of the contract.\"},\"requestTrade((address,address,address,uint256,address,uint256,bytes32,uint8,address,uint256,bytes32,uint8,uint8,uint8,uint256),bytes32)\":{\"details\":\"Create a new trade request in the Swaps smart contract.\",\"params\":{\"inputData\":\"The input for this function\"}},\"setPriceOracles(address,address[])\":{\"details\":\"Set list of price oracles for a given token.\",\"params\":{\"oracles\":\"Oracles addresses.\",\"tokenAddress\":\"Token address.\"}},\"setPriceOwnership(address,address,bool)\":{\"details\":\"Take ownership for setting the price of a token.\",\"params\":{\"tokenAddress1\":\"Address of the token to be priced.\",\"tokenAddress2\":\"Address of the token to pay for token1.\"}},\"setTokenControllers(address,address[])\":{\"details\":\"Set list of token controllers for a given token.\",\"params\":{\"operators\":\"Operators addresses.\",\"tokenAddress\":\"Token address.\"}},\"setTokenPrice(address,address,bytes32,bytes32,uint256)\":{\"details\":\"Set price of a token.\",\"params\":{\"newPrice\":\"New price of the token.\",\"tokenAddress1\":\"Address of the token to be priced.\",\"tokenAddress2\":\"Address of the token to pay for token1.\",\"tokenId1\":\"ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).\",\"tokenId2\":\"ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions).\"}},\"setTradeExecuters(address[])\":{\"details\":\"Set list of trade executers for the Swaps contract.\",\"params\":{\"operators\":\"Trade executers addresses.\"}},\"setVariablePriceStartDate(address,uint256)\":{\"details\":\"Set date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\",\"params\":{\"startDate\":\"Date after which token price can potentially be set by an oracle (0 if price can not be set by an oracle).\",\"tokenAddress\":\"Token address.\"}},\"tokenControllers(address)\":{\"details\":\"Get the list of token controllers for a given token.\",\"params\":{\"tokenAddress\":\"Token address.\"},\"returns\":{\"_0\":\"List of addresses of all the token controllers for a given token.\"}},\"tokensReceived(bytes,bytes32,address,address,address,uint256,bytes,bytes)\":{\"details\":\"Hook function executed when tokens are sent to the Swaps contract. [USED FOR ERC1400 TOKENS ONLY]\",\"params\":{\"data\":\"Information attached to the token transfer.\",\"from\":\"Token holder.\",\"operatorData\":\"Information attached to the Swaps transfer, by the operator.\",\"partition\":\"Name of the partition.\",\"to\":\"Token recipient.\",\"value\":\"Number of tokens to transfer.\"}},\"tradeExecuters()\":{\"details\":\"Get the list of trade executers as defined by the Swaps contract.\",\"returns\":{\"_0\":\"List of addresses of all the trade executers.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"variablePriceStartDate(address)\":{\"details\":\"Get date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\",\"params\":{\"tokenAddress\":\"Token address.\"}}},\"title\":\"Swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canReceive(bytes,bytes32,address,address,address,uint256,bytes,bytes)\":{\"notice\":\"[ERC1400TokensRecipient INTERFACE (1/2)]\"},\"constructor\":{\"notice\":\"[Swaps CONSTRUCTOR]\"},\"tokensReceived(bytes,bytes32,address,address,address,uint256,bytes,bytes)\":{\"notice\":\"[ERC1400TokensRecipient INTERFACE (2/2)]\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tools/Swaps.sol\":\"Swaps\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xdf30b8f2bba82b86661928377f70ba4b68739a799f8bad36e542144811aa70d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21bd0454780574067a356fb6e2f312c742c6f6cd0ce1ff38cf7152ff62d75896\",\"dweb:/ipfs/QmUmojQcsT1B6tsVicqpv9keAjvXjuj9pJcvQgQ8Kvuumq\"]},\"project:/contracts/IERC1400.sol\":{\"keccak256\":\"0x068dca77537afdd3e7bfe1bdfa93db232c2d84b48b7c1a2b924fb68cf6479502\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a3819432a4fc0e7da7b461e98c86beab4b7b47058a02f6871cbd74ea366de3f\",\"dweb:/ipfs/QmXSpFeYECHKh7aQbXPa7BczPEhjERxS9Dfof1XXW2BNiK\"]},\"project:/contracts/extensions/userExtensions/IERC1400TokensRecipient.sol\":{\"keccak256\":\"0x9aa77234a6a2ef6f39fe911f04c47287662373eee44e7e105615a56017683aea\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://023b9567bef57401d5690c1d9dea89f771095aab7499bc7ea8d17ac8eba40f7a\",\"dweb:/ipfs/QmZh8oQpLzYPNdrcRbYUrL9FuHmp6YsLJm1LA9tETz7fEs\"]},\"project:/contracts/interface/ERC1820Implementer.sol\":{\"keccak256\":\"0x73a779c5921dd13ed066e7f552c70650a7dc180259c7ae3ca737412c44f456f4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ef9b2cd1dc82ba9a8a0174f3eb319ad4272ba88ece590245b1b226587c6c640\",\"dweb:/ipfs/QmVQ154bNWE8ZVtC9HFYEntAgxGj5KNamUSXmCGWjacebx\"]},\"project:/contracts/interface/HoldStatusCode.sol\":{\"keccak256\":\"0x6deb0acca580b9e9474d8dc953a759311c1f77876fa06cf672550970db0289a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://603ba40c099b8affdd7a25a2922b7a13fe30a52d0922cc10d669723dac80de05\",\"dweb:/ipfs/QmWE3hHWtcJqaL1g2rU3ztTxwJMUJnMQS5ZdA2QvChpRo6\"]},\"project:/contracts/interface/IERC1643.sol\":{\"keccak256\":\"0xf742bf58825da4284363ab3571edb627777df9a6a20856b9cc8bbbf31205d1d8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://041f2b44632942ea03c0a8667d9f7db9dc7be058d7e31eb83f69501f7f1ee2b9\",\"dweb:/ipfs/Qmbik5bq1RKkGaqFcJ1aiL4pPjwgxPfRuH9D8tKNkqmyvJ\"]},\"project:/contracts/interface/IERC20HoldableToken.sol\":{\"keccak256\":\"0x8348bebc4695425ee6e0adbb79980ee226fbe410ccb4d46bca76d45214f123a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://722d3a124137d7f819066ab36108fbcf54d77fd130e2069ae093e454af10fbc6\",\"dweb:/ipfs/QmNRgnDos5dW12tiW71g1h4JCQ7dqNxisXRjczEaNFb1Cp\"]},\"project:/contracts/interface/IHoldableERC1400TokenExtension.sol\":{\"keccak256\":\"0xc37ba418eac8f7eff956bc790514cd1cc04d2fedf5f69dcb91274ffcfca41b09\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://85c956f11c5748242815ebdfa315758d242641d97a34a9ddfdceed43cb0f8fac\",\"dweb:/ipfs/QmeCGZUzmrb3D4RNStwgrHRNAsVLy9kXppLdpq6fAkkGXN\"]},\"project:/contracts/tools/ERC1820Client.sol\":{\"keccak256\":\"0x00a2c91c981963733d6a6d56db442e1c763b0312aea8a8ea3129ee9d3f59ba5b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6479dc6c115e17cda4ccad06007c8c7684fc2ba85dd599c61169df5c25c8c759\",\"dweb:/ipfs/QmWtQNzvP3yst9H2mYBEmno99KBX3JAW2ppy6JtPoFc9cp\"]},\"project:/contracts/tools/Swaps.sol\":{\"keccak256\":\"0x4c047ef3d552509a30aae4a4228255d5dd16a546b25fe11e67db21a1ca4c337d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d64f1b4ac2e189f5b08ee4e10143b57229576fa384e51fd4d0dc9a60dbdb9f9e\",\"dweb:/ipfs/QmeSA88HECqnfck8HreFi6uiZqu8WrsS7nPDbL8mHHZGym\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620064e0380380620064e0833981016040819052620000349162000453565b6200003f3362000188565b6200007e6040518060400160405280601181526020017011195b1a5d995c9e559cd4185e5b595b9d607a1b815250620001d860201b62002c051760201c565b620000c96040518060400160405280601681526020017f45524331343030546f6b656e73526563697069656e7400000000000000000000815250620001d860201b62002c051760201c565b60408051808201909152601681527f45524331343030546f6b656e73526563697069656e7400000000000000000000602082015262000109903062000227565b6008805460ff191682151590811790915560ff161562000181576040805160018082528183019092526000916020808301908036833701905050905033816000815181106200015c576200015c620004e6565b6001600160a01b03909216602092830291909101909101526200017f81620002d5565b505b50620004fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600180600083604051602001620001f091906200047e565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6000826040516020016200023c91906200047e565b60408051808303601f190181529082905280516020909101206329965a1d60e01b8252306004830152602482018190526001600160a01b03841660448301529150731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b158015620002b757600080fd5b505af1158015620002cc573d6000803e3d6000fd5b50505050505050565b60005b60095481101562000348576000600a600060098481548110620002ff57620002ff620004e6565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055806200033f81620004bc565b915050620002d8565b5060005b8151811015620003b8576001600a6000848481518110620003715762000371620004e6565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620003af81620004bc565b9150506200034c565b508051620003ce906009906020840190620003d2565b5050565b8280548282559060005260206000209081019282156200042a579160200282015b828111156200042a57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620003f3565b50620004389291506200043c565b5090565b5b808211156200043857600081556001016200043d565b6000602082840312156200046657600080fd5b815180151581146200047757600080fd5b9392505050565b6000825160005b81811015620004a1576020818601810151858301520162000485565b81811115620004b1576000828501525b509190910192915050565b6000600019821415620004df57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b615fd4806200050c6000396000f3fe6080604052600436106101735760003560e01c8063013745181461017857806301636f4e146101ae57806302d2838b146101d057806309ec6cc7146101f05780630baf41a6146102105780631af6649f14610230578063249cb3fa146102605780632cb437d81461028e5780632db25e05146102ae57806330f97699146102db578063353414641461031157806345a06cb21461033157806351965a8314610346578063582dcd1314610359578063587274671461037957806361108c06146103995780636775ce04146103b9578063715018a6146103d9578063759561fa146103ee5780638595240b1461040e57806389a0c9e7146104655780638da5cb5b14610478578063935259a8146104a5578063a22ae631146104c5578063c9adffe2146104e5578063d95b585e14610505578063e757223014610525578063ebbca40714610545578063ec96dfb41461055a578063f2fde38b1461057a578063f464b5761461059a578063f55886df146105ba575b600080fd5b34801561018457600080fd5b506101986101933660046152e1565b6105da565b6040516101a59190615a43565b60405180910390f35b3480156101ba57600080fd5b506101ce6101c9366004615436565b610650565b005b3480156101dc57600080fd5b506101ce6101eb3660046158b8565b6107d3565b3480156101fc57600080fd5b506101ce61020b3660046158b8565b6107e1565b34801561021c57600080fd5b506101ce61022b366004615354565b610b4c565b34801561023c57600080fd5b5061025061024b36600461531b565b610bae565b60405190151581526020016101a5565b34801561026c57600080fd5b5061028061027b36600461552d565b610bde565b6040519081526020016101a5565b34801561029a57600080fd5b506101ce6102a93660046158f6565b610c3d565b3480156102ba57600080fd5b506102ce6102c93660046158b8565b610e26565b6040516101a59190615d16565b3480156102e757600080fd5b506102806102f63660046152e1565b6001600160a01b03166000908152600d602052604090205490565b34801561031d57600080fd5b5061025061032c3660046158b8565b61104b565b34801561033d57600080fd5b50610198611242565b6101ce61035436600461592e565b6112a4565b34801561036557600080fd5b506101ce61037436600461592e565b6112b6565b34801561038557600080fd5b506101ce6103943660046153e5565b6114fd565b3480156103a557600080fd5b506101ce6103b43660046158b8565b611709565b3480156103c557600080fd5b506101ce6103d43660046158d1565b611714565b3480156103e557600080fd5b506101ce611720565b3480156103fa57600080fd5b506101986104093660046152e1565b611763565b34801561041a57600080fd5b5061028061042936600461539f565b6001600160a01b039384166000908152600760209081526040808320959096168252938452848120928152918352838220908252909152205490565b6101ce610473366004615886565b6117d7565b34801561048457600080fd5b5061048d6119af565b6040516001600160a01b0390911681526020016101a5565b3480156104b157600080fd5b506102506104c03660046158b8565b6119be565b3480156104d157600080fd5b506101ce6104e03660046154b6565b611a5b565b3480156104f157600080fd5b506101ce61050036600461548a565b611b16565b34801561051157600080fd5b506101ce61052036600461592e565b611bd8565b34801561053157600080fd5b506102806105403660046158b8565b611f34565b34801561055157600080fd5b50600254610280565b34801561056657600080fd5b506101ce610575366004615436565b612473565b34801561058657600080fd5b506101ce6105953660046152e1565b6126c9565b3480156105a657600080fd5b506101ce6105b53660046156c3565b612766565b3480156105c657600080fd5b506102506105d53660046155e1565b612b80565b6001600160a01b03811660009081526004602090815260409182902080548351818402810184019094528084526060939283018282801561064457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610626575b50505050509050919050565b8261065b8133612c52565b6106805760405162461bcd60e51b815260040161067790615bf5565b60405180910390fd5b60005b6001600160a01b038516600090815260046020526040902054811015610720576001600160a01b0385166000908152600560209081526040808320600490925282208054839190859081106106da576106da615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061071881615e38565b915050610683565b5060005b828110156107a8576001600160a01b038516600090815260056020526040812060019186868581811061075957610759615e7f565b905060200201602081019061076e91906152e1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806107a081615e38565b915050610724565b506001600160a01b03841660009081526004602052604090206107cc908484615035565b5050505050565b6107de8160006112b6565b50565b60008181526003602052604090206001600d82015460ff16600481111561080a5761080a615e69565b146108275760405162461bcd60e51b815260040161067790615c76565b60068101546008820154600a830154600c84015460ff61010093849004811693909104168280156108555750805b156109625760028501546001600160a01b03163314806108a35750846003015442101580156108a3575084546001600160a01b03163314806108a3575060018501546001600160a01b031633145b6108ef5760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028302960b81b6064820152608401610677565b600260088601546301000000900460ff16600281111561091157610911615e69565b14156109265761092686600086600182612d0f565b6002600c8601546301000000900460ff16600281111561094857610948615e69565b141561095d5761095d86600184816000612d0f565b610b2d565b8215610a1e5760028501546001600160a01b031633148061099b57508460030154421015801561099b575084546001600160a01b031633145b6109e75760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028312960b81b6064820152608401610677565b600260088601546301000000900460ff166002811115610a0957610a09615e69565b141561095d5761095d86600086600182612d0f565b8015610aa65760028501546001600160a01b0316331480610a5a575084600301544210158015610a5a575060018501546001600160a01b031633145b6109265760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028322960b81b6064820152608401610677565b60028501546001600160a01b0316331480610aca575084546001600160a01b031633145b80610ae1575060018501546001600160a01b031633145b610b2d5760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028332960b81b6064820152608401610677565b600d850180546004919060ff19166001835b0217905550505050505050565b82610b578133612c52565b610b735760405162461bcd60e51b815260040161067790615bf5565b506001600160a01b03928316600090815260066020908152604080832094909516825292909252919020805460ff1916911515919091179055565b6001600160a01b0380831660009081526006602090815260408083209385168352929052205460ff165b92915050565b60008281526001602052604081205460ff1615610c355760405173455243313832305f4143434550545f4d4147494360601b6020820152603401604051602081830303815290604052805190602001209050610bd8565b506000610bd8565b60008381526003602052604090206001600d82015460ff166004811115610c6657610c66615e69565b14610c835760405162461bcd60e51b815260040161067790615c76565b60058101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1680610ce0575060098101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff165b610d525760405162461bcd60e51b815260206004820152603d60248201527f4f6e6c7920746f6b656e20636f6e74726f6c6c657273206f6620696e766f6c7660448201527f656420746f6b656e732063616e20617070726f766520612074726164650000006064820152608401610677565b60058101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1615610d9a5760088101805462ff0000191662010000851515021790555b60098101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1615610de257600c8101805462ff0000191662010000851515021790555b60028101546001600160a01b0316158015610e015750610e018461104b565b8015610e115750610e11846119be565b15610e2057610e208483612e47565b50505050565b610e2e615098565b60008281526003602081815260409283902083516101008101855281546001600160a01b03908116825260018301548116828501526002830154811682870152938201546060808301919091526004808401546080840152865160e0810188526005850180549097168152600685015495810195909552600784015496850196909652600883015492959194869460a08701949093919284019160ff90911690811115610edd57610edd615e69565b6004811115610eee57610eee615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115610f3457610f34615e69565b6002811115610f4557610f45615e69565b90525081526040805160e0810182526009840180546001600160a01b03168252600a850154602083810191909152600b86015493830193909352600c85015492909301929091606083019060ff166004811115610fa457610fa4615e69565b6004811115610fb557610fb5615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115610ffb57610ffb615e69565b600281111561100c5761100c615e69565b9052508152600d82015460209091019060ff16600481111561103057611030615e69565b600481111561104157611041615e69565b9052509392505050565b60008181526003602052604081206001600d82015460ff16600481111561107457611074615e69565b141561121957600060088201546301000000900460ff16600281111561109c5761109c615e69565b148015611172575080546040805160e0810182526005840180546001600160a01b039081168352600686015460208401526007860154938301939093526008850154611170949390931692606083019060ff16600481111561110057611100615e69565b600481111561111157611111615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561115757611157615e69565b600281111561116857611168615e69565b905250612fa0565b155b156111805750600092915050565b6000600c8201546301000000900460ff1660028111156111a2576111a2615e69565b14801561120b575060018101546040805160e0810182526009840180546001600160a01b039081168352600a8601546020840152600b86015493830193909352600c850154611209949390931692606083019060ff16600481111561110057611100615e69565b155b156112195750600092915050565b6008810154610100900460ff16801561123b5750600c810154610100900460ff165b9392505050565b6060600980548060200260200160405190810160405280929190818152602001828054801561129a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161127c575b5050505050905090565b6112b282333460008561316f565b5050565b60008281526003602052604090206001600d82015460ff1660048111156112df576112df615e69565b146112fc5760405162461bcd60e51b815260040161067790615c76565b60028101546001600160a01b0316156113935760028101546001600160a01b03163314611393576040805162461bcd60e51b81526020600482015260248101919091527f54726164652063616e206f6e6c7920626520657865637574656420627920657860448201527f65637574657220646566696e6564206174207472616465206372656174696f6e6064820152608401610677565b80600401544210156114065760405162461bcd60e51b815260206004820152603660248201527f54726164652063616e206f6e6c79206265206578656375746564206f6e206f7260448201527520616674657220736574746c656d656e74206461746560501b6064820152608401610677565b61140f8361104b565b6114785760405162461bcd60e51b815260206004820152603460248201527f547261646520686173206e6f74206265656e20616363657074656420627920616044820152731b1b081d1bdad95b881a1bdb19195c9cc81e595d60621b6064820152608401610677565b611481836119be565b6114ee5760405162461bcd60e51b815260206004820152603860248201527f547261646520686173206e6f74206265656e20617070726f76656420627920616044820152771b1b081d1bdad95b8818dbdb9d1c9bdb1b195c9cc81e595d60421b6064820152608401610677565b6114f88383612e47565b505050565b6001600160a01b0380861660009081526006602090815260408083209388168352929052205460ff16801561155757506001600160a01b0380851660009081526006602090815260408083209389168352929052205460ff165b156115745760405162461bcd60e51b815260040161067790615bbe565b6001600160a01b0380861660009081526006602090815260408083209388168352929052205460ff1615611604576115ac8533612c52565b6115ff5760405162461bcd60e51b81526020600482015260306024820152600080516020615f1f83398151915260448201526f72207468697320746f6b656e2028312960801b6064820152608401610677565b6116cc565b6001600160a01b0380851660009081526006602090815260408083209389168352929052205460ff161561168f5761163c8433612c52565b6115ff5760405162461bcd60e51b81526020600482015260306024820152600080516020615f1f83398151915260448201526f72207468697320746f6b656e2028322960801b6064820152608401610677565b60405162461bcd60e51b815260206004820152601260248201527104e6f207072696365206f776e6572736869760741b6044820152606401610677565b6001600160a01b03948516600090815260076020908152604080832096909716825294855285812093815292845284832091835292529190912055565b6107de816000611bd8565b6112b282826000610c3d565b336117296119af565b6001600160a01b03161461174f5760405162461bcd60e51b815260040161067790615b52565b611757613a8a565b6008805460ff19169055565b6001600160a01b0381166000908152600b6020908152604091829020805483518184028101840190945280845260609392830182828015610644576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116106265750505050509050919050565b61194e6117e760208401846152e1565b6117f760408501602086016152e1565b61180760608601604087016152e1565b8560600135866101c001356040518060e0016040528089608001602081019061183091906152e1565b6001600160a01b0316815260a08a0135602082015260c08a013560408201526060016118636101008b0160e08c016157a2565b600481111561187457611874615e69565b815260006020820181905260408201526060016118996101a08b016101808c016157c3565b60028111156118aa576118aa615e69565b90526040805160e08101909152806118ca6101208c016101008d016152e1565b6001600160a01b031681526101208b013560208201526101408b013560408201526060016119006101808c016101608d016157a2565b600481111561191157611911615e69565b815260006020820181905260408201526060016119366101c08c016101a08d016157c3565b600281111561194757611947615e69565b9052613ac5565b61195b60208301836152e1565b6001600160a01b0316336001600160a01b0316148061199a575061198560408301602084016152e1565b6001600160a01b0316336001600160a01b0316145b156112b2576112b2600254333460008561316f565b6000546001600160a01b031690565b600081815260036020908152604080832060058101546001600160a01b03168452600b90925282205415801590611a005750600881015462010000900460ff16155b15611a0e5750600092915050565b60098101546001600160a01b03166000908152600b602052604090205415801590611a445750600c81015462010000900460ff16155b15611a525750600092915050565b50600192915050565b33611a646119af565b6001600160a01b031614611a8a5760405162461bcd60e51b815260040161067790615b52565b60085460ff16611ada5760405162461bcd60e51b815260206004820152601b60248201527a14ddd85c1cc818dbdb9d1c9858dd081a5cc81b9bdd081bdddb9959602a1b6044820152606401610677565b6112b282828080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061407592505050565b81611b218133612c52565b611b3d5760405162461bcd60e51b815260040161067790615bf5565b611b4a62093a8042615d9c565b821180611b55575081155b611bbb5760405162461bcd60e51b815260206004820152603160248201527f53746172742064617465206e6565647320746f20626520736574206174206c656044820152706173742061207765656b206265666f726560781b6064820152608401610677565b506001600160a01b039091166000908152600d6020526040902055565b60008281526003602052604090206001600d82015460ff166004811115611c0157611c01615e69565b14611c1e5760405162461bcd60e51b815260040161067790615c76565b6005810154600682015460088301546009840154600a850154600c8601546001600160a01b039586169560ff61010095869004811695949091169390910416838015611c675750805b15611cb15760405162461bcd60e51b815260206004820152601a602482015279195e1958dd5d19551c9859194818d85b8818994818d85b1b195960321b6044820152606401610677565b6001600160a01b0386166000908152600b6020526040902054158015611ced57506001600160a01b0383166000908152600b6020526040902054155b611d545760405162461bcd60e51b815260206004820152603260248201527f54726164652063616e206e6f7420626520666f7263656420696620746f6b656e60448201527173206861766520636f6e74726f6c6c65727360701b6064820152608401610677565b60028701546001600160a01b031615611dc75760028701546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028302960c01b6064820152608401610677565b611eef565b8315611e255786546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028312960c01b6064820152608401610677565b8015611e865760018701546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028322960c01b6064820152608401610677565b60405162461bcd60e51b815260206004820152603860248201527f54726164652063616e277420626520666f7263656420617320746f6b656e732060448201527730b932903737ba1030bb30b4b630b136329039b7903330b960411b6064820152608401610677565b8315611f0457611f048960008760008c612d0f565b8015611f1957611f198960018460008c612d0f565b50505050600d92909201805460ff1916600317905550505050565b6000818152600360209081526040808320600581015460068083015460078401546009850154600a860154600b8701546001600160a01b03968716808c52958a52888b2096909216808b529590985295882054949692959194909392919060ff168015611fc657506001600160a01b038084166000908152600660209081526040808320938a168352929052205460ff165b15611fe35760405162461bcd60e51b815260040161067790615bbe565b6001600160a01b0386166000908152600d6020526040902054158061201f57506001600160a01b0386166000908152600d602052604090205442105b156120305750979650505050505050565b6001600160a01b0380871660009081526006602090815260408083209387168352929052205460ff168061208957506001600160a01b038084166000908152600660209081526040808320938a168352929052205460ff165b15612467576001600160a01b038087166000908152600760209081526040808320938716835292815282822087835281528282208483529052205415612116576001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220848352905220546121099086615dd6565b9998505050505050505050565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822084835281528282208783529052205415612191576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220878352905220546121099086615db4565b6001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220828052905220541561220c576001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220828052905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822082805281528282208783529052205415612287576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208280528152828220878352905220546121099086615db4565b6001600160a01b038087166000908152600760209081526040808320938716835292815282822082805281528282208483529052205415612302576001600160a01b03808716600090815260076020908152604080832093871683529281528282208280528152828220848352905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220828052905220541561237d576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220828052905220546121099086615db4565b6001600160a01b0380871660009081526007602090815260408083209387168352928152828220828052815282822090522054156123f2576001600160a01b03808716600090815260076020908152604080832093871683529281528282208280528152828220905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822082805281528282209052205415612467576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208280528152828220905220546121099086615db4565b50979650505050505050565b82806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124ad57600080fd5b505afa1580156124c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e591906152fe565b6001600160a01b0316336001600160a01b0316148061252757506001600160a01b0381166000908152600c6020908152604080832033845290915290205460ff165b61257d5760405162461bcd60e51b815260206004820152602160248201527f53656e646572206973206e6f74206120746f6b656e20636f6e74726f6c6c65726044820152601760f91b6064820152608401610677565b60005b6001600160a01b0385166000908152600b602052604090205481101561261d576001600160a01b0385166000908152600c60209081526040808320600b90925282208054839190859081106125d7576125d7615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061261581615e38565b915050612580565b5060005b828110156126a5576001600160a01b0385166000908152600c6020526040812060019186868581811061265657612656615e7f565b905060200201602081019061266b91906152e1565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558061269d81615e38565b915050612621565b506001600160a01b0384166000908152600b602052604090206107cc908484615035565b336126d26119af565b6001600160a01b0316146126f85760405162461bcd60e51b815260040161067790615b52565b6001600160a01b03811661275d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610677565b6107de8161415e565b336001600160a01b031661279e336040518060400160405280600c81526020016b22a921989a18182a37b5b2b760a11b8152506141ae565b6001600160a01b0316146127d95760405162461bcd60e51b8152602060048201526002602482015261353560f01b6044820152606401610677565b6001600160a01b03851630146128165760405162461bcd60e51b8152602060048201526002602482015261035360f41b6044820152606401610677565b6128568383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061426b92505050565b6128875760405162461bcd60e51b8152602060048201526002602482015261353760f01b6044820152606401610677565b6000612894846020015190565b9050600080516020615f5f83398151915281141561292957604084810151606080870151608088015160a0890151855160e081018752338152602081018c90529586018f905293949193909290916000918101600481526001602082015260006040820152606001600290529050600061290d8a61432c565b905061291e8d878787878787613ac5565b505050505050612b73565b600080516020615edf833981519152811415612b73576040840151845160009060601415612958575060608501515b600082815260036020526040812080549091906001600160a01b038c8116911614612986578160090161298b565b816005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff1660048111156129d9576129d9615e69565b60048111156129ea576129ea615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115612a3057612a30615e69565b6002811115612a4157612a41615e69565b90525080519091506001600160a01b03163314612a935760405162461bcd60e51b815260206004820152601060248201526f15dc9bdb99c81d1bdad95b881cd95b9d60821b6044820152606401610677565b80604001518d14612af15760405162461bcd60e51b815260206004820152602260248201527f546f6b656e73206f66207468652077726f6e6720706172746974696f6e2073656044820152611b9d60f21b6064820152608401610677565b80606001516004811115612b0757612b07615e69565b600414612b605760405162461bcd60e51b815260206004820152602160248201527f546f6b656e73206f66207468652077726f6e67207374616e646172642073656e6044820152601d60fa1b6064820152608401610677565b612b6e848c60008c8761316f565b505050505b5050505050505050505050565b6000612bf585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8901819004810282018101909252878152925087915086908190840183828082843760009201919091525061426b92505050565b9c9b505050505050505050505050565b600180600083604051602001612c1b91906159ea565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6001600160a01b03808316600090815260056020908152604080832093851683529290529081205460ff168061123b5750826001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015612cbc57600080fd5b505afa158015612cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf491906152fe565b6001600160a01b0316826001600160a01b0316149392505050565b60008581526003602052604081209080866001811115612d3157612d31615e69565b14612d3f5781600901612d44565b816005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff166004811115612d9257612d92615e69565b6004811115612da357612da3615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115612de957612de9615e69565b6002811115612dfa57612dfa615e69565b90525060c08101519091506001816002811115612e1957612e19615e69565b1415612e3157612e2c88888888886143c0565b612e3d565b612e3d88888888614638565b5050505050505050565b600082815260036020526040812090612e5f84611f34565b6006830154600a8401549192509080831415612e9857612e8486600084600089612d0f565b612e9386600183600089612d0f565b612f8a565b808311158015612ec857506001600c8501546301000000900460ff166002811115612ec557612ec5615e69565b14155b612f2c5760405162461bcd60e51b815260206004820152602f60248201527f507269636520697320686967686572207468616e20616d6f756e74206573637260448201526e1bddd9590bd85d5d1a1bdc9a5e9959608a1b6064820152608401610677565b612f3b86600084600089612d0f565b612f4a86600185600089612d0f565b6002600c8501546301000000900460ff166002811115612f6c57612f6c615e69565b1415612f8a57612f8a866001612f828685615df5565b600189612d0f565b600d840180546002919060ff1916600183610b3f565b80516020820151604083015160608401516000939291906002816004811115612fcb57612fcb615e69565b141561306157604051636eb1769f60e11b81526001600160a01b03888116600483015230602483015284919086169063dd62ed3e906044015b60206040518083038186803b15801561301c57600080fd5b505afa158015613030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130549190615514565b1015945050505050610bd8565b600381600481111561307557613075615e69565b141561310a5760405163020604bf60e21b81526004810183905230906001600160a01b0386169063081812fc9060240160206040518083038186803b1580156130bd57600080fd5b505afa1580156130d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130f591906152fe565b6001600160a01b031614945050505050610bd8565b600481600481111561311e5761311e615e69565b141561316257604051630bf641e560e11b8152600481018390526001600160a01b0388811660248301523060448301528491908616906317ec83ca90606401613004565b5060019695505050505050565b60008581526003602052604090206001600d82015460ff16600481111561319857613198615e69565b146131b55760405162461bcd60e51b815260040161067790615c76565b80546000906001600160a01b03878116911614156131e1575060018101546001600160a01b03166132a2565b60018201546001600160a01b038781169116141561320a575080546001600160a01b03166132a2565b60018201546001600160a01b031661324757506001810180546001600160a01b0319166001600160a01b03878116919091179091558154166132a2565b60405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79207265676973746572656420686f6c646572732063616e20616363656044820152697074206120747261646560b01b6064820152608401610677565b81546000906001600160a01b038881169116146132c257826009016132c7565b826005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff16600481111561331557613315615e69565b600481111561332657613326615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561336c5761336c615e69565b600281111561337d5761337d615e69565b8152505090508060800151156133e15760405162461bcd60e51b8152602060048201526024808201527f547261646520616c72656164792061636365707465642062792074686520686f604482015263363232b960e11b6064820152608401610677565b60028160c0015160028111156133f9576133f9615e69565b141561374a5760018160600151600481111561341757613417615e69565b1415613474578060200151861461346f5760405162461bcd60e51b815260206004820152601c60248201527b105b5bdd5b9d081bd988115512081a5cc81b9bdd0818dbdc9c9958dd60221b6044820152606401610677565b61385a565b60028160600151600481111561348c5761348c615e69565b141561352057805160208201516040516323b872dd60e01b81526001600160a01b03909216916323b872dd916134c8918b913091600401615a06565b602060405180830381600087803b1580156134e257600080fd5b505af11580156134f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061351a91906154f7565b5061385a565b60038160600151600481111561353857613538615e69565b14156135ab57805160408083015190516323b872dd60e01b81526001600160a01b03909216916323b872dd91613574918b913091600401615a06565b600060405180830381600087803b15801561358e57600080fd5b505af11580156135a2573d6000803e3d6000fd5b5050505061385a565b6004816060015160048111156135c3576135c3615e69565b1480156135ce575084155b156136be5780600001516001600160a01b0316638c0dee9c826040015189308560200151600080516020615eff83398151915260001b60405160200161361691815260200190565b60408051808303601f19018152828252600080516020615eff833981519152602084015291016040516020818303038152906040526040518763ffffffff1660e01b815260040161366c96959493929190615a90565b602060405180830381600087803b15801561368657600080fd5b505af115801561369a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061351a9190615514565b6004816060015160048111156136d6576136d6615e69565b1480156136e257508415155b1561346f578060200151851461346f5760405162461bcd60e51b815260206004820152602760248201527f416d6f756e74206f66204552433134303020746f6b656e73206973206e6f742060448201526618dbdc9c9958dd60ca1b6064820152608401610677565b60018160c00151600281111561376257613762615e69565b14156137df576137738783836149f2565b61346f5760405162461bcd60e51b815260206004820152603760248201527f486f6c64206e6565647320746f2062652070726f766964656420696e20746f6b604482015276195b881cdb585c9d0818dbdb9d1c9858dd08199a5c9cdd604a1b6064820152608401610677565b6137e98782612fa0565b61385a5760405162461bcd60e51b815260206004820152603c60248201527f416c6c6f77616e6365206e6565647320746f2062652070726f7669646564206960448201527b1b881d1bdad95b881cdb585c9d0818dbdb9d1c9858dd08199a5c9cdd60221b6064820152608401610677565b82546001600160a01b03888116911614156138855760088301805461ff001916610100179055613897565b600c8301805461ff0019166101001790555b600483015442101560006138aa8a6119be565b90508180156138c4575060028501546001600160a01b0316155b80156138ef5750600160088601546301000000900460ff1660028111156138ed576138ed615e69565b145b801561391a57506001600c8601546301000000900460ff16600281111561391857613918615e69565b145b80156139235750805b15613a3e5784546000906001600160a01b038b8116911614613948578560050161394d565b856009015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff16600481111561399b5761399b615e69565b60048111156139ac576139ac615e69565b8152600382015460ff610100820481161515602084015262010000820481161515604084015260609092019163010000009091041660028111156139f2576139f2615e69565b6002811115613a0357613a03615e69565b9052509050613a13858b836149f2565b15613a3c5760088601805461010061ff00199182168117909255600c8801805490911690911790555b505b60028501546001600160a01b0316158015613a5d5750613a5d8a61104b565b8015613a665750805b8015613a6f5750815b15613a7e57613a7e8a87612e47565b50505050505050505050565b33613a936119af565b6001600160a01b031614613ab95760405162461bcd60e51b815260040161067790615b52565b613ac3600061415e565b565b600182606001516004811115613add57613add615e69565b1415613b185760028260c001516002811115613afb57613afb615e69565b14613b185760405162461bcd60e51b815260040161067790615adb565b600181606001516004811115613b3057613b30615e69565b1415613b6b5760028160c001516002811115613b4e57613b4e615e69565b14613b6b5760405162461bcd60e51b815260040161067790615adb565b60018260c001516002811115613b8357613b83615e69565b1415613bff57600282606001516004811115613ba157613ba1615e69565b1480613bc25750600482606001516004811115613bc057613bc0615e69565b145b613bde5760405162461bcd60e51b815260040161067790615c2c565b6040820151613bff5760405162461bcd60e51b815260040161067790615ce9565b60018160c001516002811115613c1757613c17615e69565b1415613c9357600281606001516004811115613c3557613c35615e69565b1480613c565750600481606001516004811115613c5457613c54615e69565b145b613c725760405162461bcd60e51b815260040161067790615c2c565b6040810151613c935760405162461bcd60e51b815260040161067790615ce9565b60085460ff1615613d3a576001600160a01b0385166000908152600a602052604090205460ff16613d3a5760405162461bcd60e51b815260206004820152604560248201527f5472616465206578656375746572206e6565647320746f2062656c6f6e67207460448201527f6f20746865206c697374206f6620616c6c6f7765642074726164652065786563606482015264757465727360d81b608482015260a401610677565b6001600160a01b038716613da95760405162461bcd60e51b815260206004820152603060248201527f412074726164652063616e206e6f74206265206372656174656420776974682060448201526f746865207a65726f206164647265737360801b6064820152608401610677565b60028054906000613db983615e38565b91905055506000428511613dd957613dd462278d0042615d9c565b613ddb565b845b9050604051806101000160405280896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b0316815260200182815260200185815260200184815260200183815260200160016004811115613e4157613e41615e69565b905260028054600090815260036020818152604092839020855181546001600160a01b039182166001600160a01b03199182161783558784015160018085018054928516928416929092179091558887015197840180549884169883169890981790975560608089015195840195909555608088015160048085019190915560a089015180516005860180549190951693169290921783559381015160068401559485015160078301559284015160088201805492969193909260ff191691908490811115613f1257613f12615e69565b0217905550608082015160038201805460a08501511515620100000262ff000019931515610100029390931662ffff0019909116179190911780825560c0840151919063ff00000019166301000000836002811115613f7357613f73615e69565b0217905550505060c082015180516009830180546001600160a01b0319166001600160a01b039092169190911781556020820151600a8401556040820151600b8401556060820151600c8401805460ff19166001836004811115613fd957613fd9615e69565b0217905550608082015160038201805460a08501511515620100000262ff000019931515610100029390931662ffff0019909116179190911780825560c0840151919063ff0000001916630100000083600281111561403a5761403a615e69565b0217905550505060e0820151600d8201805460ff1916600183600481111561406457614064615e69565b021790555050505050505050505050565b60005b6009548110156140e1576000600a60006009848154811061409b5761409b615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055806140d981615e38565b915050614078565b5060005b815181101561414a576001600a600084848151811061410657614106615e7f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061414281615e38565b9150506140e5565b5080516112b2906009906020840190615103565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826040516020016141c291906159ea565b60408051601f1981840301815290829052805160209091012063555ddc6560e11b82529150731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca906142139087908590600401615a2a565b60206040518083038186803b15801561422b57600080fd5b505afa15801561423f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061426391906152fe565b949350505050565b600081516000141561427f57506000610bd8565b600061428c846020015190565b905083516101401480156142ad5750600080516020615f5f83398151915281145b156142bc576001915050610bd8565b8351604014806142cd575083516060145b80156142e65750600080516020615edf83398151915281145b156142f5576001915050610bd8565b835160201480156143135750600080516020615eff83398151915281145b15614322576001915050610bd8565b6000915050610bd8565b614334615158565b60c082015160e0808401516101008501516101208601516101408701516040805195860181526001600160a01b03871686526020860185905285018390529293919290916060810183600481111561438e5761438e615e69565b815260006020820181905260408201526060018260028111156143b3576143b3615e69565b9052979650505050505050565b600085815260036020526040812090808660018111156143e2576143e2615e69565b146143fa5760018201546001600160a01b0316614406565b81546001600160a01b03165b905060008087600181111561441d5761441d615e69565b146144325782546001600160a01b0316614441565b60018301546001600160a01b03165b905060008088600181111561445857614458615e69565b14614466578360090161446b565b836005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff1660048111156144b9576144b9615e69565b60048111156144ca576144ca615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561451057614510615e69565b600281111561452157614521615e69565b815250509050836003015442111561454b5760405162461bcd60e51b815260040161067790615b21565b805160408201516060830151600281600481111561456b5761456b615e69565b14806145885750600481600481111561458657614586615e69565b145b6145d45760405162461bcd60e51b815260206004820152601f60248201527f546f6b656e207374616e64617264206d75737420626520686f6c6461626c65006044820152606401610677565b6145df8686866149f2565b61461d5760405162461bcd60e51b815260206004820152600f60248201526e121bdb19081b5d5cdd08195e1a5cdd608a1b6044820152606401610677565b61462a8383838b89614d4f565b505050505050505050505050565b6000848152600360205260408120908085600181111561465a5761465a615e69565b146146725760018201546001600160a01b031661467e565b81546001600160a01b03165b905060008086600181111561469557614695615e69565b146146aa5782546001600160a01b03166146b9565b60018301546001600160a01b03165b90506000808760018111156146d0576146d0615e69565b146146de57836009016146e3565b836005015b805460028083015460038401549394506001600160a01b039092169260ff1690869060038601546301000000900460ff16600281111561472557614725615e69565b141561472e5750305b881561473c57869550614760565b87600301544211156147605760405162461bcd60e51b815260040161067790615b21565b600182600481111561477457614774615e69565b14156147b95760405186906001600160a01b038216908c156108fc02908d906000818181858888f193505050501580156147b2573d6000803e3d6000fd5b505061462a565b60028260048111156147cd576147cd615e69565b141561489a576001600160a01b03811630141561486a5760405163a9059cbb60e01b81526001600160a01b0385169063a9059cbb906148129089908e90600401615a2a565b602060405180830381600087803b15801561482c57600080fd5b505af1158015614840573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061486491906154f7565b5061462a565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906148129084908a908f90600401615a06565b60038260048111156148ae576148ae615e69565b141561491b576040516323b872dd60e01b81526001600160a01b038516906323b872dd906148e49084908a908890600401615a06565b600060405180830381600087803b1580156148fe57600080fd5b505af1158015614912573d6000803e3d6000fd5b5050505061462a565b600482600481111561492f5761492f615e69565b141561462a576040516323037ba760e21b8152600481018490526001600160a01b0382811660248301528781166044830152606482018c905260c06084830152600060c4830181905260e060a484015260e4830152851690638c0dee9c9061010401602060405180830381600087803b1580156149ab57600080fd5b505af11580156149bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149e39190615514565b50505050505050505050505050565b80516040820151606083015160009291906004816004811115614a1757614a17615e69565b1415614bbf576000614a57846040518060400160405280601681526020017522a921989a18182a37b5b2b739ab30b634b230ba37b960511b8152506141ae565b90506001600160a01b038116614a7f5760405162461bcd60e51b815260040161067790615ca4565b600080600080600080866001600160a01b03166312da4de68b8b6040518363ffffffff1660e01b8152600401614ab6929190615a2a565b6101206040518083038186803b158015614acf57600080fd5b505afa158015614ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614b079190615552565b9d50959b5093995090975090955090935060019250614b24915050565b866006811115614b3657614b36615e69565b148015614b4657508b6020015183145b8015614b7457508d6001600160a01b0316856001600160a01b03161480614b7457506001600160a01b038516155b8015614b9157508c6001600160a01b0316846001600160a01b0316145b8015614bae575080151580614bae57506001600160a01b03821630145b9a505050505050505050505061123b565b6002816004811115614bd357614bd3615e69565b1415614d0757604051636d0f612360e11b8152600481018390526000906001600160a01b0385169063da1ec2469060240160e06040518083038186803b158015614c1c57600080fd5b505afa158015614c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c5491906157e4565b9050876001600160a01b031681600001516001600160a01b03161480614c82575080516001600160a01b0316155b8015614ca35750866001600160a01b031681602001516001600160a01b0316145b8015614cb6575085602001518160600151145b8015614cd7575060018160c001516006811115614cd557614cd5615e69565b145b8015614cfc575060a0810151151580614cfc575060408101516001600160a01b031630145b94505050505061123b565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420746f6b656e5374616e646172642070726f766964656400006044820152606401610677565b6002836004811115614d6357614d63615e69565b1415614df5576001600160a01b038516614d8f5760405162461bcd60e51b815260040161067790615b87565b60405163445850af60e01b815260048101859052602481018390526001600160a01b0386169063445850af90604401600060405180830381600087803b158015614dd857600080fd5b505af1158015614dec573d6000803e3d6000fd5b50505050614fe6565b6004836004811115614e0957614e09615e69565b1415614fa5576001600160a01b038516614e355760405162461bcd60e51b815260040161067790615b87565b6000614e6f866040518060400160405280601681526020017522a921989a18182a37b5b2b739ab30b634b230ba37b960511b8152506141ae565b90506001600160a01b038116614e975760405162461bcd60e51b815260040161067790615ca4565b60405163096d26f360e11b81526000906001600160a01b038316906312da4de690614ec8908a908a90600401615a2a565b6101206040518083038186803b158015614ee157600080fd5b505afa158015614ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f199190615552565b5050604051631531bc2360e21b81526001600160a01b038f81166004830152602482018f905260448201859052606482018d905293985092891696506354c6f08c95505060849091019250614f6c915050565b600060405180830381600087803b158015614f8657600080fd5b505af1158015614f9a573d6000803e3d6000fd5b505050505050614fe6565b60405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081d1bdad95b881cdd185b99185c9960521b6044820152606401610677565b604080518381526001600160a01b0383811660208301528692908816917ff16e81ebbf4a87ccaa6230614a9d911f4d2a9e9274e2aaca49922f1779959489910160405180910390a35050505050565b828054828255906000526020600020908101928215615088579160200282015b828111156150885781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190615055565b50615094929150615195565b5090565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016150ea615158565b81526020016150f7615158565b81526020016000905290565b828054828255906000526020600020908101928215615088579160200282015b8281111561508857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190615123565b6040805160e08101825260008082526020820181905291810182905290606082019081526000602082018190526040820181905260609091015290565b5b808211156150945760008155600101615196565b80356151b581615ebb565b919050565b60008083601f8401126151cc57600080fd5b5081356001600160401b038111156151e357600080fd5b6020830191508360208260051b85010111156151fe57600080fd5b9250929050565b60008083601f84011261521757600080fd5b5081356001600160401b0381111561522e57600080fd5b6020830191508360208285010111156151fe57600080fd5b600082601f83011261525757600080fd5b81356001600160401b038082111561527157615271615e95565b604051601f8301601f19908116603f0116810190828211818310171561529957615299615e95565b816040528381528660208588010111156152b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b8051600781106151b557600080fd5b6000602082840312156152f357600080fd5b813561123b81615ebb565b60006020828403121561531057600080fd5b815161123b81615ebb565b6000806040838503121561532e57600080fd5b823561533981615ebb565b9150602083013561534981615ebb565b809150509250929050565b60008060006060848603121561536957600080fd5b833561537481615ebb565b9250602084013561538481615ebb565b9150604084013561539481615ed0565b809150509250925092565b600080600080608085870312156153b557600080fd5b84356153c081615ebb565b935060208501356153d081615ebb565b93969395505050506040820135916060013590565b600080600080600060a086880312156153fd57600080fd5b853561540881615ebb565b9450602086013561541881615ebb565b94979496505050506040830135926060810135926080909101359150565b60008060006040848603121561544b57600080fd5b833561545681615ebb565b925060208401356001600160401b0381111561547157600080fd5b61547d868287016151ba565b9497909650939450505050565b6000806040838503121561549d57600080fd5b82356154a881615ebb565b946020939093013593505050565b600080602083850312156154c957600080fd5b82356001600160401b038111156154df57600080fd5b6154eb858286016151ba565b90969095509350505050565b60006020828403121561550957600080fd5b815161123b81615ed0565b60006020828403121561552657600080fd5b5051919050565b6000806040838503121561554057600080fd5b82359150602083013561534981615ebb565b60008060008060008060008060006101208a8c03121561557157600080fd5b8951985060208a015161558381615ebb565b60408b015190985061559481615ebb565b60608b01519097506155a581615ebb565b8096505060808a0151945060a08a0151935060c08a0151925060e08a015191506155d26101008b016152d2565b90509295985092959850929598565b60008060008060008060008060008060006101008c8e03121561560357600080fd5b6001600160401b038c3581101561561957600080fd5b6156268e8e358f01615205565b909c509a5060208d0135995061563e60408e016151aa565b985061564c60608e016151aa565b975061565a60808e016151aa565b965060a08d013595508060c08e0135111561567457600080fd5b6156848e60c08f01358f01615205565b909550935060e08d013581101561569a57600080fd5b506156ab8d60e08e01358e01615205565b81935080925050509295989b509295989b9093969950565b6000806000806000806000806000806101008b8d0312156156e357600080fd5b8a356001600160401b03808211156156fa57600080fd5b6157068e838f01615205565b909c509a5060208d013599508a915061572160408e016151aa565b985061572f60608e016151aa565b975061573d60808e016151aa565b965060a08d0135955060c08d013591508082111561575a57600080fd5b6157668e838f01615246565b945060e08d013591508082111561577c57600080fd5b506157898d828e01615205565b915080935050809150509295989b9194979a5092959850565b6000602082840312156157b457600080fd5b81356005811061123b57600080fd5b6000602082840312156157d557600080fd5b81356003811061123b57600080fd5b600060e082840312156157f657600080fd5b60405160e081016001600160401b038111828210171561581857615818615e95565b604052825161582681615ebb565b8152602083015161583681615ebb565b6020820152604083015161584981615ebb565b80604083015250606083015160608201526080830151608082015260a083015160a082015261587a60c084016152d2565b60c08201529392505050565b60008082840361020081121561589b57600080fd5b6101e0808212156158ab57600080fd5b9395938601359450505050565b6000602082840312156158ca57600080fd5b5035919050565b600080604083850312156158e457600080fd5b82359150602083013561534981615ed0565b60008060006060848603121561590b57600080fd5b83359250602084013561591d81615ed0565b929592945050506040919091013590565b6000806040838503121561594157600080fd5b50508035926020909101359150565b60008151808452615968816020860160208601615e0c565b601f01601f19169290920160200192915050565b80516001600160a01b03168252602080820151908301526040808201519083015260608101516159ab81615eab565b8060608401525060808101511515608083015260a0810151151560a083015260c0810151600381106159df576159df615e69565b8060c0840152505050565b600082516159fc818460208701615e0c565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015615a845783516001600160a01b031683529284019291840191600101615a5f565b50909695505050505050565b8681526001600160a01b038681166020830152851660408201526060810184905260c060808201819052600090615ac990830185615950565b82810360a08401526121098185615950565b60208082526026908201527f457468657220747261646573206e65656420746f206265206f66207479706520604082015265457363726f7760d01b606082015260800190565b602080825260179082015276115e1c1a5c985d1a5bdb8819185d19481a5cc81c185cdd604a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f746f6b656e2063616e206e6f742062652061207a65726f206164647265737300604082015260600190565b6020808252601e908201527f436f6d7065746974696f6e206f6e207072696365206f776e6572736869700000604082015260600190565b6020808252601d908201527f53656e646572206973206e6f742061207072696365206f7261636c652e000000604082015260600190565b6020808252602a908201527f496e76616c696420746f6b656e207374616e6461726420666f7220686f6c64206040820152697472616465207479706560b01b606082015260800190565b6020808252601490820152735472616465206973206e6f742070656e64696e6760601b604082015260600190565b60208082526025908201527f746f6b656e20686173206e6f20686f6c6461626c6520746f6b656e20657874656040820152643739b4b7b760d91b606082015260800190565b602080825260139082015272139bc81a1bdb191259081cdc1958da599a5959606a1b604082015260600190565b60006102808201905060018060a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a0830151615d6b60a084018261597c565b5060c0830151615d7f61018084018261597c565b5060e0830151615d8e81615eab565b806102608401525092915050565b60008219821115615daf57615daf615e53565b500190565b600082615dd157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615615df057615df0615e53565b500290565b600082821015615e0757615e07615e53565b500390565b60005b83811015615e27578181015183820152602001615e0f565b83811115610e205750506000910152565b6000600019821415615e4c57615e4c615e53565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600581106107de576107de615e69565b6001600160a01b03811681146107de57600080fd5b80151581146107de57600080fdfeddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa507269636520736574746572206973206e6f7420616e206f7261636c6520666f53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc53656e646572206973206e6f7420616c6c6f77656420746f20666f7263652074a26469706673582212207720d0a673a1b30b63bdc444b48c97891945c2b04dc9054c0710026db0336bf664736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106101735760003560e01c8063013745181461017857806301636f4e146101ae57806302d2838b146101d057806309ec6cc7146101f05780630baf41a6146102105780631af6649f14610230578063249cb3fa146102605780632cb437d81461028e5780632db25e05146102ae57806330f97699146102db578063353414641461031157806345a06cb21461033157806351965a8314610346578063582dcd1314610359578063587274671461037957806361108c06146103995780636775ce04146103b9578063715018a6146103d9578063759561fa146103ee5780638595240b1461040e57806389a0c9e7146104655780638da5cb5b14610478578063935259a8146104a5578063a22ae631146104c5578063c9adffe2146104e5578063d95b585e14610505578063e757223014610525578063ebbca40714610545578063ec96dfb41461055a578063f2fde38b1461057a578063f464b5761461059a578063f55886df146105ba575b600080fd5b34801561018457600080fd5b506101986101933660046152e1565b6105da565b6040516101a59190615a43565b60405180910390f35b3480156101ba57600080fd5b506101ce6101c9366004615436565b610650565b005b3480156101dc57600080fd5b506101ce6101eb3660046158b8565b6107d3565b3480156101fc57600080fd5b506101ce61020b3660046158b8565b6107e1565b34801561021c57600080fd5b506101ce61022b366004615354565b610b4c565b34801561023c57600080fd5b5061025061024b36600461531b565b610bae565b60405190151581526020016101a5565b34801561026c57600080fd5b5061028061027b36600461552d565b610bde565b6040519081526020016101a5565b34801561029a57600080fd5b506101ce6102a93660046158f6565b610c3d565b3480156102ba57600080fd5b506102ce6102c93660046158b8565b610e26565b6040516101a59190615d16565b3480156102e757600080fd5b506102806102f63660046152e1565b6001600160a01b03166000908152600d602052604090205490565b34801561031d57600080fd5b5061025061032c3660046158b8565b61104b565b34801561033d57600080fd5b50610198611242565b6101ce61035436600461592e565b6112a4565b34801561036557600080fd5b506101ce61037436600461592e565b6112b6565b34801561038557600080fd5b506101ce6103943660046153e5565b6114fd565b3480156103a557600080fd5b506101ce6103b43660046158b8565b611709565b3480156103c557600080fd5b506101ce6103d43660046158d1565b611714565b3480156103e557600080fd5b506101ce611720565b3480156103fa57600080fd5b506101986104093660046152e1565b611763565b34801561041a57600080fd5b5061028061042936600461539f565b6001600160a01b039384166000908152600760209081526040808320959096168252938452848120928152918352838220908252909152205490565b6101ce610473366004615886565b6117d7565b34801561048457600080fd5b5061048d6119af565b6040516001600160a01b0390911681526020016101a5565b3480156104b157600080fd5b506102506104c03660046158b8565b6119be565b3480156104d157600080fd5b506101ce6104e03660046154b6565b611a5b565b3480156104f157600080fd5b506101ce61050036600461548a565b611b16565b34801561051157600080fd5b506101ce61052036600461592e565b611bd8565b34801561053157600080fd5b506102806105403660046158b8565b611f34565b34801561055157600080fd5b50600254610280565b34801561056657600080fd5b506101ce610575366004615436565b612473565b34801561058657600080fd5b506101ce6105953660046152e1565b6126c9565b3480156105a657600080fd5b506101ce6105b53660046156c3565b612766565b3480156105c657600080fd5b506102506105d53660046155e1565b612b80565b6001600160a01b03811660009081526004602090815260409182902080548351818402810184019094528084526060939283018282801561064457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610626575b50505050509050919050565b8261065b8133612c52565b6106805760405162461bcd60e51b815260040161067790615bf5565b60405180910390fd5b60005b6001600160a01b038516600090815260046020526040902054811015610720576001600160a01b0385166000908152600560209081526040808320600490925282208054839190859081106106da576106da615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061071881615e38565b915050610683565b5060005b828110156107a8576001600160a01b038516600090815260056020526040812060019186868581811061075957610759615e7f565b905060200201602081019061076e91906152e1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806107a081615e38565b915050610724565b506001600160a01b03841660009081526004602052604090206107cc908484615035565b5050505050565b6107de8160006112b6565b50565b60008181526003602052604090206001600d82015460ff16600481111561080a5761080a615e69565b146108275760405162461bcd60e51b815260040161067790615c76565b60068101546008820154600a830154600c84015460ff61010093849004811693909104168280156108555750805b156109625760028501546001600160a01b03163314806108a35750846003015442101580156108a3575084546001600160a01b03163314806108a3575060018501546001600160a01b031633145b6108ef5760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028302960b81b6064820152608401610677565b600260088601546301000000900460ff16600281111561091157610911615e69565b14156109265761092686600086600182612d0f565b6002600c8601546301000000900460ff16600281111561094857610948615e69565b141561095d5761095d86600184816000612d0f565b610b2d565b8215610a1e5760028501546001600160a01b031633148061099b57508460030154421015801561099b575084546001600160a01b031633145b6109e75760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028312960b81b6064820152608401610677565b600260088601546301000000900460ff166002811115610a0957610a09615e69565b141561095d5761095d86600086600182612d0f565b8015610aa65760028501546001600160a01b0316331480610a5a575084600301544210158015610a5a575060018501546001600160a01b031633145b6109265760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028322960b81b6064820152608401610677565b60028501546001600160a01b0316331480610aca575084546001600160a01b031633145b80610ae1575060018501546001600160a01b031633145b610b2d5760405162461bcd60e51b81526020600482015260296024820152600080516020615f3f83398151915260448201526874726164652028332960b81b6064820152608401610677565b600d850180546004919060ff19166001835b0217905550505050505050565b82610b578133612c52565b610b735760405162461bcd60e51b815260040161067790615bf5565b506001600160a01b03928316600090815260066020908152604080832094909516825292909252919020805460ff1916911515919091179055565b6001600160a01b0380831660009081526006602090815260408083209385168352929052205460ff165b92915050565b60008281526001602052604081205460ff1615610c355760405173455243313832305f4143434550545f4d4147494360601b6020820152603401604051602081830303815290604052805190602001209050610bd8565b506000610bd8565b60008381526003602052604090206001600d82015460ff166004811115610c6657610c66615e69565b14610c835760405162461bcd60e51b815260040161067790615c76565b60058101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1680610ce0575060098101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff165b610d525760405162461bcd60e51b815260206004820152603d60248201527f4f6e6c7920746f6b656e20636f6e74726f6c6c657273206f6620696e766f6c7660448201527f656420746f6b656e732063616e20617070726f766520612074726164650000006064820152608401610677565b60058101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1615610d9a5760088101805462ff0000191662010000851515021790555b60098101546001600160a01b03166000908152600c6020908152604080832033845290915290205460ff1615610de257600c8101805462ff0000191662010000851515021790555b60028101546001600160a01b0316158015610e015750610e018461104b565b8015610e115750610e11846119be565b15610e2057610e208483612e47565b50505050565b610e2e615098565b60008281526003602081815260409283902083516101008101855281546001600160a01b03908116825260018301548116828501526002830154811682870152938201546060808301919091526004808401546080840152865160e0810188526005850180549097168152600685015495810195909552600784015496850196909652600883015492959194869460a08701949093919284019160ff90911690811115610edd57610edd615e69565b6004811115610eee57610eee615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115610f3457610f34615e69565b6002811115610f4557610f45615e69565b90525081526040805160e0810182526009840180546001600160a01b03168252600a850154602083810191909152600b86015493830193909352600c85015492909301929091606083019060ff166004811115610fa457610fa4615e69565b6004811115610fb557610fb5615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115610ffb57610ffb615e69565b600281111561100c5761100c615e69565b9052508152600d82015460209091019060ff16600481111561103057611030615e69565b600481111561104157611041615e69565b9052509392505050565b60008181526003602052604081206001600d82015460ff16600481111561107457611074615e69565b141561121957600060088201546301000000900460ff16600281111561109c5761109c615e69565b148015611172575080546040805160e0810182526005840180546001600160a01b039081168352600686015460208401526007860154938301939093526008850154611170949390931692606083019060ff16600481111561110057611100615e69565b600481111561111157611111615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561115757611157615e69565b600281111561116857611168615e69565b905250612fa0565b155b156111805750600092915050565b6000600c8201546301000000900460ff1660028111156111a2576111a2615e69565b14801561120b575060018101546040805160e0810182526009840180546001600160a01b039081168352600a8601546020840152600b86015493830193909352600c850154611209949390931692606083019060ff16600481111561110057611100615e69565b155b156112195750600092915050565b6008810154610100900460ff16801561123b5750600c810154610100900460ff165b9392505050565b6060600980548060200260200160405190810160405280929190818152602001828054801561129a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161127c575b5050505050905090565b6112b282333460008561316f565b5050565b60008281526003602052604090206001600d82015460ff1660048111156112df576112df615e69565b146112fc5760405162461bcd60e51b815260040161067790615c76565b60028101546001600160a01b0316156113935760028101546001600160a01b03163314611393576040805162461bcd60e51b81526020600482015260248101919091527f54726164652063616e206f6e6c7920626520657865637574656420627920657860448201527f65637574657220646566696e6564206174207472616465206372656174696f6e6064820152608401610677565b80600401544210156114065760405162461bcd60e51b815260206004820152603660248201527f54726164652063616e206f6e6c79206265206578656375746564206f6e206f7260448201527520616674657220736574746c656d656e74206461746560501b6064820152608401610677565b61140f8361104b565b6114785760405162461bcd60e51b815260206004820152603460248201527f547261646520686173206e6f74206265656e20616363657074656420627920616044820152731b1b081d1bdad95b881a1bdb19195c9cc81e595d60621b6064820152608401610677565b611481836119be565b6114ee5760405162461bcd60e51b815260206004820152603860248201527f547261646520686173206e6f74206265656e20617070726f76656420627920616044820152771b1b081d1bdad95b8818dbdb9d1c9bdb1b195c9cc81e595d60421b6064820152608401610677565b6114f88383612e47565b505050565b6001600160a01b0380861660009081526006602090815260408083209388168352929052205460ff16801561155757506001600160a01b0380851660009081526006602090815260408083209389168352929052205460ff165b156115745760405162461bcd60e51b815260040161067790615bbe565b6001600160a01b0380861660009081526006602090815260408083209388168352929052205460ff1615611604576115ac8533612c52565b6115ff5760405162461bcd60e51b81526020600482015260306024820152600080516020615f1f83398151915260448201526f72207468697320746f6b656e2028312960801b6064820152608401610677565b6116cc565b6001600160a01b0380851660009081526006602090815260408083209389168352929052205460ff161561168f5761163c8433612c52565b6115ff5760405162461bcd60e51b81526020600482015260306024820152600080516020615f1f83398151915260448201526f72207468697320746f6b656e2028322960801b6064820152608401610677565b60405162461bcd60e51b815260206004820152601260248201527104e6f207072696365206f776e6572736869760741b6044820152606401610677565b6001600160a01b03948516600090815260076020908152604080832096909716825294855285812093815292845284832091835292529190912055565b6107de816000611bd8565b6112b282826000610c3d565b336117296119af565b6001600160a01b03161461174f5760405162461bcd60e51b815260040161067790615b52565b611757613a8a565b6008805460ff19169055565b6001600160a01b0381166000908152600b6020908152604091829020805483518184028101840190945280845260609392830182828015610644576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116106265750505050509050919050565b61194e6117e760208401846152e1565b6117f760408501602086016152e1565b61180760608601604087016152e1565b8560600135866101c001356040518060e0016040528089608001602081019061183091906152e1565b6001600160a01b0316815260a08a0135602082015260c08a013560408201526060016118636101008b0160e08c016157a2565b600481111561187457611874615e69565b815260006020820181905260408201526060016118996101a08b016101808c016157c3565b60028111156118aa576118aa615e69565b90526040805160e08101909152806118ca6101208c016101008d016152e1565b6001600160a01b031681526101208b013560208201526101408b013560408201526060016119006101808c016101608d016157a2565b600481111561191157611911615e69565b815260006020820181905260408201526060016119366101c08c016101a08d016157c3565b600281111561194757611947615e69565b9052613ac5565b61195b60208301836152e1565b6001600160a01b0316336001600160a01b0316148061199a575061198560408301602084016152e1565b6001600160a01b0316336001600160a01b0316145b156112b2576112b2600254333460008561316f565b6000546001600160a01b031690565b600081815260036020908152604080832060058101546001600160a01b03168452600b90925282205415801590611a005750600881015462010000900460ff16155b15611a0e5750600092915050565b60098101546001600160a01b03166000908152600b602052604090205415801590611a445750600c81015462010000900460ff16155b15611a525750600092915050565b50600192915050565b33611a646119af565b6001600160a01b031614611a8a5760405162461bcd60e51b815260040161067790615b52565b60085460ff16611ada5760405162461bcd60e51b815260206004820152601b60248201527a14ddd85c1cc818dbdb9d1c9858dd081a5cc81b9bdd081bdddb9959602a1b6044820152606401610677565b6112b282828080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061407592505050565b81611b218133612c52565b611b3d5760405162461bcd60e51b815260040161067790615bf5565b611b4a62093a8042615d9c565b821180611b55575081155b611bbb5760405162461bcd60e51b815260206004820152603160248201527f53746172742064617465206e6565647320746f20626520736574206174206c656044820152706173742061207765656b206265666f726560781b6064820152608401610677565b506001600160a01b039091166000908152600d6020526040902055565b60008281526003602052604090206001600d82015460ff166004811115611c0157611c01615e69565b14611c1e5760405162461bcd60e51b815260040161067790615c76565b6005810154600682015460088301546009840154600a850154600c8601546001600160a01b039586169560ff61010095869004811695949091169390910416838015611c675750805b15611cb15760405162461bcd60e51b815260206004820152601a602482015279195e1958dd5d19551c9859194818d85b8818994818d85b1b195960321b6044820152606401610677565b6001600160a01b0386166000908152600b6020526040902054158015611ced57506001600160a01b0383166000908152600b6020526040902054155b611d545760405162461bcd60e51b815260206004820152603260248201527f54726164652063616e206e6f7420626520666f7263656420696620746f6b656e60448201527173206861766520636f6e74726f6c6c65727360701b6064820152608401610677565b60028701546001600160a01b031615611dc75760028701546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028302960c01b6064820152608401610677565b611eef565b8315611e255786546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028312960c01b6064820152608401610677565b8015611e865760018701546001600160a01b03163314611dc25760405162461bcd60e51b81526020600482015260286024820152600080516020615f7f833981519152604482015267726164652028322960c01b6064820152608401610677565b60405162461bcd60e51b815260206004820152603860248201527f54726164652063616e277420626520666f7263656420617320746f6b656e732060448201527730b932903737ba1030bb30b4b630b136329039b7903330b960411b6064820152608401610677565b8315611f0457611f048960008760008c612d0f565b8015611f1957611f198960018460008c612d0f565b50505050600d92909201805460ff1916600317905550505050565b6000818152600360209081526040808320600581015460068083015460078401546009850154600a860154600b8701546001600160a01b03968716808c52958a52888b2096909216808b529590985295882054949692959194909392919060ff168015611fc657506001600160a01b038084166000908152600660209081526040808320938a168352929052205460ff165b15611fe35760405162461bcd60e51b815260040161067790615bbe565b6001600160a01b0386166000908152600d6020526040902054158061201f57506001600160a01b0386166000908152600d602052604090205442105b156120305750979650505050505050565b6001600160a01b0380871660009081526006602090815260408083209387168352929052205460ff168061208957506001600160a01b038084166000908152600660209081526040808320938a168352929052205460ff165b15612467576001600160a01b038087166000908152600760209081526040808320938716835292815282822087835281528282208483529052205415612116576001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220848352905220546121099086615dd6565b9998505050505050505050565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822084835281528282208783529052205415612191576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220878352905220546121099086615db4565b6001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220828052905220541561220c576001600160a01b03808716600090815260076020908152604080832093871683529281528282208783528152828220828052905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822082805281528282208783529052205415612287576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208280528152828220878352905220546121099086615db4565b6001600160a01b038087166000908152600760209081526040808320938716835292815282822082805281528282208483529052205415612302576001600160a01b03808716600090815260076020908152604080832093871683529281528282208280528152828220848352905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220828052905220541561237d576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208483528152828220828052905220546121099086615db4565b6001600160a01b0380871660009081526007602090815260408083209387168352928152828220828052815282822090522054156123f2576001600160a01b03808716600090815260076020908152604080832093871683529281528282208280528152828220905220546121099086615dd6565b6001600160a01b038084166000908152600760209081526040808320938a16835292815282822082805281528282209052205415612467576001600160a01b038084166000908152600760209081526040808320938a1683529281528282208280528152828220905220546121099086615db4565b50979650505050505050565b82806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124ad57600080fd5b505afa1580156124c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e591906152fe565b6001600160a01b0316336001600160a01b0316148061252757506001600160a01b0381166000908152600c6020908152604080832033845290915290205460ff165b61257d5760405162461bcd60e51b815260206004820152602160248201527f53656e646572206973206e6f74206120746f6b656e20636f6e74726f6c6c65726044820152601760f91b6064820152608401610677565b60005b6001600160a01b0385166000908152600b602052604090205481101561261d576001600160a01b0385166000908152600c60209081526040808320600b90925282208054839190859081106125d7576125d7615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790558061261581615e38565b915050612580565b5060005b828110156126a5576001600160a01b0385166000908152600c6020526040812060019186868581811061265657612656615e7f565b905060200201602081019061266b91906152e1565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558061269d81615e38565b915050612621565b506001600160a01b0384166000908152600b602052604090206107cc908484615035565b336126d26119af565b6001600160a01b0316146126f85760405162461bcd60e51b815260040161067790615b52565b6001600160a01b03811661275d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610677565b6107de8161415e565b336001600160a01b031661279e336040518060400160405280600c81526020016b22a921989a18182a37b5b2b760a11b8152506141ae565b6001600160a01b0316146127d95760405162461bcd60e51b8152602060048201526002602482015261353560f01b6044820152606401610677565b6001600160a01b03851630146128165760405162461bcd60e51b8152602060048201526002602482015261035360f41b6044820152606401610677565b6128568383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061426b92505050565b6128875760405162461bcd60e51b8152602060048201526002602482015261353760f01b6044820152606401610677565b6000612894846020015190565b9050600080516020615f5f83398151915281141561292957604084810151606080870151608088015160a0890151855160e081018752338152602081018c90529586018f905293949193909290916000918101600481526001602082015260006040820152606001600290529050600061290d8a61432c565b905061291e8d878787878787613ac5565b505050505050612b73565b600080516020615edf833981519152811415612b73576040840151845160009060601415612958575060608501515b600082815260036020526040812080549091906001600160a01b038c8116911614612986578160090161298b565b816005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff1660048111156129d9576129d9615e69565b60048111156129ea576129ea615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115612a3057612a30615e69565b6002811115612a4157612a41615e69565b90525080519091506001600160a01b03163314612a935760405162461bcd60e51b815260206004820152601060248201526f15dc9bdb99c81d1bdad95b881cd95b9d60821b6044820152606401610677565b80604001518d14612af15760405162461bcd60e51b815260206004820152602260248201527f546f6b656e73206f66207468652077726f6e6720706172746974696f6e2073656044820152611b9d60f21b6064820152608401610677565b80606001516004811115612b0757612b07615e69565b600414612b605760405162461bcd60e51b815260206004820152602160248201527f546f6b656e73206f66207468652077726f6e67207374616e646172642073656e6044820152601d60fa1b6064820152608401610677565b612b6e848c60008c8761316f565b505050505b5050505050505050505050565b6000612bf585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8901819004810282018101909252878152925087915086908190840183828082843760009201919091525061426b92505050565b9c9b505050505050505050505050565b600180600083604051602001612c1b91906159ea565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6001600160a01b03808316600090815260056020908152604080832093851683529290529081205460ff168061123b5750826001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015612cbc57600080fd5b505afa158015612cd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cf491906152fe565b6001600160a01b0316826001600160a01b0316149392505050565b60008581526003602052604081209080866001811115612d3157612d31615e69565b14612d3f5781600901612d44565b816005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff166004811115612d9257612d92615e69565b6004811115612da357612da3615e69565b8152600382015460ff61010082048116151560208401526201000082048116151560408401526060909201916301000000909104166002811115612de957612de9615e69565b6002811115612dfa57612dfa615e69565b90525060c08101519091506001816002811115612e1957612e19615e69565b1415612e3157612e2c88888888886143c0565b612e3d565b612e3d88888888614638565b5050505050505050565b600082815260036020526040812090612e5f84611f34565b6006830154600a8401549192509080831415612e9857612e8486600084600089612d0f565b612e9386600183600089612d0f565b612f8a565b808311158015612ec857506001600c8501546301000000900460ff166002811115612ec557612ec5615e69565b14155b612f2c5760405162461bcd60e51b815260206004820152602f60248201527f507269636520697320686967686572207468616e20616d6f756e74206573637260448201526e1bddd9590bd85d5d1a1bdc9a5e9959608a1b6064820152608401610677565b612f3b86600084600089612d0f565b612f4a86600185600089612d0f565b6002600c8501546301000000900460ff166002811115612f6c57612f6c615e69565b1415612f8a57612f8a866001612f828685615df5565b600189612d0f565b600d840180546002919060ff1916600183610b3f565b80516020820151604083015160608401516000939291906002816004811115612fcb57612fcb615e69565b141561306157604051636eb1769f60e11b81526001600160a01b03888116600483015230602483015284919086169063dd62ed3e906044015b60206040518083038186803b15801561301c57600080fd5b505afa158015613030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130549190615514565b1015945050505050610bd8565b600381600481111561307557613075615e69565b141561310a5760405163020604bf60e21b81526004810183905230906001600160a01b0386169063081812fc9060240160206040518083038186803b1580156130bd57600080fd5b505afa1580156130d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130f591906152fe565b6001600160a01b031614945050505050610bd8565b600481600481111561311e5761311e615e69565b141561316257604051630bf641e560e11b8152600481018390526001600160a01b0388811660248301523060448301528491908616906317ec83ca90606401613004565b5060019695505050505050565b60008581526003602052604090206001600d82015460ff16600481111561319857613198615e69565b146131b55760405162461bcd60e51b815260040161067790615c76565b80546000906001600160a01b03878116911614156131e1575060018101546001600160a01b03166132a2565b60018201546001600160a01b038781169116141561320a575080546001600160a01b03166132a2565b60018201546001600160a01b031661324757506001810180546001600160a01b0319166001600160a01b03878116919091179091558154166132a2565b60405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79207265676973746572656420686f6c646572732063616e20616363656044820152697074206120747261646560b01b6064820152608401610677565b81546000906001600160a01b038881169116146132c257826009016132c7565b826005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff16600481111561331557613315615e69565b600481111561332657613326615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561336c5761336c615e69565b600281111561337d5761337d615e69565b8152505090508060800151156133e15760405162461bcd60e51b8152602060048201526024808201527f547261646520616c72656164792061636365707465642062792074686520686f604482015263363232b960e11b6064820152608401610677565b60028160c0015160028111156133f9576133f9615e69565b141561374a5760018160600151600481111561341757613417615e69565b1415613474578060200151861461346f5760405162461bcd60e51b815260206004820152601c60248201527b105b5bdd5b9d081bd988115512081a5cc81b9bdd0818dbdc9c9958dd60221b6044820152606401610677565b61385a565b60028160600151600481111561348c5761348c615e69565b141561352057805160208201516040516323b872dd60e01b81526001600160a01b03909216916323b872dd916134c8918b913091600401615a06565b602060405180830381600087803b1580156134e257600080fd5b505af11580156134f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061351a91906154f7565b5061385a565b60038160600151600481111561353857613538615e69565b14156135ab57805160408083015190516323b872dd60e01b81526001600160a01b03909216916323b872dd91613574918b913091600401615a06565b600060405180830381600087803b15801561358e57600080fd5b505af11580156135a2573d6000803e3d6000fd5b5050505061385a565b6004816060015160048111156135c3576135c3615e69565b1480156135ce575084155b156136be5780600001516001600160a01b0316638c0dee9c826040015189308560200151600080516020615eff83398151915260001b60405160200161361691815260200190565b60408051808303601f19018152828252600080516020615eff833981519152602084015291016040516020818303038152906040526040518763ffffffff1660e01b815260040161366c96959493929190615a90565b602060405180830381600087803b15801561368657600080fd5b505af115801561369a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061351a9190615514565b6004816060015160048111156136d6576136d6615e69565b1480156136e257508415155b1561346f578060200151851461346f5760405162461bcd60e51b815260206004820152602760248201527f416d6f756e74206f66204552433134303020746f6b656e73206973206e6f742060448201526618dbdc9c9958dd60ca1b6064820152608401610677565b60018160c00151600281111561376257613762615e69565b14156137df576137738783836149f2565b61346f5760405162461bcd60e51b815260206004820152603760248201527f486f6c64206e6565647320746f2062652070726f766964656420696e20746f6b604482015276195b881cdb585c9d0818dbdb9d1c9858dd08199a5c9cdd604a1b6064820152608401610677565b6137e98782612fa0565b61385a5760405162461bcd60e51b815260206004820152603c60248201527f416c6c6f77616e6365206e6565647320746f2062652070726f7669646564206960448201527b1b881d1bdad95b881cdb585c9d0818dbdb9d1c9858dd08199a5c9cdd60221b6064820152608401610677565b82546001600160a01b03888116911614156138855760088301805461ff001916610100179055613897565b600c8301805461ff0019166101001790555b600483015442101560006138aa8a6119be565b90508180156138c4575060028501546001600160a01b0316155b80156138ef5750600160088601546301000000900460ff1660028111156138ed576138ed615e69565b145b801561391a57506001600c8601546301000000900460ff16600281111561391857613918615e69565b145b80156139235750805b15613a3e5784546000906001600160a01b038b8116911614613948578560050161394d565b856009015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff16600481111561399b5761399b615e69565b60048111156139ac576139ac615e69565b8152600382015460ff610100820481161515602084015262010000820481161515604084015260609092019163010000009091041660028111156139f2576139f2615e69565b6002811115613a0357613a03615e69565b9052509050613a13858b836149f2565b15613a3c5760088601805461010061ff00199182168117909255600c8801805490911690911790555b505b60028501546001600160a01b0316158015613a5d5750613a5d8a61104b565b8015613a665750805b8015613a6f5750815b15613a7e57613a7e8a87612e47565b50505050505050505050565b33613a936119af565b6001600160a01b031614613ab95760405162461bcd60e51b815260040161067790615b52565b613ac3600061415e565b565b600182606001516004811115613add57613add615e69565b1415613b185760028260c001516002811115613afb57613afb615e69565b14613b185760405162461bcd60e51b815260040161067790615adb565b600181606001516004811115613b3057613b30615e69565b1415613b6b5760028160c001516002811115613b4e57613b4e615e69565b14613b6b5760405162461bcd60e51b815260040161067790615adb565b60018260c001516002811115613b8357613b83615e69565b1415613bff57600282606001516004811115613ba157613ba1615e69565b1480613bc25750600482606001516004811115613bc057613bc0615e69565b145b613bde5760405162461bcd60e51b815260040161067790615c2c565b6040820151613bff5760405162461bcd60e51b815260040161067790615ce9565b60018160c001516002811115613c1757613c17615e69565b1415613c9357600281606001516004811115613c3557613c35615e69565b1480613c565750600481606001516004811115613c5457613c54615e69565b145b613c725760405162461bcd60e51b815260040161067790615c2c565b6040810151613c935760405162461bcd60e51b815260040161067790615ce9565b60085460ff1615613d3a576001600160a01b0385166000908152600a602052604090205460ff16613d3a5760405162461bcd60e51b815260206004820152604560248201527f5472616465206578656375746572206e6565647320746f2062656c6f6e67207460448201527f6f20746865206c697374206f6620616c6c6f7765642074726164652065786563606482015264757465727360d81b608482015260a401610677565b6001600160a01b038716613da95760405162461bcd60e51b815260206004820152603060248201527f412074726164652063616e206e6f74206265206372656174656420776974682060448201526f746865207a65726f206164647265737360801b6064820152608401610677565b60028054906000613db983615e38565b91905055506000428511613dd957613dd462278d0042615d9c565b613ddb565b845b9050604051806101000160405280896001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b0316815260200182815260200185815260200184815260200183815260200160016004811115613e4157613e41615e69565b905260028054600090815260036020818152604092839020855181546001600160a01b039182166001600160a01b03199182161783558784015160018085018054928516928416929092179091558887015197840180549884169883169890981790975560608089015195840195909555608088015160048085019190915560a089015180516005860180549190951693169290921783559381015160068401559485015160078301559284015160088201805492969193909260ff191691908490811115613f1257613f12615e69565b0217905550608082015160038201805460a08501511515620100000262ff000019931515610100029390931662ffff0019909116179190911780825560c0840151919063ff00000019166301000000836002811115613f7357613f73615e69565b0217905550505060c082015180516009830180546001600160a01b0319166001600160a01b039092169190911781556020820151600a8401556040820151600b8401556060820151600c8401805460ff19166001836004811115613fd957613fd9615e69565b0217905550608082015160038201805460a08501511515620100000262ff000019931515610100029390931662ffff0019909116179190911780825560c0840151919063ff0000001916630100000083600281111561403a5761403a615e69565b0217905550505060e0820151600d8201805460ff1916600183600481111561406457614064615e69565b021790555050505050505050505050565b60005b6009548110156140e1576000600a60006009848154811061409b5761409b615e7f565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055806140d981615e38565b915050614078565b5060005b815181101561414a576001600a600084848151811061410657614106615e7f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061414281615e38565b9150506140e5565b5080516112b2906009906020840190615103565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826040516020016141c291906159ea565b60408051601f1981840301815290829052805160209091012063555ddc6560e11b82529150731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca906142139087908590600401615a2a565b60206040518083038186803b15801561422b57600080fd5b505afa15801561423f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061426391906152fe565b949350505050565b600081516000141561427f57506000610bd8565b600061428c846020015190565b905083516101401480156142ad5750600080516020615f5f83398151915281145b156142bc576001915050610bd8565b8351604014806142cd575083516060145b80156142e65750600080516020615edf83398151915281145b156142f5576001915050610bd8565b835160201480156143135750600080516020615eff83398151915281145b15614322576001915050610bd8565b6000915050610bd8565b614334615158565b60c082015160e0808401516101008501516101208601516101408701516040805195860181526001600160a01b03871686526020860185905285018390529293919290916060810183600481111561438e5761438e615e69565b815260006020820181905260408201526060018260028111156143b3576143b3615e69565b9052979650505050505050565b600085815260036020526040812090808660018111156143e2576143e2615e69565b146143fa5760018201546001600160a01b0316614406565b81546001600160a01b03165b905060008087600181111561441d5761441d615e69565b146144325782546001600160a01b0316614441565b60018301546001600160a01b03165b905060008088600181111561445857614458615e69565b14614466578360090161446b565b836005015b6040805160e08101825282546001600160a01b03168152600183015460208201526002830154918101919091526003820154909190606083019060ff1660048111156144b9576144b9615e69565b60048111156144ca576144ca615e69565b8152600382015460ff6101008204811615156020840152620100008204811615156040840152606090920191630100000090910416600281111561451057614510615e69565b600281111561452157614521615e69565b815250509050836003015442111561454b5760405162461bcd60e51b815260040161067790615b21565b805160408201516060830151600281600481111561456b5761456b615e69565b14806145885750600481600481111561458657614586615e69565b145b6145d45760405162461bcd60e51b815260206004820152601f60248201527f546f6b656e207374616e64617264206d75737420626520686f6c6461626c65006044820152606401610677565b6145df8686866149f2565b61461d5760405162461bcd60e51b815260206004820152600f60248201526e121bdb19081b5d5cdd08195e1a5cdd608a1b6044820152606401610677565b61462a8383838b89614d4f565b505050505050505050505050565b6000848152600360205260408120908085600181111561465a5761465a615e69565b146146725760018201546001600160a01b031661467e565b81546001600160a01b03165b905060008086600181111561469557614695615e69565b146146aa5782546001600160a01b03166146b9565b60018301546001600160a01b03165b90506000808760018111156146d0576146d0615e69565b146146de57836009016146e3565b836005015b805460028083015460038401549394506001600160a01b039092169260ff1690869060038601546301000000900460ff16600281111561472557614725615e69565b141561472e5750305b881561473c57869550614760565b87600301544211156147605760405162461bcd60e51b815260040161067790615b21565b600182600481111561477457614774615e69565b14156147b95760405186906001600160a01b038216908c156108fc02908d906000818181858888f193505050501580156147b2573d6000803e3d6000fd5b505061462a565b60028260048111156147cd576147cd615e69565b141561489a576001600160a01b03811630141561486a5760405163a9059cbb60e01b81526001600160a01b0385169063a9059cbb906148129089908e90600401615a2a565b602060405180830381600087803b15801561482c57600080fd5b505af1158015614840573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061486491906154f7565b5061462a565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906148129084908a908f90600401615a06565b60038260048111156148ae576148ae615e69565b141561491b576040516323b872dd60e01b81526001600160a01b038516906323b872dd906148e49084908a908890600401615a06565b600060405180830381600087803b1580156148fe57600080fd5b505af1158015614912573d6000803e3d6000fd5b5050505061462a565b600482600481111561492f5761492f615e69565b141561462a576040516323037ba760e21b8152600481018490526001600160a01b0382811660248301528781166044830152606482018c905260c06084830152600060c4830181905260e060a484015260e4830152851690638c0dee9c9061010401602060405180830381600087803b1580156149ab57600080fd5b505af11580156149bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149e39190615514565b50505050505050505050505050565b80516040820151606083015160009291906004816004811115614a1757614a17615e69565b1415614bbf576000614a57846040518060400160405280601681526020017522a921989a18182a37b5b2b739ab30b634b230ba37b960511b8152506141ae565b90506001600160a01b038116614a7f5760405162461bcd60e51b815260040161067790615ca4565b600080600080600080866001600160a01b03166312da4de68b8b6040518363ffffffff1660e01b8152600401614ab6929190615a2a565b6101206040518083038186803b158015614acf57600080fd5b505afa158015614ae3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614b079190615552565b9d50959b5093995090975090955090935060019250614b24915050565b866006811115614b3657614b36615e69565b148015614b4657508b6020015183145b8015614b7457508d6001600160a01b0316856001600160a01b03161480614b7457506001600160a01b038516155b8015614b9157508c6001600160a01b0316846001600160a01b0316145b8015614bae575080151580614bae57506001600160a01b03821630145b9a505050505050505050505061123b565b6002816004811115614bd357614bd3615e69565b1415614d0757604051636d0f612360e11b8152600481018390526000906001600160a01b0385169063da1ec2469060240160e06040518083038186803b158015614c1c57600080fd5b505afa158015614c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c5491906157e4565b9050876001600160a01b031681600001516001600160a01b03161480614c82575080516001600160a01b0316155b8015614ca35750866001600160a01b031681602001516001600160a01b0316145b8015614cb6575085602001518160600151145b8015614cd7575060018160c001516006811115614cd557614cd5615e69565b145b8015614cfc575060a0810151151580614cfc575060408101516001600160a01b031630145b94505050505061123b565b60405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420746f6b656e5374616e646172642070726f766964656400006044820152606401610677565b6002836004811115614d6357614d63615e69565b1415614df5576001600160a01b038516614d8f5760405162461bcd60e51b815260040161067790615b87565b60405163445850af60e01b815260048101859052602481018390526001600160a01b0386169063445850af90604401600060405180830381600087803b158015614dd857600080fd5b505af1158015614dec573d6000803e3d6000fd5b50505050614fe6565b6004836004811115614e0957614e09615e69565b1415614fa5576001600160a01b038516614e355760405162461bcd60e51b815260040161067790615b87565b6000614e6f866040518060400160405280601681526020017522a921989a18182a37b5b2b739ab30b634b230ba37b960511b8152506141ae565b90506001600160a01b038116614e975760405162461bcd60e51b815260040161067790615ca4565b60405163096d26f360e11b81526000906001600160a01b038316906312da4de690614ec8908a908a90600401615a2a565b6101206040518083038186803b158015614ee157600080fd5b505afa158015614ef5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f199190615552565b5050604051631531bc2360e21b81526001600160a01b038f81166004830152602482018f905260448201859052606482018d905293985092891696506354c6f08c95505060849091019250614f6c915050565b600060405180830381600087803b158015614f8657600080fd5b505af1158015614f9a573d6000803e3d6000fd5b505050505050614fe6565b60405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081d1bdad95b881cdd185b99185c9960521b6044820152606401610677565b604080518381526001600160a01b0383811660208301528692908816917ff16e81ebbf4a87ccaa6230614a9d911f4d2a9e9274e2aaca49922f1779959489910160405180910390a35050505050565b828054828255906000526020600020908101928215615088579160200282015b828111156150885781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190615055565b50615094929150615195565b5090565b60405180610100016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016150ea615158565b81526020016150f7615158565b81526020016000905290565b828054828255906000526020600020908101928215615088579160200282015b8281111561508857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190615123565b6040805160e08101825260008082526020820181905291810182905290606082019081526000602082018190526040820181905260609091015290565b5b808211156150945760008155600101615196565b80356151b581615ebb565b919050565b60008083601f8401126151cc57600080fd5b5081356001600160401b038111156151e357600080fd5b6020830191508360208260051b85010111156151fe57600080fd5b9250929050565b60008083601f84011261521757600080fd5b5081356001600160401b0381111561522e57600080fd5b6020830191508360208285010111156151fe57600080fd5b600082601f83011261525757600080fd5b81356001600160401b038082111561527157615271615e95565b604051601f8301601f19908116603f0116810190828211818310171561529957615299615e95565b816040528381528660208588010111156152b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b8051600781106151b557600080fd5b6000602082840312156152f357600080fd5b813561123b81615ebb565b60006020828403121561531057600080fd5b815161123b81615ebb565b6000806040838503121561532e57600080fd5b823561533981615ebb565b9150602083013561534981615ebb565b809150509250929050565b60008060006060848603121561536957600080fd5b833561537481615ebb565b9250602084013561538481615ebb565b9150604084013561539481615ed0565b809150509250925092565b600080600080608085870312156153b557600080fd5b84356153c081615ebb565b935060208501356153d081615ebb565b93969395505050506040820135916060013590565b600080600080600060a086880312156153fd57600080fd5b853561540881615ebb565b9450602086013561541881615ebb565b94979496505050506040830135926060810135926080909101359150565b60008060006040848603121561544b57600080fd5b833561545681615ebb565b925060208401356001600160401b0381111561547157600080fd5b61547d868287016151ba565b9497909650939450505050565b6000806040838503121561549d57600080fd5b82356154a881615ebb565b946020939093013593505050565b600080602083850312156154c957600080fd5b82356001600160401b038111156154df57600080fd5b6154eb858286016151ba565b90969095509350505050565b60006020828403121561550957600080fd5b815161123b81615ed0565b60006020828403121561552657600080fd5b5051919050565b6000806040838503121561554057600080fd5b82359150602083013561534981615ebb565b60008060008060008060008060006101208a8c03121561557157600080fd5b8951985060208a015161558381615ebb565b60408b015190985061559481615ebb565b60608b01519097506155a581615ebb565b8096505060808a0151945060a08a0151935060c08a0151925060e08a015191506155d26101008b016152d2565b90509295985092959850929598565b60008060008060008060008060008060006101008c8e03121561560357600080fd5b6001600160401b038c3581101561561957600080fd5b6156268e8e358f01615205565b909c509a5060208d0135995061563e60408e016151aa565b985061564c60608e016151aa565b975061565a60808e016151aa565b965060a08d013595508060c08e0135111561567457600080fd5b6156848e60c08f01358f01615205565b909550935060e08d013581101561569a57600080fd5b506156ab8d60e08e01358e01615205565b81935080925050509295989b509295989b9093969950565b6000806000806000806000806000806101008b8d0312156156e357600080fd5b8a356001600160401b03808211156156fa57600080fd5b6157068e838f01615205565b909c509a5060208d013599508a915061572160408e016151aa565b985061572f60608e016151aa565b975061573d60808e016151aa565b965060a08d0135955060c08d013591508082111561575a57600080fd5b6157668e838f01615246565b945060e08d013591508082111561577c57600080fd5b506157898d828e01615205565b915080935050809150509295989b9194979a5092959850565b6000602082840312156157b457600080fd5b81356005811061123b57600080fd5b6000602082840312156157d557600080fd5b81356003811061123b57600080fd5b600060e082840312156157f657600080fd5b60405160e081016001600160401b038111828210171561581857615818615e95565b604052825161582681615ebb565b8152602083015161583681615ebb565b6020820152604083015161584981615ebb565b80604083015250606083015160608201526080830151608082015260a083015160a082015261587a60c084016152d2565b60c08201529392505050565b60008082840361020081121561589b57600080fd5b6101e0808212156158ab57600080fd5b9395938601359450505050565b6000602082840312156158ca57600080fd5b5035919050565b600080604083850312156158e457600080fd5b82359150602083013561534981615ed0565b60008060006060848603121561590b57600080fd5b83359250602084013561591d81615ed0565b929592945050506040919091013590565b6000806040838503121561594157600080fd5b50508035926020909101359150565b60008151808452615968816020860160208601615e0c565b601f01601f19169290920160200192915050565b80516001600160a01b03168252602080820151908301526040808201519083015260608101516159ab81615eab565b8060608401525060808101511515608083015260a0810151151560a083015260c0810151600381106159df576159df615e69565b8060c0840152505050565b600082516159fc818460208701615e0c565b9190910192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015615a845783516001600160a01b031683529284019291840191600101615a5f565b50909695505050505050565b8681526001600160a01b038681166020830152851660408201526060810184905260c060808201819052600090615ac990830185615950565b82810360a08401526121098185615950565b60208082526026908201527f457468657220747261646573206e65656420746f206265206f66207479706520604082015265457363726f7760d01b606082015260800190565b602080825260179082015276115e1c1a5c985d1a5bdb8819185d19481a5cc81c185cdd604a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f746f6b656e2063616e206e6f742062652061207a65726f206164647265737300604082015260600190565b6020808252601e908201527f436f6d7065746974696f6e206f6e207072696365206f776e6572736869700000604082015260600190565b6020808252601d908201527f53656e646572206973206e6f742061207072696365206f7261636c652e000000604082015260600190565b6020808252602a908201527f496e76616c696420746f6b656e207374616e6461726420666f7220686f6c64206040820152697472616465207479706560b01b606082015260800190565b6020808252601490820152735472616465206973206e6f742070656e64696e6760601b604082015260600190565b60208082526025908201527f746f6b656e20686173206e6f20686f6c6461626c6520746f6b656e20657874656040820152643739b4b7b760d91b606082015260800190565b602080825260139082015272139bc81a1bdb191259081cdc1958da599a5959606a1b604082015260600190565b60006102808201905060018060a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a0830151615d6b60a084018261597c565b5060c0830151615d7f61018084018261597c565b5060e0830151615d8e81615eab565b806102608401525092915050565b60008219821115615daf57615daf615e53565b500190565b600082615dd157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615615df057615df0615e53565b500290565b600082821015615e0757615e07615e53565b500390565b60005b83811015615e27578181015183820152602001615e0f565b83811115610e205750506000910152565b6000600019821415615e4c57615e4c615e53565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600581106107de576107de615e69565b6001600160a01b03811681146107de57600080fd5b80151581146107de57600080fdfeddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa507269636520736574746572206973206e6f7420616e206f7261636c6520666f53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc53656e646572206973206e6f7420616c6c6f77656420746f20666f7263652074a26469706673582212207720d0a673a1b30b63bdc444b48c97891945c2b04dc9054c0710026db0336bf664736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1607:72",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:72",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:199:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:29:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "176:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:16:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "254:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "247:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "214:5:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:5:72"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:6:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:13:72"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "221:6:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:21:72"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "211:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "211:32:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "204:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:40:72"
                  },
                  "nodeType": "YulIf",
                  "src": "201:60:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "270:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "280:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "270:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:72",
                "type": ""
              }
            ],
            "src": "14:277:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "435:289:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "445:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "465:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "459:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "459:13:72"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "449:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "481:10:72",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "490:1:72",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "485:1:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "552:77:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "577:3:72"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "582:1:72"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "573:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "573:11:72"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "600:6:72"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "608:1:72"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "596:3:72"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "596:14:72"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "612:4:72",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "592:3:72"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "592:25:72"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "586:5:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "586:32:72"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "566:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "566:53:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "566:53:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "511:1:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "514:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "508:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "508:13:72"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "522:21:72",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "524:17:72",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "533:1:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "536:4:72",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "529:3:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "529:12:72"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "524:1:72"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "504:3:72",
                    "statements": []
                  },
                  "src": "500:129:72"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "655:31:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "668:3:72"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "673:6:72"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "664:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "664:16:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "682:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "657:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "657:27:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "657:27:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "644:1:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "647:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "641:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:13:72"
                  },
                  "nodeType": "YulIf",
                  "src": "638:48:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "695:23:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "706:3:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "711:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "702:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "702:16:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "695:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "411:3:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "416:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "427:3:72",
                "type": ""
              }
            ],
            "src": "296:428:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:218:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "908:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "919:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "904:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "904:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "896:4:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "931:29:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "949:3:72",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "954:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "945:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "945:11:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "958:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "941:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:19:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "935:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "976:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "991:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "999:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "987:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "969:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "969:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1023:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1034:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1019:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1019:18:72"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1039:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1012:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1012:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1012:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1066:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1077:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1062:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1062:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1086:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1094:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1082:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1082:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1055:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1055:43:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1055:43:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "839:9:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "850:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "858:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "866:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "877:4:72",
                "type": ""
              }
            ],
            "src": "729:375:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1156:185:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1195:111:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1216:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1223:3:72",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1228:10:72",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1219:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1219:20:72"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1209:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1209:31:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1209:31:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1260:1:72",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1263:4:72",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1253:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1253:15:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1253:15:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1288:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1291:4:72",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1281:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1281:15:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1281:15:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1172:5:72"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1183:1:72",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1179:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1179:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1169:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:17:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1166:140:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1315:20:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1326:5:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1333:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1322:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1322:13:72"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1315:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1138:5:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1148:3:72",
                "type": ""
              }
            ],
            "src": "1109:232:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1378:95:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1395:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1402:3:72",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1407:10:72",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1398:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1398:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1388:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1388:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1388:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1435:1:72",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1438:4:72",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1428:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1428:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1428:15:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1459:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1462:4:72",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1452:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1452:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1452:15:72"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "1346:127:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1510:95:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1527:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1534:3:72",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1539:10:72",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1530:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1530:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1520:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1520:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1520:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1567:1:72",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1570:4:72",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1560:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1560:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1560:15:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1591:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1594:4:72",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1584:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1584:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1584:15:72"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1478:127:72"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 72,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:43474:72",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:72",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:85:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:72"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "136:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:31:72"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:72",
                "type": ""
              }
            ],
            "src": "14:134:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "237:283:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "286:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "295:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "298:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "288:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "288:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "288:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "265:6:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "273:4:72",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "261:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "261:17:72"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "280:3:72"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "257:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "257:27:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "250:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "250:35:72"
                  },
                  "nodeType": "YulIf",
                  "src": "247:55:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "311:30:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "334:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "321:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "321:20:72"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "311:6:72"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "384:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "393:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "396:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "386:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "386:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "386:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "356:6:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "372:2:72",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "376:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "368:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "368:10:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "380:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "364:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "364:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "353:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:30:72"
                  },
                  "nodeType": "YulIf",
                  "src": "350:50:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "409:29:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "425:6:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:4:72",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "421:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "421:17:72"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "409:8:72"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "498:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "507:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "510:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "500:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "500:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "500:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "461:6:72"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "473:1:72",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "476:6:72"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "469:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "469:14:72"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "457:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "457:27:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "486:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "453:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "453:38:72"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "493:3:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "450:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "450:47:72"
                  },
                  "nodeType": "YulIf",
                  "src": "447:67:72"
                }
              ]
            },
            "name": "abi_decode_array_address_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "200:6:72",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "208:3:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "216:8:72",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "226:6:72",
                "type": ""
              }
            ],
            "src": "153:367:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:275:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "646:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "655:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "658:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "648:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "648:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "648:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "625:6:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "633:4:72",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "621:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "621:17:72"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "640:3:72"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "617:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "617:27:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "610:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "610:35:72"
                  },
                  "nodeType": "YulIf",
                  "src": "607:55:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "671:30:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "694:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "681:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:20:72"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "671:6:72"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "744:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "753:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "756:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "746:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "746:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "746:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "716:6:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "732:2:72",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "736:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "728:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "728:10:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "740:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "724:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "724:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "713:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "713:30:72"
                  },
                  "nodeType": "YulIf",
                  "src": "710:50:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "769:29:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "785:6:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "793:4:72",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "781:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:17:72"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "769:8:72"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "850:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "859:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "862:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "852:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "852:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "852:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "821:6:72"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "829:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "817:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "817:19:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "838:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "813:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "813:30:72"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "845:3:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "810:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "810:39:72"
                  },
                  "nodeType": "YulIf",
                  "src": "807:59:72"
                }
              ]
            },
            "name": "abi_decode_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "560:6:72",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "568:3:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "576:8:72",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "586:6:72",
                "type": ""
              }
            ],
            "src": "525:347:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "929:666:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "978:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "987:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "990:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "980:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "980:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "980:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "957:6:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "965:4:72",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "953:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "953:17:72"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "972:3:72"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "949:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:27:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "942:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "942:35:72"
                  },
                  "nodeType": "YulIf",
                  "src": "939:55:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1003:30:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1026:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1013:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1013:20:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1007:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1042:28:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1060:2:72",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1064:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1056:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1056:10:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1068:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1052:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1052:18:72"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1046:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1093:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1095:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1095:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1095:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1085:2:72"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1089:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1082:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1082:10:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1079:36:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1124:17:72",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1138:2:72",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1134:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:7:72"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1128:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1150:23:72",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1170:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1164:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1164:9:72"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1154:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1182:71:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1204:6:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1228:2:72"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1232:4:72",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1224:3:72"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1224:13:72"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1239:2:72"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1220:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1220:22:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1244:2:72",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1216:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1216:31:72"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1249:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1212:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1212:40:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1200:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:53:72"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1186:10:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1312:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1314:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1314:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1314:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1271:10:72"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1283:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1268:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1291:10:72"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1303:6:72"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1288:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:22:72"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1265:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:46:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1262:72:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1350:2:72",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1354:10:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1343:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:22:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1343:22:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1381:6:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1389:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1374:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1374:18:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1374:18:72"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1440:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1449:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1452:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1442:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1442:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1442:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1415:6:72"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1423:2:72"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1411:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1411:15:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1428:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1407:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1407:26:72"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1435:3:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1404:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1404:35:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1401:55:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1482:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1490:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1478:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1478:17:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1501:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1509:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:17:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1516:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1465:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1465:54:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1465:54:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1543:6:72"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1551:2:72"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1539:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1539:15:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1556:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1535:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:26:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1563:1:72",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1528:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1528:37:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1528:37:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1574:15:72",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1583:6:72"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1574:5:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "903:6:72",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "911:3:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "919:5:72",
                "type": ""
              }
            ],
            "src": "877:718:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1672:87:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1682:22:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1697:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1691:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1691:13:72"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1682:5:72"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1737:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1746:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1749:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1739:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1739:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1739:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1726:5:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1733:1:72",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1723:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:12:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1716:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1716:20:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1713:40:72"
                }
              ]
            },
            "name": "abi_decode_enum_HoldStatusCode_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1651:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1662:5:72",
                "type": ""
              }
            ],
            "src": "1600:159:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1834:177:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1880:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1889:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1892:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1882:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1882:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1882:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1855:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1864:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1851:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1851:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1876:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1847:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "1844:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1905:36:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1931:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1918:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1918:23:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1909:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1975:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1950:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1950:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1950:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1990:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2000:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1990:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1800:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1811:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1823:6:72",
                "type": ""
              }
            ],
            "src": "1764:247:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2097:170:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2143:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2152:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2155:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2145:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2145:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2145:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2118:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2127:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2114:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2114:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2139:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2110:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2110:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "2107:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2168:29:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2187:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2181:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2181:16:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2172:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2231:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2206:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2206:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2206:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2246:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2256:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2246:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2063:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2074:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2086:6:72",
                "type": ""
              }
            ],
            "src": "2016:251:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2359:301:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2405:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2414:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2417:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2407:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2407:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2407:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2380:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2389:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2376:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2376:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2401:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2372:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2372:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "2369:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2430:36:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2456:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2443:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2443:23:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2434:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2500:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2475:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2475:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2475:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2515:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2525:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2515:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2539:47:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2571:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2582:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2567:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2567:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2554:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2554:32:72"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2543:7:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2620:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2595:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2595:33:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2595:33:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2637:17:72",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2647:7:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2637:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2317:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2328:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2340:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2348:6:72",
                "type": ""
              }
            ],
            "src": "2272:388:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2766:422:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2812:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2821:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2824:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2814:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2814:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2814:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2787:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2796:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2783:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2783:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2808:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2779:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2779:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "2776:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2837:36:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2863:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2850:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2850:23:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2841:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2907:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2882:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2882:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2882:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2922:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2932:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2922:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2946:47:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2978:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2989:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2974:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2974:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2961:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2961:32:72"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2950:7:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3027:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3002:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3002:33:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3002:33:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3044:17:72",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3054:7:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3044:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3070:47:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3102:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3113:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3098:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3098:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3085:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3085:32:72"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "3074:7:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "3148:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3126:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3126:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3126:30:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3165:17:72",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "3175:7:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3165:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2716:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2727:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2739:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2747:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2755:6:72",
                "type": ""
              }
            ],
            "src": "2665:523:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3314:404:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3361:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3370:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3373:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3363:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3363:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3363:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3335:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3344:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3331:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3331:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3356:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3327:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3327:33:72"
                  },
                  "nodeType": "YulIf",
                  "src": "3324:53:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3386:36:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3412:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3399:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3399:23:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3390:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3456:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3431:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3431:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3431:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3471:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3481:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3471:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3495:47:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3527:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3538:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3523:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3523:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3510:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3510:32:72"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3499:7:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3576:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3551:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3551:33:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3551:33:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3593:17:72",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3603:7:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3593:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3619:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3646:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3657:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3642:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3642:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3629:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3629:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3619:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3670:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3697:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3708:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3693:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3693:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3680:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3680:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3670:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_bytes32t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3256:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3267:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3279:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3287:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3295:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3303:6:72",
                "type": ""
              }
            ],
            "src": "3193:525:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3861:456:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3908:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3917:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3920:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3910:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3910:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3910:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3882:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3891:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3878:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3878:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3903:3:72",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3874:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3874:33:72"
                  },
                  "nodeType": "YulIf",
                  "src": "3871:53:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3933:36:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3959:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3946:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3946:23:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3937:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4003:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3978:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3978:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3978:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4018:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4028:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4018:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4042:47:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4074:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4085:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4070:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4070:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4057:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4057:32:72"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4046:7:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4123:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4098:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4098:33:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4098:33:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4140:17:72",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4150:7:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4140:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4166:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4193:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4204:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4189:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4189:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4176:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4176:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4166:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4217:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4244:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4255:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4240:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4240:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4227:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4227:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4217:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4268:43:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4295:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4306:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4291:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4291:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4278:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4278:33:72"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4268:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_bytes32t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3795:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3806:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3818:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3826:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3834:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3842:6:72",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3850:6:72",
                "type": ""
              }
            ],
            "src": "3723:594:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4444:450:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4490:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4499:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4502:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4492:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4492:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4492:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4465:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4474:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4461:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4461:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4486:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4457:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4457:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "4454:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4515:36:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4541:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4528:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4528:23:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4519:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4585:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4560:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4560:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4560:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4600:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4610:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4600:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4624:46:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4655:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4666:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4651:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4651:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4638:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4638:32:72"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4628:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4713:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4722:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4725:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4715:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4715:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4715:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4685:6:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4701:2:72",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4705:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4697:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4697:10:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4709:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4693:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4693:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4682:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4682:30:72"
                  },
                  "nodeType": "YulIf",
                  "src": "4679:50:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4738:96:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4806:9:72"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4817:6:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4802:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4802:22:72"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4826:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4764:37:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4764:70:72"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "4742:8:72",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "4752:8:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4843:18:72",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "4853:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4843:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4870:18:72",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "4880:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4870:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4394:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4405:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4417:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4425:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4433:6:72",
                "type": ""
              }
            ],
            "src": "4322:572:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4986:228:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5032:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5041:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5044:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5034:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5034:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5034:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5007:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5016:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5003:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5003:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5028:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4999:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4999:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "4996:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5057:36:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5083:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5070:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5070:23:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5061:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5127:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5102:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5102:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5102:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5142:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5152:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5142:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5166:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5193:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5204:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5189:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5189:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5176:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5176:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5166:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4944:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4955:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4967:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4975:6:72",
                "type": ""
              }
            ],
            "src": "4899:315:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5324:332:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5370:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5379:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5382:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5372:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5372:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5372:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5345:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5354:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5341:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5341:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5366:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5337:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "5334:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5395:37:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5422:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5409:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5409:23:72"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "5399:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5475:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5484:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5487:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5477:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5477:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5477:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5447:6:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5463:2:72",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5467:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5459:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5459:10:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5471:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5455:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5455:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5444:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5444:30:72"
                  },
                  "nodeType": "YulIf",
                  "src": "5441:50:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5500:96:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5568:9:72"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5579:6:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5564:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5564:22:72"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5588:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_address_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5526:37:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5526:70:72"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "5504:8:72",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "5514:8:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5605:18:72",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "5615:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5605:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5632:18:72",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "5642:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5632:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5282:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5293:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5305:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5313:6:72",
                "type": ""
              }
            ],
            "src": "5219:437:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5739:167:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5785:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5794:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5797:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5787:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5787:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5787:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5760:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5769:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5756:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5756:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5781:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5752:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5752:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "5749:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5810:29:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5829:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5823:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5823:16:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5814:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5870:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5848:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5848:28:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5848:28:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5885:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5895:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5885:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5705:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5716:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5728:6:72",
                "type": ""
              }
            ],
            "src": "5661:245:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5992:103:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6038:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6047:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6050:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6040:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6040:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6040:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6013:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6022:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6009:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6009:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6034:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6005:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6005:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "6002:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6063:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6079:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6073:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6073:16:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6063:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5958:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5969:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5981:6:72",
                "type": ""
              }
            ],
            "src": "5911:184:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6187:228:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6233:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6242:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6245:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6235:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6235:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6235:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6208:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6217:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6204:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6204:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6229:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6200:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6200:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "6197:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6258:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6281:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6268:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6268:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6258:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6300:45:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6330:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6341:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6326:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6326:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6313:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6313:32:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6304:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6379:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6354:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6354:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6354:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6394:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6404:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6394:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6145:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6156:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6168:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6176:6:72",
                "type": ""
              }
            ],
            "src": "6100:315:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6657:710:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6704:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6713:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6716:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6706:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6706:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6706:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6678:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6687:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6674:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6674:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6699:3:72",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6670:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6670:33:72"
                  },
                  "nodeType": "YulIf",
                  "src": "6667:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6729:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6745:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6739:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6739:16:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6729:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6764:38:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6787:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6798:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6783:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6783:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6777:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6777:25:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6768:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6836:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6811:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6811:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6811:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6851:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6861:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6851:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6875:40:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6900:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6911:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6896:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6896:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6890:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6890:25:72"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "6879:7:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "6949:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6924:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6924:33:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6924:33:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6966:17:72",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "6976:7:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6966:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6992:40:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7017:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7028:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7013:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7013:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7007:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7007:25:72"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "6996:7:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "7066:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7041:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7041:33:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7041:33:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7083:17:72",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "7093:7:72"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "7083:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7109:36:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7129:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7140:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7125:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7125:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7119:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7119:26:72"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "7109:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7154:36:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7174:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7185:3:72",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7170:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7170:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7164:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7164:26:72"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "7154:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7199:36:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7219:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7230:3:72",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7215:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7215:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7209:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7209:26:72"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "7199:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7244:36:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7264:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7275:3:72",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7260:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7260:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7254:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7254:26:72"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "7244:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7289:72:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7345:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7356:3:72",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7341:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7341:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_enum_HoldStatusCode_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "7299:41:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7299:62:72"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "7289:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_addresst_addresst_addresst_uint256t_uint256t_bytes32t_bytes32t_enum$_HoldStatusCode_$12361_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6559:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6570:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6582:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6590:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6598:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6606:6:72",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6614:6:72",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "6622:6:72",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "6630:6:72",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "6638:6:72",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "6646:6:72",
                "type": ""
              }
            ],
            "src": "6420:947:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7619:1096:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7666:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7675:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7678:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7668:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7668:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7668:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7640:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7649:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7636:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7636:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7661:3:72",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7632:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7632:33:72"
                  },
                  "nodeType": "YulIf",
                  "src": "7629:53:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7691:28:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7709:2:72",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7713:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7705:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7705:10:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7717:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7701:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7701:18:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7695:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7763:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7772:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7775:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7765:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7765:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7765:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7747:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7734:12:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7734:23:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7759:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7731:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7731:31:72"
                  },
                  "nodeType": "YulIf",
                  "src": "7728:51:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7788:101:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7844:9:72"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7868:9:72"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "7855:12:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7855:23:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7840:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7840:39:72"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "7881:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "7814:25:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7814:75:72"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "7792:8:72",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "7802:8:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7898:18:72",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "7908:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7898:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7925:18:72",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "7935:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7925:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7952:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7979:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7990:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7975:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7975:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7962:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7962:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "7952:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8003:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8036:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8047:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8032:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8032:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "8013:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8013:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "8003:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8060:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8093:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8104:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8089:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8089:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "8070:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8070:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "8060:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8117:49:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8150:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8161:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8146:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8146:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "8127:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8127:39:72"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "8117:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8175:43:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8202:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8213:3:72",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8198:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8198:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8185:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8185:33:72"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "8175:6:72"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8272:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8281:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8284:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8274:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8274:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8274:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8250:9:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8261:3:72",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8246:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8246:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8233:12:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8233:33:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8268:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8230:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8230:41:72"
                  },
                  "nodeType": "YulIf",
                  "src": "8227:61:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8297:111:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8353:9:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8381:9:72"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8392:3:72",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8377:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8377:19:72"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "8364:12:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8364:33:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8349:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8349:49:72"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "8400:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "8323:25:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8323:85:72"
                  },
                  "variables": [
                    {
                      "name": "value7_1",
                      "nodeType": "YulTypedName",
                      "src": "8301:8:72",
                      "type": ""
                    },
                    {
                      "name": "value8_1",
                      "nodeType": "YulTypedName",
                      "src": "8311:8:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8417:18:72",
                  "value": {
                    "name": "value7_1",
                    "nodeType": "YulIdentifier",
                    "src": "8427:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "8417:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8444:18:72",
                  "value": {
                    "name": "value8_1",
                    "nodeType": "YulIdentifier",
                    "src": "8454:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "8444:6:72"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8516:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8525:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8528:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8518:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8518:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8518:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8494:9:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8505:3:72",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8490:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8490:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8477:12:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8477:33:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8512:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8474:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8474:41:72"
                  },
                  "nodeType": "YulIf",
                  "src": "8471:61:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8541:112:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8598:9:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8626:9:72"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8637:3:72",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8622:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8622:19:72"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "8609:12:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8609:33:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8594:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8594:49:72"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "8645:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "8568:25:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8568:85:72"
                  },
                  "variables": [
                    {
                      "name": "value9_1",
                      "nodeType": "YulTypedName",
                      "src": "8545:8:72",
                      "type": ""
                    },
                    {
                      "name": "value10_1",
                      "nodeType": "YulTypedName",
                      "src": "8555:9:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8662:18:72",
                  "value": {
                    "name": "value9_1",
                    "nodeType": "YulIdentifier",
                    "src": "8672:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value9",
                      "nodeType": "YulIdentifier",
                      "src": "8662:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8689:20:72",
                  "value": {
                    "name": "value10_1",
                    "nodeType": "YulIdentifier",
                    "src": "8700:9:72"
                  },
                  "variableNames": [
                    {
                      "name": "value10",
                      "nodeType": "YulIdentifier",
                      "src": "8689:7:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7504:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7515:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7527:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7535:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7543:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7551:6:72",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7559:6:72",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "7567:6:72",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "7575:6:72",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "7583:6:72",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "7591:6:72",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "7599:6:72",
                "type": ""
              },
              {
                "name": "value10",
                "nodeType": "YulTypedName",
                "src": "7607:7:72",
                "type": ""
              }
            ],
            "src": "7372:1343:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8956:1042:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9003:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9012:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9015:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9005:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9005:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9005:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8977:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8986:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8973:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8973:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8998:3:72",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8969:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8969:33:72"
                  },
                  "nodeType": "YulIf",
                  "src": "8966:53:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9028:37:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9055:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9042:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9042:23:72"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9032:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9074:28:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9092:2:72",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9096:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9088:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9088:10:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9100:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9084:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9084:18:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9078:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9129:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9138:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9141:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9131:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9131:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9131:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9117:6:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9125:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9114:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9114:14:72"
                  },
                  "nodeType": "YulIf",
                  "src": "9111:34:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9154:84:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9210:9:72"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9221:6:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9206:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9206:22:72"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9230:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9180:25:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9180:58:72"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "9158:8:72",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "9168:8:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9247:18:72",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "9257:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9247:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9274:18:72",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "9284:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9274:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9301:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9328:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9339:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9324:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9324:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9311:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9311:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9301:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9352:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9385:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9396:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9381:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9381:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "9362:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9362:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "9352:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9409:48:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9442:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9453:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9438:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9438:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "9419:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9419:38:72"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "9409:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9466:49:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9499:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9510:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9495:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9495:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "9476:18:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9476:39:72"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "9466:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9524:43:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9551:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9562:3:72",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9547:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9547:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9534:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9534:33:72"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "9524:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9576:49:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9609:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9620:3:72",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9605:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9605:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9592:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9592:33:72"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "9580:8:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9654:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9663:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9666:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9656:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9656:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9656:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "9640:8:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9650:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9637:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9637:16:72"
                  },
                  "nodeType": "YulIf",
                  "src": "9634:36:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9679:61:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9710:9:72"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "9721:8:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9706:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9706:24:72"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9732:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "9689:16:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9689:51:72"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "9679:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9749:49:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9782:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9793:3:72",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9778:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9778:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9765:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9765:33:72"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "9753:8:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9827:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9836:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9839:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9829:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9829:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9829:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "9813:8:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9823:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9810:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9810:16:72"
                  },
                  "nodeType": "YulIf",
                  "src": "9807:36:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9852:86:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9908:9:72"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "9919:8:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9904:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9904:24:72"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9930:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "9878:25:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9878:60:72"
                  },
                  "variables": [
                    {
                      "name": "value8_1",
                      "nodeType": "YulTypedName",
                      "src": "9856:8:72",
                      "type": ""
                    },
                    {
                      "name": "value9_1",
                      "nodeType": "YulTypedName",
                      "src": "9866:8:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9947:18:72",
                  "value": {
                    "name": "value8_1",
                    "nodeType": "YulIdentifier",
                    "src": "9957:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "9947:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9974:18:72",
                  "value": {
                    "name": "value9_1",
                    "nodeType": "YulIdentifier",
                    "src": "9984:8:72"
                  },
                  "variableNames": [
                    {
                      "name": "value9",
                      "nodeType": "YulIdentifier",
                      "src": "9974:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_addresst_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8850:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8861:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8873:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8881:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8889:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8897:6:72",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8905:6:72",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8913:6:72",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "8921:6:72",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "8929:6:72",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "8937:6:72",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "8945:6:72",
                "type": ""
              }
            ],
            "src": "8720:1278:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10087:186:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10133:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10142:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10145:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10135:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10135:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10135:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10108:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10117:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10104:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10104:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10129:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10100:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10100:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "10097:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10158:36:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10184:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10171:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10171:23:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10162:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10227:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10236:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10239:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10229:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10229:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10229:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10216:5:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10223:1:72",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10213:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10213:12:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10206:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10206:20:72"
                  },
                  "nodeType": "YulIf",
                  "src": "10203:40:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10252:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10262:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10252:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Standard_$21813",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10053:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10064:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10076:6:72",
                "type": ""
              }
            ],
            "src": "10003:270:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10363:186:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10409:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10418:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10421:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10411:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10411:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10411:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10384:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10393:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10380:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10380:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10405:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10376:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10376:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "10373:52:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10434:36:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10460:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "10447:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10447:23:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10438:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10503:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10512:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10515:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10505:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10505:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10505:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10492:5:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10499:1:72",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10489:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10489:12:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10482:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10482:20:72"
                  },
                  "nodeType": "YulIf",
                  "src": "10479:40:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10528:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10538:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10528:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_TradeType_$21823",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10329:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10340:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10352:6:72",
                "type": ""
              }
            ],
            "src": "10278:271:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10667:947:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10714:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10723:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10726:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10716:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10716:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10716:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10688:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10697:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10684:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10684:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10709:3:72",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10680:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10680:33:72"
                  },
                  "nodeType": "YulIf",
                  "src": "10677:53:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10739:23:72",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10759:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10753:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10753:9:72"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "10743:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10771:34:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "10793:6:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10801:3:72",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10789:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10789:16:72"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "10775:10:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10880:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "10882:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10882:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10882:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "10823:10:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10843:2:72",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10847:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10839:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10839:10:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10851:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10835:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10835:18:72"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10820:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10820:34:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "10859:10:72"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10871:6:72"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10856:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10856:22:72"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "10817:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10817:62:72"
                  },
                  "nodeType": "YulIf",
                  "src": "10814:88:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10918:2:72",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "10922:10:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10911:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10911:22:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10911:22:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10942:29:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10961:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10955:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10955:16:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10946:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11005:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "10980:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10980:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10980:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "11027:6:72"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11035:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11020:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11020:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11020:21:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11050:40:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11075:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11086:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11071:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11071:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11065:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11065:25:72"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "11054:7:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "11124:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "11099:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11099:33:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11099:33:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11152:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11160:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11148:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11148:15:72"
                      },
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "11165:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11141:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11141:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11141:32:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11182:40:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11207:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11218:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11203:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11203:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11197:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11197:25:72"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "11186:7:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "11256:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "11231:24:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11231:33:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11231:33:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11284:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11292:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11280:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11280:15:72"
                      },
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "11297:7:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11273:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11273:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11273:32:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11325:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11333:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11321:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11321:15:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11348:9:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11359:2:72",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11344:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11344:18:72"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11338:5:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11338:25:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11314:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11314:50:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11314:50:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11384:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11392:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11380:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11380:16:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11408:9:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11419:3:72",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11404:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11404:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11398:5:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11398:26:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11373:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11373:52:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11373:52:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11445:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11453:3:72",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11441:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11441:16:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11469:9:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11480:3:72",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11465:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11465:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11459:5:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11459:26:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11434:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11434:52:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11434:52:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11506:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11514:3:72",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11502:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11502:16:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11566:9:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11577:3:72",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11562:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11562:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_enum_HoldStatusCode_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11520:41:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11520:62:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11495:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11495:88:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11495:88:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11592:16:72",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "11602:6:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11592:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_ERC20HoldData_$12432_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10633:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10644:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10656:6:72",
                "type": ""
              }
            ],
            "src": "10554:1060:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11744:231:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11754:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "11768:7:72"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11777:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11764:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11764:23:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11758:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11812:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11821:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11824:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11814:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11814:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11814:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "11803:2:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11807:3:72",
                        "type": "",
                        "value": "512"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11799:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11799:12:72"
                  },
                  "nodeType": "YulIf",
                  "src": "11796:32:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11837:13:72",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11847:3:72",
                    "type": "",
                    "value": "480"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "11841:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11874:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11883:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11886:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11876:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11876:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11876:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "11866:2:72"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "11870:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11862:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11862:11:72"
                  },
                  "nodeType": "YulIf",
                  "src": "11859:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11899:19:72",
                  "value": {
                    "name": "headStart",
                    "nodeType": "YulIdentifier",
                    "src": "11909:9:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11899:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11927:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11954:9:72"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "11965:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11950:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11950:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11937:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11937:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "11927:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_TradeRequestInput_$21930_calldata_ptrt_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11702:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11713:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11725:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11733:6:72",
                "type": ""
              }
            ],
            "src": "11619:356:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12050:110:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12096:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12105:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12108:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12098:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12098:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12098:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12071:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12080:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12067:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12067:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12092:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12063:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12063:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "12060:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12121:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12144:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12131:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12131:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12121:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12016:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12027:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12039:6:72",
                "type": ""
              }
            ],
            "src": "11980:180:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12246:103:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12292:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12301:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12304:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12294:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12294:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12294:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12267:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12276:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12263:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12263:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12288:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12259:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12259:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "12256:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12317:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12333:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12327:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12327:16:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12317:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12212:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12223:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12235:6:72",
                "type": ""
              }
            ],
            "src": "12165:184:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12438:225:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12484:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12493:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12496:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12486:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12486:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12486:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12459:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12468:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12455:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12455:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12480:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12451:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12451:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "12448:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12509:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12532:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12519:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12519:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12509:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12551:45:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12581:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12592:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12577:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12577:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12564:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12564:32:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12555:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12627:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12605:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12605:28:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12605:28:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12642:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12652:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "12642:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12396:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12407:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12419:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12427:6:72",
                "type": ""
              }
            ],
            "src": "12354:309:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12769:276:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12815:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12824:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12827:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12817:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12817:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12817:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12790:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12799:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12786:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12786:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12811:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12782:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12782:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "12779:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12840:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12863:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12850:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12850:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12840:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12882:45:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12912:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12923:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12908:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12908:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12895:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12895:32:72"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12886:5:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12958:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12936:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12936:28:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12936:28:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12973:15:72",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12983:5:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "12973:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12997:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13024:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13035:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13020:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13020:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13007:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13007:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "12997:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_boolt_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12719:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12730:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12742:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12750:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12758:6:72",
                "type": ""
              }
            ],
            "src": "12668:377:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13137:161:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13183:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13192:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13195:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13185:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13185:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13185:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13158:7:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13167:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13154:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13154:23:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13179:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13150:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13150:32:72"
                  },
                  "nodeType": "YulIf",
                  "src": "13147:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13208:33:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13231:9:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13218:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13218:23:72"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13208:6:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13250:42:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13277:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13288:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13273:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13273:18:72"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13260:12:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13260:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "13250:6:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13095:9:72",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13106:7:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13118:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13126:6:72",
                "type": ""
              }
            ],
            "src": "13050:248:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13352:208:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13362:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13382:5:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13376:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13376:12:72"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13366:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13404:3:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13409:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13397:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13397:19:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13397:19:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13451:5:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13458:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13447:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13447:16:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13469:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13474:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13465:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13465:14:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13481:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "13425:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13425:63:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13425:63:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13497:57:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13512:3:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "13525:6:72"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13533:2:72",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13521:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13521:15:72"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13542:2:72",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "13538:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13538:7:72"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "13517:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13517:29:72"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13508:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13508:39:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13549:4:72",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13504:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13504:50:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13497:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13329:5:72",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13336:3:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13344:3:72",
                "type": ""
              }
            ],
            "src": "13303:257:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13622:638:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13639:3:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13654:5:72"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "13648:5:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13648:12:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13670:3:72",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13675:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "13666:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13666:11:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13679:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "13662:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13662:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13644:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13644:38:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13632:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13632:51:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13632:51:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13703:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13708:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13699:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13699:14:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13725:5:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13732:4:72",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13721:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13721:16:72"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13715:5:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13715:23:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13692:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13692:47:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13692:47:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13759:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13764:4:72",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13755:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13755:14:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13781:5:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13788:4:72",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13777:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13777:16:72"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "13771:5:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13771:23:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13748:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13748:47:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13748:47:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13804:43:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13834:5:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13841:4:72",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13830:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13830:16:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13824:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13824:23:72"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "13808:12:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "13887:12:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_enum_Standard",
                      "nodeType": "YulIdentifier",
                      "src": "13856:30:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13856:44:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13856:44:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13920:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13925:4:72",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13916:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13916:14:72"
                      },
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "13932:12:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13909:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13909:36:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13909:36:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13965:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13970:4:72",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13961:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13961:14:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14001:5:72"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14008:4:72",
                                        "type": "",
                                        "value": "0x80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13997:3:72"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13997:16:72"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "13991:5:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13991:23:72"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13984:6:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13984:31:72"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13977:6:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13977:39:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13954:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13954:63:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13954:63:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14037:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14042:4:72",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14033:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14033:14:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14073:5:72"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14080:4:72",
                                        "type": "",
                                        "value": "0xa0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14069:3:72"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14069:16:72"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "14063:5:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14063:23:72"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14056:6:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14056:31:72"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14049:6:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14049:39:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14026:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14026:63:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14026:63:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14098:45:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14130:5:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14137:4:72",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14126:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14126:16:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14120:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14120:23:72"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "14102:14:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14185:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "14187:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14187:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14187:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memberValue0_1",
                            "nodeType": "YulIdentifier",
                            "src": "14165:14:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14181:1:72",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14162:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14162:21:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14155:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14155:29:72"
                  },
                  "nodeType": "YulIf",
                  "src": "14152:55:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14227:3:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14232:4:72",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14223:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14223:14:72"
                      },
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "14239:14:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14216:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14216:38:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14216:38:72"
                }
              ]
            },
            "name": "abi_encode_struct_UserTradeData",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13606:5:72",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13613:3:72",
                "type": ""
              }
            ],
            "src": "13565:695:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14384:63:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14401:3:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14406:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14394:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14394:19:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14394:19:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14422:19:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14433:3:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14438:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14429:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14429:12:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14422:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14360:3:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14365:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14376:3:72",
                "type": ""
              }
            ],
            "src": "14265:182:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14591:137:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14601:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14621:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14615:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14615:13:72"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "14605:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14663:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14671:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14659:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14659:17:72"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14678:3:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14683:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "14637:21:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14637:53:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14637:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14699:23:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14710:3:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14715:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14706:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14706:16:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14699:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14567:3:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14572:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14583:3:72",
                "type": ""
              }
            ],
            "src": "14452:276:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14925:79:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14942:3:72"
                      },
                      {
                        "hexValue": "455243313832305f4143434550545f4d41474943",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14947:22:72",
                        "type": "",
                        "value": "ERC1820_ACCEPT_MAGIC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14935:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14935:35:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14935:35:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14979:19:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14990:3:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14995:2:72",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14986:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14986:12:72"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14979:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14909:3:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14917:3:72",
                "type": ""
              }
            ],
            "src": "14733:271:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15110:102:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15120:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15132:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15143:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15128:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15128:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15120:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15162:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15177:6:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15193:3:72",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15198:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "15189:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15189:11:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15202:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "15185:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15185:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15173:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15173:32:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15155:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15155:51:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15155:51:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15079:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15090:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15101:4:72",
                "type": ""
              }
            ],
            "src": "15009:203:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15346:175:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15356:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15368:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15379:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15364:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15364:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15356:4:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15391:29:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15409:3:72",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15414:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15405:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15405:11:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15418:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "15401:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15401:19:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15395:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15436:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15451:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15459:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15447:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15447:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15429:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15429:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15429:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15483:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15494:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15479:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15479:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "15503:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15511:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15499:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15499:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15472:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15472:43:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15472:43:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15307:9:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15318:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15326:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15337:4:72",
                "type": ""
              }
            ],
            "src": "15217:304:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15683:218:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15693:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15705:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15716:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15701:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15701:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15693:4:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15728:29:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15746:3:72",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15751:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15742:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15742:11:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15755:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "15738:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15738:19:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15732:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15773:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15788:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15796:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15784:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15784:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15766:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15766:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15766:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15820:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15831:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15816:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15816:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "15840:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15848:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15836:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15836:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15809:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15809:43:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15809:43:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15872:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15883:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15868:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15868:18:72"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "15888:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15861:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15861:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15861:34:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15636:9:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "15647:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15655:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15663:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15674:4:72",
                "type": ""
              }
            ],
            "src": "15526:375:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16035:145:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16045:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16057:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16068:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16053:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16053:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16045:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16087:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16102:6:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16118:3:72",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16123:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "16114:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16114:11:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16127:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "16110:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16110:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16098:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16098:32:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16080:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16080:51:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16080:51:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16151:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16162:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16147:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16147:18:72"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16167:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16140:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16140:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16140:34:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15996:9:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16007:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16015:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16026:4:72",
                "type": ""
              }
            ],
            "src": "15906:274:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16370:232:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16380:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16392:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16403:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16388:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16388:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16380:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16423:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16438:6:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16454:3:72",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16459:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "16450:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16450:11:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16463:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "16446:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16446:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16434:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16434:32:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16416:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16416:51:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16416:51:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16487:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16498:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16483:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16483:18:72"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16503:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16476:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16476:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16476:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16530:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16541:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16526:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16526:18:72"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16546:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16519:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16519:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16519:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16573:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16584:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16569:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16569:18:72"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "16589:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16562:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16562:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16562:34:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes32__to_t_address_t_bytes32_t_uint256_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16315:9:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16326:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16334:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16342:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16350:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16361:4:72",
                "type": ""
              }
            ],
            "src": "16185:417:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16736:145:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16746:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16758:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16769:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16754:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16754:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16746:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16788:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16803:6:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16819:3:72",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16824:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "16815:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16815:11:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16828:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "16811:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16811:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16799:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16799:32:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16781:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16781:51:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16781:51:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16852:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16863:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16848:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16848:18:72"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16868:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16841:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16841:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16841:34:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16697:9:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16708:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16716:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16727:4:72",
                "type": ""
              }
            ],
            "src": "16607:274:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17037:507:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17047:12:72",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17057:2:72",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "17051:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17068:32:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17086:9:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "17097:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17082:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17082:18:72"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "17072:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17116:9:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "17127:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17109:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17109:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17109:21:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17139:17:72",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "17150:6:72"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "17143:3:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17165:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17185:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17179:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17179:13:72"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "17169:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "17208:6:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17216:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17201:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17201:22:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17201:22:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17232:25:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17243:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17254:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17239:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17239:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17232:3:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17266:29:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17284:6:72"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "17292:2:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17280:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17280:15:72"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "17270:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17304:10:72",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17313:1:72",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "17308:1:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17372:146:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "17393:3:72"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "17408:6:72"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "17402:5:72"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17402:13:72"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17425:3:72",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17430:1:72",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "17421:3:72"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17421:11:72"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "17434:1:72",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "17417:3:72"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17417:19:72"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "17398:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17398:39:72"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17386:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17386:52:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17386:52:72"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "17451:19:72",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "17462:3:72"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "17467:2:72"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17458:3:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17458:12:72"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17451:3:72"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "17483:25:72",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "17497:6:72"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "17505:2:72"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17493:3:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17493:15:72"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17483:6:72"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17334:1:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17337:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17331:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17331:13:72"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "17345:18:72",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17347:14:72",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "17356:1:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17359:1:72",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17352:3:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17352:9:72"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "17347:1:72"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "17327:3:72",
                    "statements": []
                  },
                  "src": "17323:195:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17527:11:72",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "17535:3:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17527:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17006:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17017:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17028:4:72",
                "type": ""
              }
            ],
            "src": "16886:658:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17644:92:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17654:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17666:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17677:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17662:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17662:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17654:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17696:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "17721:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "17714:6:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17714:14:72"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "17707:6:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17707:22:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17689:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17689:41:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17689:41:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17613:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17624:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17635:4:72",
                "type": ""
              }
            ],
            "src": "17549:187:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17842:76:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17852:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17864:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17875:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17860:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17860:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17852:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17894:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17905:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17887:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17887:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17887:25:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17811:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17822:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17833:4:72",
                "type": ""
              }
            ],
            "src": "17741:177:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18052:145:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18062:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18074:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18085:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18070:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18070:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18062:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18104:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18115:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18097:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18097:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18097:25:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18142:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18153:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18138:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18138:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18162:6:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18178:3:72",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18183:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "18174:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18174:11:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18187:1:72",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "18170:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18170:19:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18158:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18158:32:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18131:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18131:60:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18131:60:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18013:9:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18024:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18032:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18043:4:72",
                "type": ""
              }
            ],
            "src": "17923:274:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18359:218:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18369:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18381:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18392:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18377:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18377:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18369:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18411:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18422:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18404:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18404:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18404:25:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18438:29:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18456:3:72",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18461:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "18452:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18452:11:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18465:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "18448:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18448:19:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "18442:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18487:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18498:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18483:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18483:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18507:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18515:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18503:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18503:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18476:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18476:43:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18476:43:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18539:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18550:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18535:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18535:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "18559:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18567:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18555:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18555:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18528:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18528:43:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18528:43:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18312:9:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18323:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18331:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18339:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18350:4:72",
                "type": ""
              }
            ],
            "src": "18202:375:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18859:444:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18876:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18887:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18869:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18869:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18869:25:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18903:29:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18921:3:72",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18926:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "18917:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18917:11:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18930:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "18913:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18913:19:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "18907:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18952:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18963:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18948:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18948:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18972:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "18980:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18968:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18968:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18941:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18941:43:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18941:43:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19004:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19015:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19000:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19000:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "19024:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19032:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19020:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19020:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18993:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18993:43:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18993:43:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19056:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19067:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19052:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19052:18:72"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19072:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19045:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19045:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19045:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19099:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19110:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19095:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19095:19:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19116:3:72",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19088:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19088:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19088:32:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19129:59:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "19160:6:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19172:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19183:3:72",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19168:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19168:19:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "19143:16:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19143:45:72"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "19133:6:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19208:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19219:3:72",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19204:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19204:19:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "19229:6:72"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19237:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19225:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19225:22:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19197:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19197:51:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19197:51:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19257:40:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "19282:6:72"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "19290:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "19265:16:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19265:32:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19257:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18788:9:72",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "18799:6:72",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "18807:6:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "18815:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18823:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18831:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18839:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18850:4:72",
                "type": ""
              }
            ],
            "src": "18582:721:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19693:422:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19710:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19721:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19703:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19703:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19703:25:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19737:29:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19755:3:72",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19760:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "19751:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19751:11:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19764:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "19747:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19747:19:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "19741:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19786:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19797:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19782:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19782:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "19806:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19814:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19802:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19802:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19775:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19775:43:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19775:43:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19838:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19849:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19834:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19834:18:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "19858:6:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "19866:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19854:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19854:15:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19827:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19827:43:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19827:43:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19890:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19901:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19886:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19886:18:72"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19906:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19879:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19879:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19879:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19933:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19944:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19929:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19929:19:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19950:3:72",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19922:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19922:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19922:32:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19974:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19985:3:72",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19970:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19970:19:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19991:1:72",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19963:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19963:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19963:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20013:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20024:3:72",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20009:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20009:19:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20030:3:72",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20002:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20002:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20002:32:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20054:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20065:3:72",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20050:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20050:19:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20071:1:72",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20043:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20043:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20043:30:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20082:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20094:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20105:3:72",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20090:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20090:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20082:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19638:9:72",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "19649:6:72",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "19657:6:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19665:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19673:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19684:4:72",
                "type": ""
              }
            ],
            "src": "19308:807:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20249:119:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20259:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20271:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20282:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20267:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20267:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20259:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20301:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20312:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20294:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20294:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20294:25:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20339:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20350:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20335:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20335:18:72"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20355:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20328:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20328:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20328:34:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20210:9:72",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20221:6:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20229:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20240:4:72",
                "type": ""
              }
            ],
            "src": "20120:248:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20547:239:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20564:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20575:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20557:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20557:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20557:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20598:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20609:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20594:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20594:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20614:2:72",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20587:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20587:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20587:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20637:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20648:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20633:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20633:18:72"
                      },
                      {
                        "hexValue": "53746172742064617465206e6565647320746f20626520736574206174206c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20653:34:72",
                        "type": "",
                        "value": "Start date needs to be set at le"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20626:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20626:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20626:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20708:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20719:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20704:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20704:18:72"
                      },
                      {
                        "hexValue": "6173742061207765656b206265666f7265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20724:19:72",
                        "type": "",
                        "value": "ast a week before"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20697:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20697:47:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20697:47:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20753:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20765:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20776:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20761:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20761:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20753:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_02ebd69188c7db9c3dd01f2aaa1d87221471968f5aa99525c48b99a1505380e0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20524:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20538:4:72",
                "type": ""
              }
            ],
            "src": "20373:413:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20965:254:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20982:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20993:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20975:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20975:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20975:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21016:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21027:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21012:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21012:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21032:2:72",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21005:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21005:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21005:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21055:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21066:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21051:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21051:18:72"
                      },
                      {
                        "hexValue": "54726164652063616e206f6e6c79206265206578656375746564206279206578",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21071:34:72",
                        "type": "",
                        "value": "Trade can only be executed by ex"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21044:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21044:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21044:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21126:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21137:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21122:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21122:18:72"
                      },
                      {
                        "hexValue": "65637574657220646566696e6564206174207472616465206372656174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21142:34:72",
                        "type": "",
                        "value": "ecuter defined at trade creation"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21115:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21115:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21115:62:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21186:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21198:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21209:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21194:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21194:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21186:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_05373b993917885459831a325920a48a75caf468c1ee77a796e72e930bff1b08__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20942:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20956:4:72",
                "type": ""
              }
            ],
            "src": "20791:428:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21398:223:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21415:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21426:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21408:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21408:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21408:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21449:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21460:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21445:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21445:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21465:2:72",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21438:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21438:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21438:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21488:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21499:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21484:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21484:18:72"
                      },
                      {
                        "hexValue": "546f6b656e73206f66207468652077726f6e67207374616e646172642073656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21504:34:72",
                        "type": "",
                        "value": "Tokens of the wrong standard sen"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21477:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21477:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21477:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21559:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21570:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21555:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21555:18:72"
                      },
                      {
                        "hexValue": "74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21575:3:72",
                        "type": "",
                        "value": "t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21548:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21548:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21548:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21588:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21600:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21611:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21596:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21596:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21588:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0aed4c7d60c28efa628f3b3834329787d344f5899e54ae045c324776c24530d2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21375:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21389:4:72",
                "type": ""
              }
            ],
            "src": "21224:397:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21800:228:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21817:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21828:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21810:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21810:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21810:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21851:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21862:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21847:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21847:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21867:2:72",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21840:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21840:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21840:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21890:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21901:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21886:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21886:18:72"
                      },
                      {
                        "hexValue": "457468657220747261646573206e65656420746f206265206f66207479706520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21906:34:72",
                        "type": "",
                        "value": "Ether trades need to be of type "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21879:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21879:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21879:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21961:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21972:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21957:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21957:18:72"
                      },
                      {
                        "hexValue": "457363726f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21977:8:72",
                        "type": "",
                        "value": "Escrow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21950:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21950:36:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21950:36:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21995:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22007:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22018:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22003:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22003:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21995:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21777:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21791:4:72",
                "type": ""
              }
            ],
            "src": "21626:402:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22207:229:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22224:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22235:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22217:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22217:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22217:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22258:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22269:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22254:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22254:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22274:2:72",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22247:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22247:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22247:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22297:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22308:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22293:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22293:18:72"
                      },
                      {
                        "hexValue": "416d6f756e74206f66204552433134303020746f6b656e73206973206e6f7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22313:34:72",
                        "type": "",
                        "value": "Amount of ERC1400 tokens is not "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22286:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22286:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22286:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22368:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22379:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22364:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22364:18:72"
                      },
                      {
                        "hexValue": "636f7272656374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22384:9:72",
                        "type": "",
                        "value": "correct"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22357:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22357:37:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22357:37:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22403:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22415:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22426:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22411:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22411:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22403:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d4b85b88b80072b90afee0107a9a29103e9d81c09bf5da6eae9a80121a9ce6b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22184:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22198:4:72",
                "type": ""
              }
            ],
            "src": "22033:403:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22615:165:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22632:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22643:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22625:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22625:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22625:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22666:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22677:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22662:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22662:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22682:2:72",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22655:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22655:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22655:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22705:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22716:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22701:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22701:18:72"
                      },
                      {
                        "hexValue": "486f6c64206d757374206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22721:17:72",
                        "type": "",
                        "value": "Hold must exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22694:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22694:45:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22694:45:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22748:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22760:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22771:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22756:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22756:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22748:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0e67fb1929d4780c273d05979a1e9884927127ac457215fefeddd8d222ee5b83__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22592:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22606:4:72",
                "type": ""
              }
            ],
            "src": "22441:339:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22959:231:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22976:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22987:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22969:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22969:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22969:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23010:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23021:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23006:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23006:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23026:2:72",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22999:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22999:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22999:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23049:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23060:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23045:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23045:18:72"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23065:34:72",
                        "type": "",
                        "value": "Sender is not allowed to cancel "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23038:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23038:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23038:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23120:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23131:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23116:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23116:18:72"
                      },
                      {
                        "hexValue": "747261646520283129",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23136:11:72",
                        "type": "",
                        "value": "trade (1)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23109:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23109:39:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23109:39:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23157:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23169:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23180:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23165:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23165:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23157:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_13a62c55f76587a2dd941a7afaba21d8be7cba385c183c78ab02aae0f038fccf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22936:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22950:4:72",
                "type": ""
              }
            ],
            "src": "22785:405:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23369:246:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23386:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23397:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23379:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23379:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23379:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23420:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23431:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23416:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23416:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23436:2:72",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23409:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23409:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23409:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23459:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23470:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23455:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23455:18:72"
                      },
                      {
                        "hexValue": "547261646520686173206e6f74206265656e20617070726f7665642062792061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23475:34:72",
                        "type": "",
                        "value": "Trade has not been approved by a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23448:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23448:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23448:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23530:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23541:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23526:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23526:18:72"
                      },
                      {
                        "hexValue": "6c6c20746f6b656e20636f6e74726f6c6c65727320796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23546:26:72",
                        "type": "",
                        "value": "ll token controllers yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23519:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23519:54:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23519:54:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23582:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23594:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23605:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23590:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23590:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23582:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_20db3929816dba2a8275bb33ef449b4b1729f4b33bc79b910811933ea2508b0c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23346:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23360:4:72",
                "type": ""
              }
            ],
            "src": "23195:420:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23794:151:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23811:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23822:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23804:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23804:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23804:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23845:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23856:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23841:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23841:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23861:1:72",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23834:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23834:29:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23834:29:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23883:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23894:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23879:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23879:18:72"
                      },
                      {
                        "hexValue": "3530",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23899:4:72",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23872:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23872:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23872:32:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23913:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23925:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23936:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23921:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23921:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23913:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23771:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23785:4:72",
                "type": ""
              }
            ],
            "src": "23620:325:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24124:168:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24141:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24152:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24134:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24134:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24134:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24175:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24186:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24171:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24171:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24191:2:72",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24164:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24164:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24164:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24214:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24225:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24210:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24210:18:72"
                      },
                      {
                        "hexValue": "4e6f207072696365206f776e657273686970",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24230:20:72",
                        "type": "",
                        "value": "No price ownership"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24203:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24203:48:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24203:48:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24260:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24272:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24283:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24268:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24268:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24260:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_242e1ec42c4d9d50f39212896afb445568abd9a5227b187111929b57dbb7bf2e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24101:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24115:4:72",
                "type": ""
              }
            ],
            "src": "23950:342:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24471:228:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24488:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24499:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24481:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24481:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24481:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24522:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24533:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24518:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24518:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24538:2:72",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24511:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24511:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24511:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24561:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24572:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24557:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24557:18:72"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24577:34:72",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24550:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24550:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24550:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24632:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24643:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24628:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24628:18:72"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24648:8:72",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24621:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24621:36:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24621:36:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24666:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24678:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24689:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24674:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24674:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24666:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24448:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24462:4:72",
                "type": ""
              }
            ],
            "src": "24297:402:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24878:230:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24895:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24906:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24888:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24888:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24888:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24929:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24940:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24925:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24925:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24945:2:72",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24918:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24918:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24918:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24968:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24979:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24964:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24964:18:72"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f7263652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24984:34:72",
                        "type": "",
                        "value": "Sender is not allowed to force t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24957:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24957:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24957:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25039:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25050:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25035:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25035:18:72"
                      },
                      {
                        "hexValue": "7261646520283129",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25055:10:72",
                        "type": "",
                        "value": "rade (1)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25028:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25028:38:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25028:38:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25075:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25087:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25098:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25083:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25083:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25075:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_255ed6eb6f30d1485f3dcafc169da0ede71d63ed3f663207dcd881f82aecfb81__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24855:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24869:4:72",
                "type": ""
              }
            ],
            "src": "24704:404:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25287:238:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25304:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25315:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25297:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25297:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25297:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25338:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25349:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25334:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25334:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25354:2:72",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25327:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25327:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25327:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25377:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25388:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25373:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25373:18:72"
                      },
                      {
                        "hexValue": "507269636520736574746572206973206e6f7420616e206f7261636c6520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25393:34:72",
                        "type": "",
                        "value": "Price setter is not an oracle fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25366:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25366:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25366:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25448:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25459:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25444:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25444:18:72"
                      },
                      {
                        "hexValue": "72207468697320746f6b656e20283129",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25464:18:72",
                        "type": "",
                        "value": "r this token (1)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25437:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25437:46:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25437:46:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25492:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25504:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25515:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25500:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25500:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25492:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2f0a6c014b93879ada9ab209e5b7a62ef24399af93bf6c00c1529d6e0d627fce__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25264:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25278:4:72",
                "type": ""
              }
            ],
            "src": "25113:412:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25704:251:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25721:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25732:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25714:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25714:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25714:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25755:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25766:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25751:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25751:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25771:2:72",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25744:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25744:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25744:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25794:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25805:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25790:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25790:18:72"
                      },
                      {
                        "hexValue": "4f6e6c7920746f6b656e20636f6e74726f6c6c657273206f6620696e766f6c76",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25810:34:72",
                        "type": "",
                        "value": "Only token controllers of involv"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25783:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25783:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25783:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25865:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25876:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25861:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25861:18:72"
                      },
                      {
                        "hexValue": "656420746f6b656e732063616e20617070726f76652061207472616465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25881:31:72",
                        "type": "",
                        "value": "ed tokens can approve a trade"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25854:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25854:59:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25854:59:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25922:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25934:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25945:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25930:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25930:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25922:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_373863ced32ac2eb9784d689aa574556050019791cd28b1e2777baf5ec9163da__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25681:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25695:4:72",
                "type": ""
              }
            ],
            "src": "25530:425:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26134:299:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26151:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26162:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26144:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26144:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26144:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26185:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26196:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26181:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26181:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26201:2:72",
                        "type": "",
                        "value": "69"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26174:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26174:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26174:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26224:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26235:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26220:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26220:18:72"
                      },
                      {
                        "hexValue": "5472616465206578656375746572206e6565647320746f2062656c6f6e672074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26240:34:72",
                        "type": "",
                        "value": "Trade executer needs to belong t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26213:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26213:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26213:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26295:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26306:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26291:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26291:18:72"
                      },
                      {
                        "hexValue": "6f20746865206c697374206f6620616c6c6f7765642074726164652065786563",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26311:34:72",
                        "type": "",
                        "value": "o the list of allowed trade exec"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26284:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26284:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26284:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26366:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26377:3:72",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26362:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26362:19:72"
                      },
                      {
                        "hexValue": "7574657273",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26383:7:72",
                        "type": "",
                        "value": "uters"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26355:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26355:36:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26355:36:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26400:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26412:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26423:3:72",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26408:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26408:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26400:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3a6c5fb48c287bee984928951d89e75c588c9b0df86b8ef015c0ada5e6d8b633__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26111:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26125:4:72",
                "type": ""
              }
            ],
            "src": "25960:473:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26612:240:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26629:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26640:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26622:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26622:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26622:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26663:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26674:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26659:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26659:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26679:2:72",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26652:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26652:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26652:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26702:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26713:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26698:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26698:18:72"
                      },
                      {
                        "hexValue": "54726164652063616e206e6f7420626520666f7263656420696620746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26718:34:72",
                        "type": "",
                        "value": "Trade can not be forced if token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26691:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26691:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26691:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26773:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26784:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26769:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26769:18:72"
                      },
                      {
                        "hexValue": "73206861766520636f6e74726f6c6c657273",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26789:20:72",
                        "type": "",
                        "value": "s have controllers"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26762:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26762:48:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26762:48:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26819:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26831:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26842:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26827:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26827:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26819:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e59e007c4647d712b65f3ed438ec2af5656c5aa20116da30235e14fc2c290a3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26589:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26603:4:72",
                "type": ""
              }
            ],
            "src": "26438:414:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27031:178:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27048:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27059:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27041:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27041:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27041:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27082:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27093:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27078:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27078:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27098:2:72",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27071:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27071:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27071:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27121:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27132:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27117:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27117:18:72"
                      },
                      {
                        "hexValue": "416d6f756e74206f6620455448206973206e6f7420636f7272656374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27137:30:72",
                        "type": "",
                        "value": "Amount of ETH is not correct"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27110:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27110:58:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27110:58:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27177:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27189:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27200:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27185:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27185:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27177:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3fdd50b576f957d76e864f96b9d0c991bd6b1f33ca019606da09db7f23167ec4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27008:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27022:4:72",
                "type": ""
              }
            ],
            "src": "26857:352:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27388:242:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27405:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27416:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27398:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27398:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27398:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27439:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27450:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27435:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27435:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27455:2:72",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27428:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27428:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27428:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27478:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27489:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27474:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27474:18:72"
                      },
                      {
                        "hexValue": "547261646520686173206e6f74206265656e2061636365707465642062792061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27494:34:72",
                        "type": "",
                        "value": "Trade has not been accepted by a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27467:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27467:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27467:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27549:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27560:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27545:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27545:18:72"
                      },
                      {
                        "hexValue": "6c6c20746f6b656e20686f6c6465727320796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27565:22:72",
                        "type": "",
                        "value": "ll token holders yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27538:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27538:50:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27538:50:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27597:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27609:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27620:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27605:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27605:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27597:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4b556a5d77d5a92d99d2da30cbb6be3fd94832b2e3e5f440b20345d863b04042__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27365:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27379:4:72",
                "type": ""
              }
            ],
            "src": "27214:416:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27809:231:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27826:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27837:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27819:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27819:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27819:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27860:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27871:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27856:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27856:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27876:2:72",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27849:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27849:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27849:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27899:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27910:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27895:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27895:18:72"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27915:34:72",
                        "type": "",
                        "value": "Sender is not allowed to cancel "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27888:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27888:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27888:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27970:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27981:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27966:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27966:18:72"
                      },
                      {
                        "hexValue": "747261646520283029",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27986:11:72",
                        "type": "",
                        "value": "trade (0)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27959:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27959:39:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27959:39:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28007:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28019:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28030:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28015:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28015:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28007:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5d6836f0c0e087667fc172041236feaf9634db8287593900fb516b3a15e093e3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27786:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27800:4:72",
                "type": ""
              }
            ],
            "src": "27635:405:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28219:231:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28236:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28247:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28229:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28229:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28229:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28270:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28281:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28266:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28266:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28286:2:72",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28259:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28259:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28259:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28309:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28320:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28305:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28305:18:72"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28325:34:72",
                        "type": "",
                        "value": "Sender is not allowed to cancel "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28298:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28298:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28298:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28380:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28391:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28376:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28376:18:72"
                      },
                      {
                        "hexValue": "747261646520283329",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28396:11:72",
                        "type": "",
                        "value": "trade (3)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28369:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28369:39:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28369:39:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28417:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28429:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28440:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28425:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28425:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28417:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_62915fc4bdc23f948b008ac5bb93785842503d33f35707b31a531df5ef8b008f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28196:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28210:4:72",
                "type": ""
              }
            ],
            "src": "28045:405:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28629:151:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28646:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28657:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28639:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28639:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28639:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28680:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28691:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28676:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28676:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28696:1:72",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28669:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28669:29:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28669:29:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28718:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28729:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28714:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28714:18:72"
                      },
                      {
                        "hexValue": "3535",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28734:4:72",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28707:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28707:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28707:32:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28748:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28760:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28771:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28756:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28756:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28748:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28606:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28620:4:72",
                "type": ""
              }
            ],
            "src": "28455:325:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28959:237:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28976:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28987:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28969:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28969:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28969:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29010:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29021:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29006:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29006:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29026:2:72",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28999:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28999:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28999:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29049:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29060:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29045:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29045:18:72"
                      },
                      {
                        "hexValue": "507269636520697320686967686572207468616e20616d6f756e742065736372",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29065:34:72",
                        "type": "",
                        "value": "Price is higher than amount escr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29038:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29038:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29038:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29120:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29131:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29116:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29116:18:72"
                      },
                      {
                        "hexValue": "6f7765642f617574686f72697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29136:17:72",
                        "type": "",
                        "value": "owed/authorized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29109:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29109:45:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29109:45:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29163:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29175:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29186:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29171:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29171:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29163:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6cb1a1c99e78d317001cb18e0e43982675e357ca53b7a61f1a60755ef796f773__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28936:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28950:4:72",
                "type": ""
              }
            ],
            "src": "28785:411:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29375:173:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29392:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29403:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29385:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29385:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29385:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29426:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29437:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29422:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29422:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29442:2:72",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29415:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29415:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29415:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29465:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29476:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29461:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29461:18:72"
                      },
                      {
                        "hexValue": "45787069726174696f6e20646174652069732070617374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29481:25:72",
                        "type": "",
                        "value": "Expiration date is past"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29454:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29454:53:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29454:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29516:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29528:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29539:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29524:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29524:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29516:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29352:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29366:4:72",
                "type": ""
              }
            ],
            "src": "29201:347:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29727:250:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29744:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29755:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29737:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29737:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29737:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29778:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29789:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29774:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29774:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29794:2:72",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29767:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29767:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29767:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29817:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29828:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29813:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29813:18:72"
                      },
                      {
                        "hexValue": "416c6c6f77616e6365206e6565647320746f2062652070726f76696465642069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29833:34:72",
                        "type": "",
                        "value": "Allowance needs to be provided i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29806:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29806:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29806:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29888:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29899:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29884:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29884:18:72"
                      },
                      {
                        "hexValue": "6e20746f6b656e20736d61727420636f6e7472616374206669727374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29904:30:72",
                        "type": "",
                        "value": "n token smart contract first"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29877:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29877:58:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29877:58:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29944:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29956:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29967:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29952:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29952:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29944:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_89aa5a265da805686932ae094ba24a71109e8058a4d7df537bdb317139a2f40b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29704:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29718:4:72",
                "type": ""
              }
            ],
            "src": "29553:424:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30156:166:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30173:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30184:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30166:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30166:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30166:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30207:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30218:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30203:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30203:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30223:2:72",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30196:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30196:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30196:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30246:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30257:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30242:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30242:18:72"
                      },
                      {
                        "hexValue": "57726f6e6720746f6b656e2073656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30262:18:72",
                        "type": "",
                        "value": "Wrong token sent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30235:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30235:46:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30235:46:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30290:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30302:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30313:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30298:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30298:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30290:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ee647a01aa5f1bda643aa6834c1b9128a69a3f433a02ac84adf7f3b27e1e0ee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30133:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30147:4:72",
                "type": ""
              }
            ],
            "src": "29982:340:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30501:181:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30518:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30529:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30511:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30511:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30511:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30552:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30563:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30548:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30548:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30568:2:72",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30541:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30541:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30541:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30591:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30602:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30587:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30587:18:72"
                      },
                      {
                        "hexValue": "546f6b656e207374616e64617264206d75737420626520686f6c6461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30607:33:72",
                        "type": "",
                        "value": "Token standard must be holdable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30580:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30580:61:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30580:61:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "30650:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30662:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30673:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "30658:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30658:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "30650:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8f3fb3eca663334b08617a28f5e55e2698b004ee0a964aa2bc92825ec7c73641__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30478:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30492:4:72",
                "type": ""
              }
            ],
            "src": "30327:355:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "30861:182:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "30878:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30889:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30871:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30871:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30871:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30912:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30923:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30908:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30908:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "30928:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30901:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30901:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30901:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "30951:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "30962:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "30947:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "30947:18:72"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "30967:34:72",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "30940:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "30940:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "30940:62:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31011:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31023:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31034:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31019:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31019:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31011:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "30838:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "30852:4:72",
                "type": ""
              }
            ],
            "src": "30687:356:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31222:181:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31239:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31250:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31232:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31232:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31232:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31273:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31284:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31269:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31269:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31289:2:72",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31262:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31262:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31262:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31312:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31323:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31308:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31308:18:72"
                      },
                      {
                        "hexValue": "746f6b656e2063616e206e6f742062652061207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "31328:33:72",
                        "type": "",
                        "value": "token can not be a zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31301:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31301:61:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31301:61:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31371:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31383:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31394:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31379:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31379:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31371:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31199:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "31213:4:72",
                "type": ""
              }
            ],
            "src": "31048:355:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31582:180:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31599:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31610:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31592:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31592:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31592:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31633:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31644:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31629:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31629:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31649:2:72",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31622:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31622:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31622:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31672:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "31683:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31668:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31668:18:72"
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e206f6e207072696365206f776e657273686970",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "31688:32:72",
                        "type": "",
                        "value": "Competition on price ownership"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31661:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31661:60:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31661:60:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "31730:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31742:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31753:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "31738:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31738:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "31730:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31559:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "31573:4:72",
                "type": ""
              }
            ],
            "src": "31408:354:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "31941:223:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "31958:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "31969:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31951:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31951:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31951:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "31992:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32003:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "31988:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "31988:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32008:2:72",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "31981:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "31981:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "31981:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32031:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32042:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32027:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32027:18:72"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f74206120746f6b656e20636f6e74726f6c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32047:34:72",
                        "type": "",
                        "value": "Sender is not a token controller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32020:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32020:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32020:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32102:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32113:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32098:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32098:18:72"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32118:3:72",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32091:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32091:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32091:31:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32131:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32143:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32154:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32139:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32139:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32131:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a20f967af876332f8e5cf464602ff6aaa46bca373759b506dfded8592e2d84c8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "31918:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "31932:4:72",
                "type": ""
              }
            ],
            "src": "31767:397:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32343:176:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32360:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32371:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32353:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32353:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32353:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32394:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32405:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32390:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32390:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32410:2:72",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32383:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32383:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32383:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32433:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32444:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32429:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32429:18:72"
                      },
                      {
                        "hexValue": "6578656375746554726164652063616e2062652063616c6c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32449:28:72",
                        "type": "",
                        "value": "executeTrade can be called"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32422:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32422:56:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32422:56:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32487:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32499:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32510:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32495:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32495:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32487:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a65d6f43237034d44b2b9bea23e2173099b9a2624f45373df43a0b386609eb3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "32320:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "32334:4:72",
                "type": ""
              }
            ],
            "src": "32169:350:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "32698:238:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32715:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32726:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32708:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32708:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32708:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32749:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32760:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32745:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32745:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32765:2:72",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32738:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32738:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32738:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32788:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32799:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32784:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32784:18:72"
                      },
                      {
                        "hexValue": "507269636520736574746572206973206e6f7420616e206f7261636c6520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32804:34:72",
                        "type": "",
                        "value": "Price setter is not an oracle fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32777:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32777:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32777:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "32859:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "32870:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "32855:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "32855:18:72"
                      },
                      {
                        "hexValue": "72207468697320746f6b656e20283229",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "32875:18:72",
                        "type": "",
                        "value": "r this token (2)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "32848:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32848:46:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "32848:46:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "32903:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "32915:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "32926:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "32911:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "32911:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "32903:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b1178f18a5aa1a32a6e2280a977824c520f59de733c77c9821fa1a6ad0758d01__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "32675:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "32689:4:72",
                "type": ""
              }
            ],
            "src": "32524:412:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33115:226:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33132:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33143:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33125:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33125:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33125:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33166:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33177:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33162:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33162:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33182:2:72",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33155:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33155:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33155:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33205:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33216:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33201:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33201:18:72"
                      },
                      {
                        "hexValue": "547261646520616c72656164792061636365707465642062792074686520686f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "33221:34:72",
                        "type": "",
                        "value": "Trade already accepted by the ho"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33194:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33194:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33194:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33276:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33287:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33272:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33272:18:72"
                      },
                      {
                        "hexValue": "6c646572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "33292:6:72",
                        "type": "",
                        "value": "lder"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33265:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33265:34:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33265:34:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33308:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33320:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33331:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33316:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33316:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "33308:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b5bb3f67205aac1ef56c0f0d2a8a3721a1e2cbbeeb73b468e67cc7251df85270__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "33092:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "33106:4:72",
                "type": ""
              }
            ],
            "src": "32941:400:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33520:232:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33537:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33548:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33530:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33530:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33530:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33571:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33582:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33567:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33567:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33587:2:72",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33560:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33560:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33560:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33610:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33621:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33606:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33606:18:72"
                      },
                      {
                        "hexValue": "4f6e6c79207265676973746572656420686f6c646572732063616e2061636365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "33626:34:72",
                        "type": "",
                        "value": "Only registered holders can acce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33599:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33599:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33599:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33681:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33692:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33677:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33677:18:72"
                      },
                      {
                        "hexValue": "70742061207472616465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "33697:12:72",
                        "type": "",
                        "value": "pt a trade"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33670:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33670:40:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33670:40:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "33719:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33731:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33742:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "33727:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33727:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "33719:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b87811a9660efbe433e1bf8fc747435558a7cca8d25afc47f3b0721d2694b1dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "33497:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "33511:4:72",
                "type": ""
              }
            ],
            "src": "33346:406:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "33931:180:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "33948:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33959:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33941:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33941:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33941:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "33982:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "33993:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "33978:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "33978:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "33998:2:72",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "33971:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "33971:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "33971:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34021:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34032:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34017:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34017:18:72"
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e5374616e646172642070726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "34037:32:72",
                        "type": "",
                        "value": "Invalid tokenStandard provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34010:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34010:60:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34010:60:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "34079:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34091:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34102:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "34087:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34087:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "34079:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c877a4103bc121fd41358537bbacb20b7d369de62eb7417357dd35bafcfe9e8b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "33908:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "33922:4:72",
                "type": ""
              }
            ],
            "src": "33757:354:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34290:177:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34307:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34318:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34300:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34300:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34300:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34341:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34352:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34337:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34337:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34357:2:72",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34330:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34330:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34330:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34380:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34391:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34376:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34376:18:72"
                      },
                      {
                        "hexValue": "537761707320636f6e7472616374206973206e6f74206f776e6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "34396:29:72",
                        "type": "",
                        "value": "Swaps contract is not owned"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34369:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34369:57:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34369:57:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "34435:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34447:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34458:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "34443:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34443:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "34435:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c96902dc6641465bcb47d51e789da6011d4ef6e7cace86feca178d31470e323a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "34267:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "34281:4:72",
                "type": ""
              }
            ],
            "src": "34116:351:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "34646:179:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34663:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34674:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34656:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34656:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34656:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34697:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34708:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34693:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34693:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34713:2:72",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34686:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34686:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34686:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "34736:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "34747:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "34732:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "34732:18:72"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f742061207072696365206f7261636c652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "34752:31:72",
                        "type": "",
                        "value": "Sender is not a price oracle."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "34725:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34725:59:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "34725:59:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "34793:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "34805:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "34816:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "34801:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "34801:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "34793:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cbcf36d182174f136d2e0dc28ab771dc911d5712b5b9ea7fb39228ecd0c9d185__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "34623:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "34637:4:72",
                "type": ""
              }
            ],
            "src": "34472:353:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35004:244:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35021:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35032:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35014:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35014:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35014:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35055:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35066:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35051:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35051:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35071:2:72",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35044:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35044:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35044:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35094:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35105:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35090:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35090:18:72"
                      },
                      {
                        "hexValue": "54726164652063616e206f6e6c79206265206578656375746564206f6e206f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35110:34:72",
                        "type": "",
                        "value": "Trade can only be executed on or"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35083:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35083:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35083:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35165:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35176:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35161:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35161:18:72"
                      },
                      {
                        "hexValue": "20616674657220736574746c656d656e742064617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35181:24:72",
                        "type": "",
                        "value": " after settlement date"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35154:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35154:52:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35154:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "35215:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35227:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35238:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "35223:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35223:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "35215:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc7a1d4adabd6d310d870246894e2ed12129fc57e2852560b268c1d1b670f52f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "34981:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "34995:4:72",
                "type": ""
              }
            ],
            "src": "34830:418:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35427:246:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35444:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35455:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35437:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35437:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35437:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35478:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35489:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35474:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35474:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35494:2:72",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35467:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35467:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35467:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35517:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35528:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35513:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35513:18:72"
                      },
                      {
                        "hexValue": "54726164652063616e277420626520666f7263656420617320746f6b656e7320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35533:34:72",
                        "type": "",
                        "value": "Trade can't be forced as tokens "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35506:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35506:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35506:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35588:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35599:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35584:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35584:18:72"
                      },
                      {
                        "hexValue": "617265206e6f7420617661696c61626c6520736f20666172",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35604:26:72",
                        "type": "",
                        "value": "are not available so far"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35577:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35577:54:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35577:54:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "35640:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35652:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35663:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "35648:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35648:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "35640:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cfd41566fc83253424c692dd5977dabc40d4800a378b116731c43ead1d396f63__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "35404:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "35418:4:72",
                "type": ""
              }
            ],
            "src": "35253:420:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35852:232:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "35869:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35880:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35862:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35862:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35862:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35903:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35914:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35899:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35899:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "35919:2:72",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35892:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35892:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35892:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "35942:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "35953:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "35938:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "35938:18:72"
                      },
                      {
                        "hexValue": "496e76616c696420746f6b656e207374616e6461726420666f7220686f6c6420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "35958:34:72",
                        "type": "",
                        "value": "Invalid token standard for hold "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "35931:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "35931:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "35931:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36013:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36024:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36009:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36009:18:72"
                      },
                      {
                        "hexValue": "74726164652074797065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "36029:12:72",
                        "type": "",
                        "value": "trade type"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36002:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36002:40:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36002:40:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "36051:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36063:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36074:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "36059:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36059:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "36051:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "35829:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "35843:4:72",
                "type": ""
              }
            ],
            "src": "35678:406:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "36263:224:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36280:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36291:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36273:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36273:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36273:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36314:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36325:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36310:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36310:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36330:2:72",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36303:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36303:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36303:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36353:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36364:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36349:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36349:18:72"
                      },
                      {
                        "hexValue": "546f6b656e73206f66207468652077726f6e6720706172746974696f6e207365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "36369:34:72",
                        "type": "",
                        "value": "Tokens of the wrong partition se"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36342:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36342:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36342:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36424:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36435:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36420:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36420:18:72"
                      },
                      {
                        "hexValue": "6e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "36440:4:72",
                        "type": "",
                        "value": "nt"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36413:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36413:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36413:32:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "36454:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36466:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36477:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "36462:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36462:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "36454:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d2707e93029f7cfd1559052cc8a7011948874a8a768af73b9e30b493e73abe98__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "36240:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "36254:4:72",
                "type": ""
              }
            ],
            "src": "36089:398:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "36666:230:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36683:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36694:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36676:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36676:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36676:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36717:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36728:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36713:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36713:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36733:2:72",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36706:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36706:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36706:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36756:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36767:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36752:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36752:18:72"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f7263652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "36772:34:72",
                        "type": "",
                        "value": "Sender is not allowed to force t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36745:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36745:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36745:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "36827:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "36838:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "36823:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "36823:18:72"
                      },
                      {
                        "hexValue": "7261646520283029",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "36843:10:72",
                        "type": "",
                        "value": "rade (0)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "36816:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36816:38:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "36816:38:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "36863:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "36875:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "36886:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "36871:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "36871:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "36863:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d5872adc53feb1228a23992569f03c41f99efcc8573122308ea2220b7a8481b5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "36643:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "36657:4:72",
                "type": ""
              }
            ],
            "src": "36492:404:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "37075:238:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "37092:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37103:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37085:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37085:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37085:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37126:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37137:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37122:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37122:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37142:2:72",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37115:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37115:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37115:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37165:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37176:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37161:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37161:18:72"
                      },
                      {
                        "hexValue": "412074726164652063616e206e6f742062652063726561746564207769746820",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "37181:34:72",
                        "type": "",
                        "value": "A trade can not be created with "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37154:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37154:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37154:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37236:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37247:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37232:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37232:18:72"
                      },
                      {
                        "hexValue": "746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "37252:18:72",
                        "type": "",
                        "value": "the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37225:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37225:46:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37225:46:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "37280:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "37292:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37303:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "37288:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37288:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "37280:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d7422c5722be9eca0f8e40021c8dfba381e5cf7f3a04965f64b9b68b5a46c4e9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "37052:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "37066:4:72",
                "type": ""
              }
            ],
            "src": "36901:412:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "37492:245:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "37509:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37520:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37502:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37502:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37502:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37543:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37554:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37539:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37539:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37559:2:72",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37532:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37532:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37532:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37582:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37593:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37578:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37578:18:72"
                      },
                      {
                        "hexValue": "486f6c64206e6565647320746f2062652070726f766964656420696e20746f6b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "37598:34:72",
                        "type": "",
                        "value": "Hold needs to be provided in tok"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37571:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37571:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37571:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37653:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37664:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37649:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37649:18:72"
                      },
                      {
                        "hexValue": "656e20736d61727420636f6e7472616374206669727374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "37669:25:72",
                        "type": "",
                        "value": "en smart contract first"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37642:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37642:53:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37642:53:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "37704:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "37716:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37727:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "37712:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37712:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "37704:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_da45f966b1666be0485ea33966a8cad21440f8e36525938af606e1c834d9b4c8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "37469:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "37483:4:72",
                "type": ""
              }
            ],
            "src": "37318:419:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "37916:231:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "37933:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37944:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37926:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37926:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37926:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "37967:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "37978:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "37963:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "37963:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "37983:2:72",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37956:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37956:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37956:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38006:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38017:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38002:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38002:18:72"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "38022:34:72",
                        "type": "",
                        "value": "Sender is not allowed to cancel "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "37995:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "37995:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "37995:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38077:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38088:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38073:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38073:18:72"
                      },
                      {
                        "hexValue": "747261646520283229",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "38093:11:72",
                        "type": "",
                        "value": "trade (2)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38066:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38066:39:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38066:39:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "38114:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38126:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38137:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "38122:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38122:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "38114:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddc0ea0a3c16467f3e90962bae7c77db78af2e3817b9cf66cef0d9bf75e269eb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "37893:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "37907:4:72",
                "type": ""
              }
            ],
            "src": "37742:405:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "38326:170:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38343:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38354:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38336:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38336:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38336:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38377:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38388:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38373:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38373:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38393:2:72",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38366:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38366:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38366:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38416:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38427:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38412:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38412:18:72"
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "38432:22:72",
                        "type": "",
                        "value": "Trade is not pending"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38405:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38405:50:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38405:50:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "38464:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38476:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38487:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "38472:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38472:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "38464:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "38303:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "38317:4:72",
                "type": ""
              }
            ],
            "src": "38152:344:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "38675:151:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38692:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38703:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38685:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38685:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38685:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38726:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38737:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38722:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38722:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38742:1:72",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38715:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38715:29:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38715:29:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "38764:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "38775:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "38760:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "38760:18:72"
                      },
                      {
                        "hexValue": "3537",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "38780:4:72",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "38753:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38753:32:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "38753:32:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "38794:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "38806:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "38817:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "38802:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "38802:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "38794:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "38652:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "38666:4:72",
                "type": ""
              }
            ],
            "src": "38501:325:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "39005:227:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39022:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39033:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39015:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39015:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39015:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39056:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39067:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39052:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39052:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39072:2:72",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39045:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39045:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39045:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39095:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39106:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39091:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39091:18:72"
                      },
                      {
                        "hexValue": "746f6b656e20686173206e6f20686f6c6461626c6520746f6b656e2065787465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "39111:34:72",
                        "type": "",
                        "value": "token has no holdable token exte"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39084:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39084:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39084:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39166:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39177:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39162:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39162:18:72"
                      },
                      {
                        "hexValue": "6e73696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "39182:7:72",
                        "type": "",
                        "value": "nsion"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39155:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39155:35:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39155:35:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "39199:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39211:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39222:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "39207:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39207:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "39199:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "38982:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "38996:4:72",
                "type": ""
              }
            ],
            "src": "38831:401:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "39411:172:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39428:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39439:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39421:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39421:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39421:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39462:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39473:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39458:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39458:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39478:2:72",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39451:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39451:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39451:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39501:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39512:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39497:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39497:18:72"
                      },
                      {
                        "hexValue": "696e76616c696420746f6b656e207374616e64617264",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "39517:24:72",
                        "type": "",
                        "value": "invalid token standard"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39490:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39490:52:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39490:52:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "39551:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39563:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39574:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "39559:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39559:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "39551:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f0620a46efe8affa820fbd852dcc28a8e648b503387395bca694e0a29fc04b28__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "39388:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "39402:4:72",
                "type": ""
              }
            ],
            "src": "39237:346:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "39762:169:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39779:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39790:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39772:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39772:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39772:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39813:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39824:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39809:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39809:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39829:2:72",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39802:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39802:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39802:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "39852:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "39863:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "39848:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "39848:18:72"
                      },
                      {
                        "hexValue": "4e6f20686f6c64496420737065636966696564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "39868:21:72",
                        "type": "",
                        "value": "No holdId specified"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "39841:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39841:49:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "39841:49:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "39899:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "39911:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "39922:2:72",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "39907:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "39907:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "39899:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "39739:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "39753:4:72",
                "type": ""
              }
            ],
            "src": "39588:343:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "40110:230:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "40127:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40138:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40120:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40120:21:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40120:21:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40161:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40172:2:72",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40157:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40157:18:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40177:2:72",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40150:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40150:30:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40150:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40200:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40211:2:72",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40196:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40196:18:72"
                      },
                      {
                        "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f7263652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "40216:34:72",
                        "type": "",
                        "value": "Sender is not allowed to force t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40189:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40189:62:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40189:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40271:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40282:2:72",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40267:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40267:18:72"
                      },
                      {
                        "hexValue": "7261646520283229",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "40287:10:72",
                        "type": "",
                        "value": "rade (2)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40260:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40260:38:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40260:38:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "40307:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "40319:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40330:3:72",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "40315:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40315:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "40307:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f3ffbbdcd6ee2ecafc39ed8a1215a00ab98c19e6f204edac1d401983b57656b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "40087:9:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "40101:4:72",
                "type": ""
              }
            ],
            "src": "39936:404:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "40494:830:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "40504:27:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "40516:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40527:3:72",
                        "type": "",
                        "value": "640"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "40512:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40512:19:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "40504:4:72"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "40540:29:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40558:3:72",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40563:1:72",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "40554:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40554:11:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "40567:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "40550:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40550:19:72"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "40544:2:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "40585:9:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "40606:6:72"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "40600:5:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "40600:13:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "40615:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "40596:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40596:22:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40578:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40578:41:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40578:41:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40639:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40650:4:72",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40635:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40635:20:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "40671:6:72"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40679:4:72",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "40667:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40667:17:72"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "40661:5:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "40661:24:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "40687:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "40657:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40657:33:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40628:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40628:63:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40628:63:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40711:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40722:4:72",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40707:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40707:20:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "40743:6:72"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "40751:4:72",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "40739:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "40739:17:72"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "40733:5:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "40733:24:72"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "40759:2:72"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "40729:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40729:33:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40700:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40700:63:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40700:63:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40783:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40794:4:72",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40779:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40779:20:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "40811:6:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "40819:4:72",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "40807:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "40807:17:72"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "40801:5:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40801:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40772:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40772:54:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40772:54:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "40846:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40857:4:72",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40842:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40842:20:72"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "40874:6:72"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "40882:4:72",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "40870:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "40870:17:72"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "40864:5:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40864:24:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "40835:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40835:54:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40835:54:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "40898:44:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "40928:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "40936:4:72",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40924:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40924:17:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "40918:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40918:24:72"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "40902:12:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "40983:12:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "41001:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41012:4:72",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "40997:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "40997:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_UserTradeData",
                      "nodeType": "YulIdentifier",
                      "src": "40951:31:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "40951:67:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "40951:67:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "41027:46:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "41059:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41067:4:72",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "41055:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41055:17:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "41049:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41049:24:72"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "41031:14:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "41114:14:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "41134:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41145:6:72",
                            "type": "",
                            "value": "0x0180"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "41130:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41130:22:72"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_UserTradeData",
                      "nodeType": "YulIdentifier",
                      "src": "41082:31:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41082:71:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41082:71:72"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "41162:46:72",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "41194:6:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41202:4:72",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "41190:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41190:17:72"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "41184:5:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41184:24:72"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_2",
                      "nodeType": "YulTypedName",
                      "src": "41166:14:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_2",
                        "nodeType": "YulIdentifier",
                        "src": "41248:14:72"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_enum_Standard",
                      "nodeType": "YulIdentifier",
                      "src": "41217:30:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41217:46:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41217:46:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "41283:9:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "41294:6:72",
                            "type": "",
                            "value": "0x0260"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "41279:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41279:22:72"
                      },
                      {
                        "name": "memberValue0_2",
                        "nodeType": "YulIdentifier",
                        "src": "41303:14:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "41272:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41272:46:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41272:46:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Trade_$21950_memory_ptr__to_t_struct$_Trade_$21950_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "40463:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "40474:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "40485:4:72",
                "type": ""
              }
            ],
            "src": "40345:979:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41430:76:72",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "41440:26:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "41452:9:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "41463:2:72",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "41448:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41448:18:72"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "41440:4:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "41482:9:72"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "41493:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "41475:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41475:25:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "41475:25:72"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "41399:9:72",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "41410:6:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "41421:4:72",
                "type": ""
              }
            ],
            "src": "41329:177:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41559:80:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "41586:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "41588:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "41588:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "41588:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "41575:1:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "41582:1:72"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "41578:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41578:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "41572:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41572:13:72"
                  },
                  "nodeType": "YulIf",
                  "src": "41569:39:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "41617:16:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "41628:1:72"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "41631:1:72"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "41624:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41624:9:72"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "41617:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "41542:1:72",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "41545:1:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "41551:3:72",
                "type": ""
              }
            ],
            "src": "41511:128:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41690:171:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "41721:111:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "41742:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "41749:3:72",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "41754:10:72",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "41745:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "41745:20:72"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "41735:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "41735:31:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "41735:31:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "41786:1:72",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "41789:4:72",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "41779:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "41779:15:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "41779:15:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "41814:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "41817:4:72",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "41807:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "41807:15:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "41807:15:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "41710:1:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "41703:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41703:9:72"
                  },
                  "nodeType": "YulIf",
                  "src": "41700:132:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "41841:14:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "41850:1:72"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "41853:1:72"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "41846:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41846:9:72"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "41841:1:72"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "41675:1:72",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "41678:1:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "41684:1:72",
                "type": ""
              }
            ],
            "src": "41644:217:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "41918:116:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "41977:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "41979:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "41979:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "41979:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "41949:1:72"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "41942:6:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "41942:9:72"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "41935:6:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41935:17:72"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "41957:1:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "41968:1:72",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "41964:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "41964:6:72"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "41972:1:72"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "41960:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "41960:14:72"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "41954:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "41954:21:72"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "41931:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "41931:45:72"
                  },
                  "nodeType": "YulIf",
                  "src": "41928:71:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "42008:20:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "42023:1:72"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "42026:1:72"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "42019:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42019:9:72"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "42008:7:72"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "41897:1:72",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "41900:1:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "41906:7:72",
                "type": ""
              }
            ],
            "src": "41866:168:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42088:76:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "42110:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "42112:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42112:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "42112:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "42104:1:72"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "42107:1:72"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "42101:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42101:8:72"
                  },
                  "nodeType": "YulIf",
                  "src": "42098:34:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "42141:17:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "42153:1:72"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "42156:1:72"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "42149:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42149:9:72"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "42141:4:72"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "42070:1:72",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "42073:1:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "42079:4:72",
                "type": ""
              }
            ],
            "src": "42039:125:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42222:205:72",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "42232:10:72",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "42241:1:72",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "42236:1:72",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "42301:63:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "42326:3:72"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "42331:1:72"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "42322:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "42322:11:72"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "42345:3:72"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "42350:1:72"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "42341:3:72"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "42341:11:72"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "42335:5:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "42335:18:72"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "42315:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42315:39:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "42315:39:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "42262:1:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "42265:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "42259:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42259:13:72"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "42273:19:72",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "42275:15:72",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "42284:1:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "42287:2:72",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "42280:3:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42280:10:72"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "42275:1:72"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "42255:3:72",
                    "statements": []
                  },
                  "src": "42251:113:72"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "42390:31:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "42403:3:72"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "42408:6:72"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "42399:3:72"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "42399:16:72"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "42417:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "42392:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42392:27:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "42392:27:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "42379:1:72"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "42382:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "42376:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42376:13:72"
                  },
                  "nodeType": "YulIf",
                  "src": "42373:48:72"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "42200:3:72",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "42205:3:72",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "42210:6:72",
                "type": ""
              }
            ],
            "src": "42169:258:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42479:88:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "42510:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "42512:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "42512:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "42512:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "42495:5:72"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42506:1:72",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "42502:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "42502:6:72"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "42492:2:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42492:17:72"
                  },
                  "nodeType": "YulIf",
                  "src": "42489:43:72"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "42541:20:72",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "42552:5:72"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42559:1:72",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "42548:3:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42548:13:72"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "42541:3:72"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "42461:5:72",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "42471:3:72",
                "type": ""
              }
            ],
            "src": "42432:135:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42604:95:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42621:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42628:3:72",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42633:10:72",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "42624:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "42624:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42614:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42614:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42614:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42661:1:72",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42664:4:72",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42654:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42654:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42654:15:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42685:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42688:4:72",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "42678:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42678:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42678:15:72"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "42572:127:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42736:95:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42753:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42760:3:72",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42765:10:72",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "42756:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "42756:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42746:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42746:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42746:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42793:1:72",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42796:4:72",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42786:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42786:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42786:15:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42817:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42820:4:72",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "42810:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42810:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42810:15:72"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "42704:127:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "42868:95:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42885:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42892:3:72",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "42897:10:72",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "42888:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "42888:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42878:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42878:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42878:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42925:1:72",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42928:4:72",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "42918:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42918:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42918:15:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42949:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "42952:4:72",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "42942:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "42942:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "42942:15:72"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "42836:127:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "43000:95:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "43017:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "43024:3:72",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "43029:10:72",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "43020:3:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "43020:20:72"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "43010:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43010:31:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "43010:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "43057:1:72",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "43060:4:72",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "43050:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43050:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "43050:15:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "43081:1:72",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "43084:4:72",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "43074:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43074:15:72"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "43074:15:72"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "42968:127:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "43151:62:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "43185:22:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "43187:16:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43187:18:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "43187:18:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "43174:5:72"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "43181:1:72",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "43171:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "43171:12:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "43164:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43164:20:72"
                  },
                  "nodeType": "YulIf",
                  "src": "43161:46:72"
                }
              ]
            },
            "name": "validator_assert_enum_Standard",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "43140:5:72",
                "type": ""
              }
            ],
            "src": "43100:113:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "43263:86:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "43327:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "43336:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "43339:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "43329:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43329:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "43329:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "43286:5:72"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "43297:5:72"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43312:3:72",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "43317:1:72",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "43308:3:72"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "43308:11:72"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "43321:1:72",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "43304:3:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43304:19:72"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "43293:3:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "43293:31:72"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "43283:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "43283:42:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "43276:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43276:50:72"
                  },
                  "nodeType": "YulIf",
                  "src": "43273:70:72"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "43252:5:72",
                "type": ""
              }
            ],
            "src": "43218:131:72"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "43396:76:72",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "43450:16:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "43459:1:72",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "43462:1:72",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "43452:6:72"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43452:12:72"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "43452:12:72"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "43419:5:72"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "43440:5:72"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "43433:6:72"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "43433:13:72"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "43426:6:72"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "43426:21:72"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "43416:2:72"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "43416:32:72"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "43409:6:72"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "43409:40:72"
                  },
                  "nodeType": "YulIf",
                  "src": "43406:60:72"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "43385:5:72",
                "type": ""
              }
            ],
            "src": "43354:118:72"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_enum_HoldStatusCode_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(lt(value, 7)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_2)\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes32t_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_addresst_addresst_uint256t_uint256t_bytes32t_bytes32t_enum$_HoldStatusCode_$12361_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := mload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        let value_2 := mload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n        value7 := mload(add(headStart, 224))\n        value8 := abi_decode_enum_HoldStatusCode_fromMemory(add(headStart, 256))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let _1 := sub(shl(64, 1), 1)\n        if gt(calldataload(headStart), _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, calldataload(headStart)), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        value3 := abi_decode_address(add(headStart, 64))\n        value4 := abi_decode_address(add(headStart, 96))\n        value5 := abi_decode_address(add(headStart, 128))\n        value6 := calldataload(add(headStart, 160))\n        if gt(calldataload(add(headStart, 192)), _1) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_bytes_calldata(add(headStart, calldataload(add(headStart, 192))), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n        if gt(calldataload(add(headStart, 224)), _1) { revert(0, 0) }\n        let value9_1, value10_1 := abi_decode_bytes_calldata(add(headStart, calldataload(add(headStart, 224))), dataEnd)\n        value9 := value9_1\n        value10 := value10_1\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes32t_addresst_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        value3 := abi_decode_address(add(headStart, 64))\n        value4 := abi_decode_address(add(headStart, 96))\n        value5 := abi_decode_address(add(headStart, 128))\n        value6 := calldataload(add(headStart, 160))\n        let offset_1 := calldataload(add(headStart, 192))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value7 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 224))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value8_1, value9_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value8 := value8_1\n        value9 := value9_1\n    }\n    function abi_decode_tuple_t_enum$_Standard_$21813(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 5)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_TradeType_$21823(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_ERC20HoldData_$12432_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 224)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let value := mload(headStart)\n        validator_revert_address(value)\n        mstore(memPtr, value)\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        mstore(add(memPtr, 32), value_1)\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        mstore(add(memPtr, 64), value_2)\n        mstore(add(memPtr, 96), mload(add(headStart, 96)))\n        mstore(add(memPtr, 128), mload(add(headStart, 128)))\n        mstore(add(memPtr, 160), mload(add(headStart, 160)))\n        mstore(add(memPtr, 192), abi_decode_enum_HoldStatusCode_fromMemory(add(headStart, 192)))\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_struct$_TradeRequestInput_$21930_calldata_ptrt_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 512) { revert(0, 0) }\n        let _2 := 480\n        if slt(_1, _2) { revert(0, 0) }\n        value0 := headStart\n        value1 := calldataload(add(headStart, _2))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_boolt_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_struct_UserTradeData(value, pos)\n    {\n        mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        let memberValue0 := mload(add(value, 0x60))\n        validator_assert_enum_Standard(memberValue0)\n        mstore(add(pos, 0x60), memberValue0)\n        mstore(add(pos, 0x80), iszero(iszero(mload(add(value, 0x80)))))\n        mstore(add(pos, 0xa0), iszero(iszero(mload(add(value, 0xa0)))))\n        let memberValue0_1 := mload(add(value, 0xc0))\n        if iszero(lt(memberValue0_1, 3)) { panic_error_0x21() }\n        mstore(add(pos, 0xc0), memberValue0_1)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bytes32__to_t_address_t_bytes32_t_uint256_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 192)\n        let tail_1 := abi_encode_bytes(value4, add(headStart, 192))\n        mstore(add(headStart, 160), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value5, tail_1)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes32_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 192)\n        mstore(add(headStart, 192), 0)\n        mstore(add(headStart, 160), 224)\n        mstore(add(headStart, 224), 0)\n        tail := add(headStart, 256)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_02ebd69188c7db9c3dd01f2aaa1d87221471968f5aa99525c48b99a1505380e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Start date needs to be set at le\")\n        mstore(add(headStart, 96), \"ast a week before\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_05373b993917885459831a325920a48a75caf468c1ee77a796e72e930bff1b08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"Trade can only be executed by ex\")\n        mstore(add(headStart, 96), \"ecuter defined at trade creation\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0aed4c7d60c28efa628f3b3834329787d344f5899e54ae045c324776c24530d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Tokens of the wrong standard sen\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ether trades need to be of type \")\n        mstore(add(headStart, 96), \"Escrow\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d4b85b88b80072b90afee0107a9a29103e9d81c09bf5da6eae9a80121a9ce6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Amount of ERC1400 tokens is not \")\n        mstore(add(headStart, 96), \"correct\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0e67fb1929d4780c273d05979a1e9884927127ac457215fefeddd8d222ee5b83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Hold must exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_13a62c55f76587a2dd941a7afaba21d8be7cba385c183c78ab02aae0f038fccf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Sender is not allowed to cancel \")\n        mstore(add(headStart, 96), \"trade (1)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_20db3929816dba2a8275bb33ef449b4b1729f4b33bc79b910811933ea2508b0c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Trade has not been approved by a\")\n        mstore(add(headStart, 96), \"ll token controllers yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"50\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_242e1ec42c4d9d50f39212896afb445568abd9a5227b187111929b57dbb7bf2e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No price ownership\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_255ed6eb6f30d1485f3dcafc169da0ede71d63ed3f663207dcd881f82aecfb81__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Sender is not allowed to force t\")\n        mstore(add(headStart, 96), \"rade (1)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2f0a6c014b93879ada9ab209e5b7a62ef24399af93bf6c00c1529d6e0d627fce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Price setter is not an oracle fo\")\n        mstore(add(headStart, 96), \"r this token (1)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_373863ced32ac2eb9784d689aa574556050019791cd28b1e2777baf5ec9163da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Only token controllers of involv\")\n        mstore(add(headStart, 96), \"ed tokens can approve a trade\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3a6c5fb48c287bee984928951d89e75c588c9b0df86b8ef015c0ada5e6d8b633__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"Trade executer needs to belong t\")\n        mstore(add(headStart, 96), \"o the list of allowed trade exec\")\n        mstore(add(headStart, 128), \"uters\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_3e59e007c4647d712b65f3ed438ec2af5656c5aa20116da30235e14fc2c290a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Trade can not be forced if token\")\n        mstore(add(headStart, 96), \"s have controllers\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3fdd50b576f957d76e864f96b9d0c991bd6b1f33ca019606da09db7f23167ec4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Amount of ETH is not correct\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4b556a5d77d5a92d99d2da30cbb6be3fd94832b2e3e5f440b20345d863b04042__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"Trade has not been accepted by a\")\n        mstore(add(headStart, 96), \"ll token holders yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5d6836f0c0e087667fc172041236feaf9634db8287593900fb516b3a15e093e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Sender is not allowed to cancel \")\n        mstore(add(headStart, 96), \"trade (0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_62915fc4bdc23f948b008ac5bb93785842503d33f35707b31a531df5ef8b008f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Sender is not allowed to cancel \")\n        mstore(add(headStart, 96), \"trade (3)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"55\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6cb1a1c99e78d317001cb18e0e43982675e357ca53b7a61f1a60755ef796f773__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Price is higher than amount escr\")\n        mstore(add(headStart, 96), \"owed/authorized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Expiration date is past\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_89aa5a265da805686932ae094ba24a71109e8058a4d7df537bdb317139a2f40b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Allowance needs to be provided i\")\n        mstore(add(headStart, 96), \"n token smart contract first\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ee647a01aa5f1bda643aa6834c1b9128a69a3f433a02ac84adf7f3b27e1e0ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Wrong token sent\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f3fb3eca663334b08617a28f5e55e2698b004ee0a964aa2bc92825ec7c73641__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Token standard must be holdable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"token can not be a zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Competition on price ownership\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a20f967af876332f8e5cf464602ff6aaa46bca373759b506dfded8592e2d84c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Sender is not a token controller\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a65d6f43237034d44b2b9bea23e2173099b9a2624f45373df43a0b386609eb3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"executeTrade can be called\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b1178f18a5aa1a32a6e2280a977824c520f59de733c77c9821fa1a6ad0758d01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Price setter is not an oracle fo\")\n        mstore(add(headStart, 96), \"r this token (2)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b5bb3f67205aac1ef56c0f0d2a8a3721a1e2cbbeeb73b468e67cc7251df85270__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Trade already accepted by the ho\")\n        mstore(add(headStart, 96), \"lder\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b87811a9660efbe433e1bf8fc747435558a7cca8d25afc47f3b0721d2694b1dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Only registered holders can acce\")\n        mstore(add(headStart, 96), \"pt a trade\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c877a4103bc121fd41358537bbacb20b7d369de62eb7417357dd35bafcfe9e8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Invalid tokenStandard provided\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c96902dc6641465bcb47d51e789da6011d4ef6e7cace86feca178d31470e323a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Swaps contract is not owned\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cbcf36d182174f136d2e0dc28ab771dc911d5712b5b9ea7fb39228ecd0c9d185__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Sender is not a price oracle.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc7a1d4adabd6d310d870246894e2ed12129fc57e2852560b268c1d1b670f52f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Trade can only be executed on or\")\n        mstore(add(headStart, 96), \" after settlement date\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cfd41566fc83253424c692dd5977dabc40d4800a378b116731c43ead1d396f63__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Trade can't be forced as tokens \")\n        mstore(add(headStart, 96), \"are not available so far\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Invalid token standard for hold \")\n        mstore(add(headStart, 96), \"trade type\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d2707e93029f7cfd1559052cc8a7011948874a8a768af73b9e30b493e73abe98__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Tokens of the wrong partition se\")\n        mstore(add(headStart, 96), \"nt\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d5872adc53feb1228a23992569f03c41f99efcc8573122308ea2220b7a8481b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Sender is not allowed to force t\")\n        mstore(add(headStart, 96), \"rade (0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d7422c5722be9eca0f8e40021c8dfba381e5cf7f3a04965f64b9b68b5a46c4e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"A trade can not be created with \")\n        mstore(add(headStart, 96), \"the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da45f966b1666be0485ea33966a8cad21440f8e36525938af606e1c834d9b4c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"Hold needs to be provided in tok\")\n        mstore(add(headStart, 96), \"en smart contract first\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ddc0ea0a3c16467f3e90962bae7c77db78af2e3817b9cf66cef0d9bf75e269eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Sender is not allowed to cancel \")\n        mstore(add(headStart, 96), \"trade (2)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Trade is not pending\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"57\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"token has no holdable token exte\")\n        mstore(add(headStart, 96), \"nsion\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f0620a46efe8affa820fbd852dcc28a8e648b503387395bca694e0a29fc04b28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"invalid token standard\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No holdId specified\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f3ffbbdcd6ee2ecafc39ed8a1215a00ab98c19e6f204edac1d401983b57656b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Sender is not allowed to force t\")\n        mstore(add(headStart, 96), \"rade (2)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_Trade_$21950_memory_ptr__to_t_struct$_Trade_$21950_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 640)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        let memberValue0 := mload(add(value0, 0xa0))\n        abi_encode_struct_UserTradeData(memberValue0, add(headStart, 0xa0))\n        let memberValue0_1 := mload(add(value0, 0xc0))\n        abi_encode_struct_UserTradeData(memberValue0_1, add(headStart, 0x0180))\n        let memberValue0_2 := mload(add(value0, 0xe0))\n        validator_assert_enum_Standard(memberValue0_2)\n        mstore(add(headStart, 0x0260), memberValue0_2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_assert_enum_Standard(value)\n    {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 72,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "3595:51804:71:-:0;;;9498:446;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:2;665:10:19;867:9:2;:23::i;:::-;9528:53:71;9561:19;;;;;;;;;;;;;-1:-1:-1;;;9561:19:71;;;9528:32;;;;;:53;;:::i;:::-;9587:58;9620:24;;;;;;;;;;;;;;;;;9587:32;;;;;:58;;:::i;:::-;9678:24;;;;;;;;;;;;;;;;;9651:67;;9712:4;9651:26;:67::i;:::-;9725:14;:22;;-1:-1:-1;;9725:22:71;;;;;;;;;;;9757:14;9754:186;;;9822:17;;;9837:1;9822:17;;;;;;;;;9781:38;;9822:17;;;;;;;;;;;-1:-1:-1;9822:17:71;9781:58;;9874:10;9847:21;9869:1;9847:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9847:37:71;;;:24;;;;;;;;;;;:37;9892:41;9911:21;9892:18;:41::i;:::-;9773:167;9754:186;9498:446;3595:51804;;2041:169:2;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;676:141:37:-;808:4;744:16;:61;788:14;771:32;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;771:32:37;;;;;;761:43;;771:32;761:43;;;;744:61;;;;;;;;;;-1:-1:-1;744:61:37;:68;;-1:-1:-1;;744:68:37;;;;;;;;;;-1:-1:-1;676:141:37:o;328:282:68:-;439:21;490:15;473:33;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;473:33:68;;;;;;;463:44;;473:33;463:44;;;;-1:-1:-1;;;517:86:68;;565:4;517:86;;;969:34:72;1019:18;;;1012:34;;;-1:-1:-1;;;;;1082:15:72;;1062:18;;;1055:43;463:44:68;-1:-1:-1;278:42:68;;517:39;;904:18:72;;517:86:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:181;328:282;;:::o;45668:313:71:-;45745:6;45740:106;45759:15;:22;45757:24;;45740:106;;;45834:5;45795:16;:36;45812:15;45828:1;45812:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;45812:18:71;45795:36;;;;;;;;;;;;:44;;-1:-1:-1;;45795:44:71;;;;;;;;;;45783:3;;;;:::i;:::-;;;;45740:106;;;;45856:6;45851:93;45870:9;:16;45868:1;:18;45851:93;;;45933:4;45900:16;:30;45917:9;45927:1;45917:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;45900:30:71;;;;;;;;;;;-1:-1:-1;45900:30:71;:37;;-1:-1:-1;;45900:37:71;;;;;;;;;;45888:3;;;;:::i;:::-;;;;45851:93;;;-1:-1:-1;45949:27:71;;;;:15;;:27;;;;;:::i;:::-;;45668:313;:::o;3595:51804::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3595:51804:71;-1:-1:-1;;;;;3595:51804:71;;;;;;;;;;;-1:-1:-1;3595:51804:71;;;;;;;-1:-1:-1;3595:51804:71;;;-1:-1:-1;3595:51804:71;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:277:72;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:72:o;296:428::-;427:3;465:6;459:13;490:1;500:129;514:6;511:1;508:13;500:129;;;612:4;596:14;;;592:25;;586:32;573:11;;;566:53;529:12;500:129;;;647:6;644:1;641:13;638:48;;;682:1;673:6;668:3;664:16;657:27;638:48;-1:-1:-1;702:16:72;;;;;296:428;-1:-1:-1;;296:428:72:o;1109:232::-;1148:3;-1:-1:-1;;1169:17:72;;1166:140;;;1228:10;1223:3;1219:20;1216:1;1209:31;1263:4;1260:1;1253:15;1291:4;1288:1;1281:15;1166:140;-1:-1:-1;1333:1:72;1322:13;;1109:232::o;1346:127::-;1407:10;1402:3;1398:20;1395:1;1388:31;1438:4;1435:1;1428:15;1462:4;1459:1;1452:15;1478:127;3595:51804:71;;;;;;",
  "deployedSourceMap": "3595:51804:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47282:130;;;;;;;;;;-1:-1:-1;47282:130:71;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;47562:415;;;;;;;;;;-1:-1:-1;47562:415:71;;;;;:::i;:::-;;:::i;:::-;;25307:91;;;;;;;;;;-1:-1:-1;25307:91:71;;;;;:::i;:::-;;:::i;29707:1830::-;;;;;;;;;;-1:-1:-1;29707:1830:71;;;;;:::i;:::-;;:::i;49005:207::-;;;;;;;;;;-1:-1:-1;49005:207:71;;;;;:::i;:::-;;:::i;48639:164::-;;;;;;;;;;-1:-1:-1;48639:164:71;;;;;:::i;:::-;;:::i;:::-;;;17714:14:72;;17707:22;17689:41;;17677:2;17662:18;48639:164:71;17549:187:72;363:309:37;;;;;;;;;;-1:-1:-1;363:309:37;;;;;:::i;:::-;;:::i;:::-;;;17887:25:72;;;17875:2;17860:18;363:309:37;17741:177:72;23798:836:71;;;;;;;;;;-1:-1:-1;23798:836:71;;;;;:::i;:::-;;:::i;55041:134::-;;;;;;;;;;-1:-1:-1;55041:134:71;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;49393:140::-;;;;;;;;;;-1:-1:-1;49393:140:71;;;;;:::i;:::-;-1:-1:-1;;;;;49491:37:71;49469:7;49491:37;;;:23;:37;;;;;;;49393:140;21447:561;;;;;;;;;;-1:-1:-1;21447:561:71;;;;;:::i;:::-;;:::i;45138:100::-;;;;;;;;;;;;;:::i;16782:137::-;;;;;;:::i;:::-;;:::i;25753:709::-;;;;;;;;;;-1:-1:-1;25753:709:71;;;;;:::i;:::-;;:::i;51207:779::-;;;;;;;;;;-1:-1:-1;51207:779:71;;;;;:::i;:::-;;:::i;27788:87::-;;;;;;;;;;-1:-1:-1;27788:87:71;;;;;:::i;:::-;;:::i;23056:116::-;;;;;;;;;;-1:-1:-1;23056:116:71;;;;;:::i;:::-;;:::i;44866:121::-;;;;;;;;;;;;;:::i;46261:138::-;;;;;;;;;;-1:-1:-1;46261:138:71;;;;;:::i;:::-;;:::i;50542:231::-;;;;;;;;;;-1:-1:-1;50542:231:71;;;;;:::i;:::-;-1:-1:-1;;;;;50691:42:71;;;50669:7;50691:42;;;:27;:42;;;;;;;;:57;;;;;;;;;;;;:67;;;;;;;;;:77;;;;;;;;;50542:231;13465:725;;;;;;:::i;:::-;;:::i;973:85:2:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;15173:32:72;;;15155:51;;15143:2;15128:18;973:85:2;15009:203:72;24893:410:71;;;;;;;;;;-1:-1:-1;24893:410:71;;;;;:::i;:::-;;:::i;45365:176::-;;;;;;;;;;-1:-1:-1;45365:176:71;;;;;:::i;:::-;;:::i;49843:308::-;;;;;;;;;;-1:-1:-1;49843:308:71;;;;;:::i;:::-;;:::i;28054:1473::-;;;;;;;;;;-1:-1:-1;28054:1473:71;;;;;:::i;:::-;;:::i;52109:2752::-;;;;;;;;;;-1:-1:-1;52109:2752:71;;;;;:::i;:::-;;:::i;55318:78::-;;;;;;;;;;-1:-1:-1;55385:6:71;;55318:78;;46557:451;;;;;;;;;;-1:-1:-1;46557:451:71;;;;;:::i;:::-;;:::i;1846:189:2:-;;;;;;;;;;-1:-1:-1;1846:189:2;;;;;:::i;:::-;;:::i;11039:2294:71:-;;;;;;;;;;-1:-1:-1;11039:2294:71;;;;;:::i;:::-;;:::i;10350:216::-;;;;;;;;;;-1:-1:-1;10350:216:71;;;;;:::i;:::-;;:::i;47282:130::-;-1:-1:-1;;;;;47380:27:71;;;;;;:13;:27;;;;;;;;;47373:34;;;;;;;;;;;;;;;;;47349:16;;47373:34;;;47380:27;47373:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;47373:34:71;;;;;;;;;;;;;;;;;;;;;;;47282:130;;;:::o;47562:415::-;47662:12;9277:43;9295:12;9309:10;9277:17;:43::i;:::-;9269:85;;;;-1:-1:-1;;;9269:85:71;;;;;;;:::i;:::-;;;;;;;;;47687:6:::1;47682:142;-1:-1:-1::0;;;;;47701:27:71;::::1;;::::0;;;:13:::1;:27;::::0;;;;:34;47699:36;::::1;47682:142;;;-1:-1:-1::0;;;;;47749:28:71;::::1;47812:5;47749:28:::0;;;:14:::1;:28;::::0;;;;;;;47778:13:::1;:27:::0;;;;;:30;;47812:5;;47778:27;47806:1;;47778:30;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;47778:30:71::1;47749:60:::0;;;::::1;::::0;;;;;;;;:68;;-1:-1:-1;;47749:68:71::1;::::0;::::1;;::::0;;;::::1;::::0;;47737:3;::::1;::::0;::::1;:::i;:::-;;;;47682:142;;;;47834:6;47829:101;47846:16:::0;;::::1;47829:101;;;-1:-1:-1::0;;;;;47876:28:71;::::1;;::::0;;;:14:::1;:28;::::0;;;;47919:4:::1;::::0;47905:7;;47913:1;47905:10;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;47876:40:71::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;47876:40:71;:47;;-1:-1:-1;;47876:47:71::1;::::0;::::1;;::::0;;;::::1;::::0;;47864:3;::::1;::::0;::::1;:::i;:::-;;;;47829:101;;;-1:-1:-1::0;;;;;;47935:27:71;::::1;;::::0;;;:13:::1;:27;::::0;;;;:37:::1;::::0;47965:7;;47935:37:::1;:::i;:::-;;47562:415:::0;;;;:::o;25307:91::-;25359:34;25384:5;25391:1;25359:24;:34::i;:::-;25307:91;:::o;29707:1830::-;29758:19;29780:14;;;:7;:14;;;;;29823:13;29808:11;;;;;;:28;;;;;;;;:::i;:::-;;29800:61;;;;-1:-1:-1;;;29800:61:71;;;;;;;:::i;:::-;29890:31;;;;29944:29;;;;30002:31;;;;30056:29;;;;29944;;;;;;;;;30056;;;;29944;30095:22;;;;;30108:9;30095:22;30092:1405;;;30149:14;;;;-1:-1:-1;;;;;30149:14:71;30135:10;:28;;:138;;;30187:5;:20;;;30168:15;:39;;:103;;;;-1:-1:-1;30226:13:71;;-1:-1:-1;;;;;30226:13:71;30212:10;:27;;:58;;-1:-1:-1;30257:13:71;;;;-1:-1:-1;;;;;30257:13:71;30243:10;:27;30212:58;30127:192;;;;-1:-1:-1;;;30127:192:71;;27837:2:72;30127:192:71;;;27819:21:72;27876:2;27856:18;;;27849:30;-1:-1:-1;;;;;;;;;;;27895:18:72;;;27888:62;-1:-1:-1;;;27966:18:72;;;27959:39;28015:19;;30127:192:71;27635:405:72;30127:192:71;30364:16;30330:30;;;;;;;;;:50;;;;;;;;:::i;:::-;;30327:148;;;30392:74;30413:5;30420:14;30436:11;30449:4;30420:14;30392:20;:74::i;:::-;30519:16;30485:30;;;;;;;;;:50;;;;;;;;:::i;:::-;;30482:148;;;30547:74;30568:5;30575:14;30591:11;30575:14;30618:1;30547:20;:74::i;:::-;30092:1405;;;30645:9;30642:855;;;30686:14;;;;-1:-1:-1;;;;;30686:14:71;30672:10;:28;;:104;;;30724:5;:20;;;30705:15;:39;;:70;;;;-1:-1:-1;30762:13:71;;-1:-1:-1;;;;;30762:13:71;30748:10;:27;30705:70;30664:158;;;;-1:-1:-1;;;30664:158:71;;22987:2:72;30664:158:71;;;22969:21:72;23026:2;23006:18;;;22999:30;-1:-1:-1;;;;;;;;;;;23045:18:72;;;23038:62;-1:-1:-1;;;23116:18:72;;;23109:39;23165:19;;30664:158:71;22785:405:72;30664:158:71;30867:16;30833:30;;;;;;;;;:50;;;;;;;;:::i;:::-;;30830:148;;;30895:74;30916:5;30923:14;30939:11;30952:4;30923:14;30895:20;:74::i;30642:855::-;30993:9;30990:507;;;31034:14;;;;-1:-1:-1;;;;;31034:14:71;31020:10;:28;;:104;;;31072:5;:20;;;31053:15;:39;;:70;;;;-1:-1:-1;31110:13:71;;;;-1:-1:-1;;;;;31110:13:71;31096:10;:27;31053:70;31012:158;;;;-1:-1:-1;;;31012:158:71;;37944:2:72;31012:158:71;;;37926:21:72;37983:2;37963:18;;;37956:30;-1:-1:-1;;;;;;;;;;;38002:18:72;;;37995:62;-1:-1:-1;;;38073:18:72;;;38066:39;38122:19;;31012:158:71;37742:405:72;30990:507:71;31368:14;;;;-1:-1:-1;;;;;31368:14:71;31354:10;:28;;:59;;-1:-1:-1;31400:13:71;;-1:-1:-1;;;;;31400:13:71;31386:10;:27;31354:59;:90;;;-1:-1:-1;31431:13:71;;;;-1:-1:-1;;;;;31431:13:71;31417:10;:27;31354:90;31346:144;;;;-1:-1:-1;;;31346:144:71;;28247:2:72;31346:144:71;;;28229:21:72;28286:2;28266:18;;;28259:30;-1:-1:-1;;;;;;;;;;;28305:18:72;;;28298:62;-1:-1:-1;;;28376:18:72;;;28369:39;28425:19;;31346:144:71;28045:405:72;31346:144:71;31503:11;;;:29;;31517:15;;31503:11;-1:-1:-1;;31503:29:71;;31517:15;31503:29;;;;;;29752:1785;;;;;29707:1830;:::o;49005:207::-;49124:13;9277:43;9295:12;9309:10;9277:17;:43::i;:::-;9269:85;;;;-1:-1:-1;;;9269:85:71;;;;;;;:::i;:::-;-1:-1:-1;;;;;;49145:30:71;;::::1;;::::0;;;:15:::1;:30;::::0;;;;;;;:45;;;::::1;::::0;;;;;;;;;:62;;-1:-1:-1;;49145:62:71::1;::::0;::::1;;::::0;;;::::1;::::0;;49005:207::o;48639:164::-;-1:-1:-1;;;;;48753:30:71;;;48734:4;48753:30;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;48639:164;;;;;:::o;363:309:37:-;543:7;563:31;;;:16;:31;;;;;;;;560:108;;;262:40;;-1:-1:-1;;;262:40:37;;;14935:35:72;14986:12;;262:40:37;;;;;;;;;;;;252:51;;;;;;604:27;;;;560:108;-1:-1:-1;652:9:37;;;23798:836:71;23893:19;23915:14;;;:7;:14;;;;;23958:13;23943:11;;;;;;:28;;;;;;;;:::i;:::-;;23935:61;;;;-1:-1:-1;;;23935:61:71;;;;;;;:::i;:::-;24030:20;;;:33;-1:-1:-1;;;;;24030:33:71;24011:53;;;;:18;:53;;;;;;;;24065:10;24011:65;;;;;;;;;;;:134;;-1:-1:-1;24099:20:71;;;:33;-1:-1:-1;;;;;24099:33:71;24080:53;;;;:18;:53;;;;;;;;24134:10;24080:65;;;;;;;;;;24011:134;24003:208;;;;-1:-1:-1;;;24003:208:71;;25732:2:72;24003:208:71;;;25714:21:72;25771:2;25751:18;;;25744:30;25810:34;25790:18;;;25783:62;25881:31;25861:18;;;25854:59;25930:19;;24003:208:71;25530:425:72;24003:208:71;24240:20;;;:33;-1:-1:-1;;;;;24240:33:71;24221:53;;;;:18;:53;;;;;;;;24275:10;24221:65;;;;;;;;;;24218:125;;;24296:29;;;:40;;-1:-1:-1;;24296:40:71;;;;;;;;;24218:125;24375:20;;;:33;-1:-1:-1;;;;;24375:33:71;24356:53;;;;:18;:53;;;;;;;;24410:10;24356:65;;;;;;;;;;24353:125;;;24431:29;;;:40;;-1:-1:-1;;24431:40:71;;;;;;;;;24353:125;24487:14;;;;-1:-1:-1;;;;;24487:14:71;:28;:63;;;;;24519:31;24544:5;24519:24;:31::i;:::-;24487:96;;;;;24554:29;24577:5;24554:22;:29::i;:::-;24484:146;;;24593:30;24607:5;24614:8;24593:13;:30::i;:::-;23887:747;23798:836;;;:::o;55041:134::-;55096:12;;:::i;:::-;55116:19;55138:14;;;:7;:14;;;;;;;;;55158:12;;;;;;;;;-1:-1:-1;;;;;55158:12:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55138:14;;55158:12;;55138:14;;55158:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;55158:12:71;;;;;;;;;;;;;;;-1:-1:-1;;;;;55158:12:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;55158:12:71;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;55158:12:71;55041:134;-1:-1:-1;;;55041:134:71:o;21447:561::-;21516:4;21550:14;;;:7;:14;;;;;21589:13;21574:11;;;;;;:28;;;;;;;;:::i;:::-;;21571:356;;;21649:19;21615:30;;;;;;;;;:53;;;;;;;;:::i;:::-;;:115;;;;-1:-1:-1;21694:13:71;;21673:57;;;;;;;;21709:20;;;21673:57;;-1:-1:-1;;;;;21673:57:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21694:13;;;;;21673:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;21673:20:71;:57::i;:::-;21672:58;21615:115;21612:151;;;-1:-1:-1;21749:5:71;;21447:561;-1:-1:-1;;21447:561:71:o;21612:151::-;21807:19;21773:30;;;;;;;;;:53;;;;;;;;:::i;:::-;;:115;;;;-1:-1:-1;21852:13:71;;;;21831:57;;;;;;;;21867:20;;;21831:57;;-1:-1:-1;;;;;21831:57:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21852:13;;;;;21831:57;;;;;;;;;;;;;;:::i;:::-;21830:58;21773:115;21770:151;;;-1:-1:-1;21907:5:71;;21447:561;-1:-1:-1;;21447:561:71:o;21770:151::-;21940:29;;;;;;;;;:62;;;;-1:-1:-1;21973:29:71;;;;;;;;;21940:62;21933:70;21447:561;-1:-1:-1;;;21447:561:71:o;45138:100::-;45187:16;45218:15;45211:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;45211:22:71;;;;;;;;;;;;;;;;;;;;;;;45138:100;:::o;16782:137::-;16859:55;16872:5;16879:10;16891:9;16902:1;16905:8;16859:12;:55::i;:::-;16782:137;;:::o;25753:709::-;25833:19;25855:14;;;:7;:14;;;;;25898:13;25883:11;;;;;;:28;;;;;;;;:::i;:::-;;25875:61;;;;-1:-1:-1;;;25875:61:71;;;;;;;:::i;:::-;25946:14;;;;-1:-1:-1;;;;;25946:14:71;:28;25943:153;;26006:14;;;;-1:-1:-1;;;;;26006:14:71;25992:10;:28;25984:105;;;;;-1:-1:-1;;;25984:105:71;;20993:2:72;25984:105:71;;;20975:21:72;21012:18;;;21005:30;;;;21071:34;21051:18;;;21044:62;21142:34;21122:18;;;21115:62;21194:19;;25984:105:71;20791:428:72;25984:105:71;26129:5;:20;;;26110:15;:39;;26102:106;;;;-1:-1:-1;;;26102:106:71;;35032:2:72;26102:106:71;;;35014:21:72;35071:2;35051:18;;;35044:30;35110:34;35090:18;;;35083:62;-1:-1:-1;;;35161:18:72;;;35154:52;35223:19;;26102:106:71;34830:418:72;26102:106:71;26223:31;26248:5;26223:24;:31::i;:::-;26215:96;;;;-1:-1:-1;;;26215:96:71;;27416:2:72;26215:96:71;;;27398:21:72;27455:2;27435:18;;;27428:30;27494:34;27474:18;;;27467:62;-1:-1:-1;;;27545:18:72;;;27538:50;27605:19;;26215:96:71;27214:416:72;26215:96:71;26330:29;26353:5;26330:22;:29::i;:::-;26322:98;;;;-1:-1:-1;;;26322:98:71;;23397:2:72;26322:98:71;;;23379:21:72;23436:2;23416:18;;;23409:30;23475:34;23455:18;;;23448:62;-1:-1:-1;;;23526:18:72;;;23519:54;23590:19;;26322:98:71;23195:420:72;26322:98:71;26427:30;26441:5;26448:8;26427:13;:30::i;:::-;25827:635;25753:709;;:::o;51207:779::-;-1:-1:-1;;;;;51355:30:71;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;:94;;;;-1:-1:-1;;;;;;51404:30:71;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;51355:94;51353:97;51345:140;;;;-1:-1:-1;;;51345:140:71;;;;;;;:::i;:::-;-1:-1:-1;;;;;51495:30:71;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;51492:395;;;51558:44;51576:13;51591:10;51558:17;:44::i;:::-;51550:105;;;;-1:-1:-1;;;51550:105:71;;25315:2:72;51550:105:71;;;25297:21:72;25354:2;25334:18;;;25327:30;-1:-1:-1;;;;;;;;;;;25373:18:72;;;25366:62;-1:-1:-1;;;25444:18:72;;;25437:46;25500:19;;51550:105:71;25113:412:72;51550:105:71;51492:395;;;-1:-1:-1;;;;;51671:30:71;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;51668:219;;;51734:44;51752:13;51767:10;51734:17;:44::i;:::-;51726:105;;;;-1:-1:-1;;;51726:105:71;;32726:2:72;51726:105:71;;;32708:21:72;32765:2;32745:18;;;32738:30;-1:-1:-1;;;;;;;;;;;32784:18:72;;;32777:62;-1:-1:-1;;;32855:18:72;;;32848:46;32911:19;;51726:105:71;32524:412:72;51668:219:71;51852:28;;-1:-1:-1;;;51852:28:71;;24152:2:72;51852:28:71;;;24134:21:72;24191:2;24171:18;;;24164:30;-1:-1:-1;;;24210:18:72;;;24203:48;24268:18;;51852:28:71;23950:342:72;51668:219:71;-1:-1:-1;;;;;51893:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;;:67;;;;;;;;;:77;;;;;;;;;:88;51207:779::o;27788:87::-;27838:32;27861:5;27868:1;27838:22;:32::i;23056:116::-;23123:44;23148:5;23155:8;23165:1;23123:24;:44::i;44866:121::-;665:10:19;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;44927:27:71::1;:25;:27::i;:::-;44960:14;:22:::0;;-1:-1:-1;;44960:22:71::1;::::0;;44866:121::o;46261:138::-;-1:-1:-1;;;;;46363:31:71;;;;;;:17;:31;;;;;;;;;46356:38;;;;;;;;;;;;;;;;;46332:16;;46356:38;;;46363:31;46356:38;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;46356:38:71;;;;;;;;;;;;;;;;;;;;;;46261:138;;;:::o;13465:725::-;13576:461;13597:17;;;;:9;:17;:::i;:::-;13622;;;;;;;;:::i;:::-;13647:18;;;;;;;;:::i;:::-;13673:9;:24;;;13705:9;:24;;;13737:143;;;;;;;;13751:9;:23;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13737:143:71;;;13776:21;;;;13737:143;;;;13799:18;;;;13737:143;;;;;;13819:24;;;;;;;;:::i;:::-;13737:143;;;;;;;;:::i;:::-;;;13845:5;13737:143;;;;;;;;;;;;13859:20;;;;;;;;:::i;:::-;13737:143;;;;;;;;:::i;:::-;;;13888;;;;;;;;;;13902:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13888:143:71;;;13927:21;;;;13888:143;;;;13950:18;;;;13888:143;;;;;;13970:24;;;;;;;;:::i;:::-;13888:143;;;;;;;;:::i;:::-;;;13996:5;13888:143;;;;;;;;;;;;14010:20;;;;;;;;:::i;:::-;13888:143;;;;;;;;:::i;:::-;;;13576:13;:461::i;:::-;14061:17;;;;:9;:17;:::i;:::-;-1:-1:-1;;;;;14047:31:71;:10;-1:-1:-1;;;;;14047:31:71;;:66;;;-1:-1:-1;14096:17:71;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14082:31:71;:10;-1:-1:-1;;;;;14082:31:71;;14047:66;14044:142;;;14123:56;14136:6;;14144:10;14156:9;14167:1;14170:8;14123:12;:56::i;973:85:2:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;;973:85::o;24893:410:71:-;24960:4;24994:14;;;:7;:14;;;;;;;;25036:20;;;:33;-1:-1:-1;;;;;25036:33:71;25018:52;;:17;:52;;;;;:59;:64;;;;:98;;-1:-1:-1;25087:29:71;;;;;;;;;25086:30;25018:98;25015:130;;;-1:-1:-1;25133:5:71;;24893:410;-1:-1:-1;;24893:410:71:o;25015:130::-;25172:20;;;:33;-1:-1:-1;;;;;25172:33:71;25154:52;;;;:17;:52;;;;;:59;:64;;;;:98;;-1:-1:-1;25223:29:71;;;;;;;;;25222:30;25154:98;25151:130;;;-1:-1:-1;25269:5:71;;24893:410;-1:-1:-1;;24893:410:71:o;25151:130::-;-1:-1:-1;25294:4:71;;24893:410;-1:-1:-1;;24893:410:71:o;45365:176::-;665:10:19;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;45455:14:71::1;::::0;::::1;;45447:54;;;::::0;-1:-1:-1;;;45447:54:71;;34318:2:72;45447:54:71::1;::::0;::::1;34300:21:72::0;34357:2;34337:18;;;34330:30;-1:-1:-1;;;34376:18:72;;;34369:57;34443:18;;45447:54:71::1;34116:351:72::0;45447:54:71::1;45507:29;45526:9;;45507:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;45507:18:71::1;::::0;-1:-1:-1;;;45507:29:71:i:1;49843:308::-:0;49944:12;9277:43;9295:12;9309:10;9277:17;:43::i;:::-;9269:85;;;;-1:-1:-1;;;9269:85:71;;;;;;;:::i;:::-;49985:33:::1;3939:9;49985:15;:33;:::i;:::-;49973:9;:45;49972:65;;;-1:-1:-1::0;50023:14:71;;49972:65:::1;49964:127;;;::::0;-1:-1:-1;;;49964:127:71;;20575:2:72;49964:127:71::1;::::0;::::1;20557:21:72::0;20614:2;20594:18;;;20587:30;20653:34;20633:18;;;20626:62;-1:-1:-1;;;20704:18:72;;;20697:47;20761:19;;49964:127:71::1;20373:413:72::0;49964:127:71::1;-1:-1:-1::0;;;;;;50097:37:71;;::::1;;::::0;;;:23:::1;:37;::::0;;;;:49;49843:308::o;28054:1473::-;28132:19;28154:14;;;:7;:14;;;;;28197:13;28182:11;;;;;;:28;;;;;;;;:::i;:::-;;28174:61;;;;-1:-1:-1;;;28174:61:71;;;;;;;:::i;:::-;28270:20;;;:33;28331:31;;;;28385:29;;;;28445:20;;;:33;28506:31;;;;28560:29;;;;-1:-1:-1;;;;;28270:33:71;;;;28385:29;28270:33;28385:29;;;;;;;28445:33;;;;;28560:29;;;;28385;28606:22;;;;;28619:9;28606:22;28604:25;28596:64;;;;-1:-1:-1;;;28596:64:71;;32371:2:72;28596:64:71;;;32353:21:72;32410:2;32390:18;;;32383:30;-1:-1:-1;;;32429:18:72;;;32422:56;32495:18;;28596:64:71;32169:350:72;28596:64:71;-1:-1:-1;;;;;28674:32:71;;;;;;:17;:32;;;;;:39;:44;:92;;;;-1:-1:-1;;;;;;28722:32:71;;;;;;:17;:32;;;;;:39;:44;28674:92;28666:155;;;;-1:-1:-1;;;28666:155:71;;26640:2:72;28666:155:71;;;26622:21:72;26679:2;26659:18;;;26652:30;26718:34;26698:18;;;26691:62;-1:-1:-1;;;26769:18:72;;;26762:48;26827:19;;28666:155:71;26438:414:72;28666:155:71;28831:14;;;;-1:-1:-1;;;;;28831:14:71;:28;28828:446;;28891:14;;;;-1:-1:-1;;;;;28891:14:71;28877:10;:28;28869:81;;;;-1:-1:-1;;;28869:81:71;;36694:2:72;28869:81:71;;;36676:21:72;36733:2;36713:18;;;36706:30;-1:-1:-1;;;;;;;;;;;36752:18:72;;;36745:62;-1:-1:-1;;;36823:18:72;;;36816:38;36871:19;;28869:81:71;36492:404:72;28869:81:71;28828:446;;;28966:9;28963:311;;;29007:13;;-1:-1:-1;;;;;29007:13:71;28993:10;:27;28985:80;;;;-1:-1:-1;;;28985:80:71;;24906:2:72;28985:80:71;;;24888:21:72;24945:2;24925:18;;;24918:30;-1:-1:-1;;;;;;;;;;;24964:18:72;;;24957:62;-1:-1:-1;;;25035:18:72;;;25028:38;25083:19;;28985:80:71;24704:404:72;28963:311:71;29081:9;29078:196;;;29122:13;;;;-1:-1:-1;;;;;29122:13:71;29108:10;:27;29100:80;;;;-1:-1:-1;;;29100:80:71;;40138:2:72;29100:80:71;;;40120:21:72;40177:2;40157:18;;;40150:30;-1:-1:-1;;;;;;;;;;;40196:18:72;;;40189:62;-1:-1:-1;;;40267:18:72;;;40260:38;40315:19;;29100:80:71;39936:404:72;29078:196:71;29201:66;;-1:-1:-1;;;29201:66:71;;35455:2:72;29201:66:71;;;35437:21:72;35494:2;35474:18;;;35467:30;35533:34;35513:18;;;35506:62;-1:-1:-1;;;35584:18:72;;;35577:54;35648:19;;29201:66:71;35253:420:72;29078:196:71;29283:9;29280:102;;;29302:73;29323:5;29330:14;29346:11;29359:5;29366:8;29302:20;:73::i;:::-;29391:9;29388:102;;;29410:73;29431:5;29438:14;29454:11;29467:5;29474:8;29410:20;:73::i;:::-;-1:-1:-1;;;;29496:11:71;;;;;:26;;-1:-1:-1;;29496:26:71;29510:12;29496:26;;;-1:-1:-1;;;;28054:1473:71:o;52109:2752::-;52162:7;52199:14;;;:7;:14;;;;;;;;52244:20;;;:33;52305:31;;;;;52361:28;;;;52420:20;;;:33;52481:31;;;;52537:28;;;;-1:-1:-1;;;;;52244:33:71;;;52582:30;;;;;;;;;52420:33;;;;52582:45;;;;;;;;;;;52199:14;;52244:33;;52305:31;;52361:28;;52420:33;52481:31;52537:28;52582:45;;:94;;;;-1:-1:-1;;;;;;52631:30:71;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;52582:94;52580:97;52572:140;;;;-1:-1:-1;;;52572:140:71;;;;;;;:::i;:::-;-1:-1:-1;;;;;52722:38:71;;;;;;:23;:38;;;;;;:43;;:103;;-1:-1:-1;;;;;;52787:38:71;;;;;;:23;:38;;;;;;52769:15;:56;52722:103;52719:141;;;-1:-1:-1;52842:11:71;52109:2752;-1:-1:-1;;;;;;;52109:2752:71:o;52719:141::-;-1:-1:-1;;;;;52869:30:71;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;;:94;;-1:-1:-1;;;;;;52918:30:71;;;;;;;:15;:30;;;;;;;;:45;;;;;;;;;;;;52869:94;52866:1991;;;-1:-1:-1;;;;;52977:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:77;;;;;;;:82;52974:1837;;-1:-1:-1;;;;;53093:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:77;;;;;;;53078:93;;:11;:93;:::i;:::-;53071:100;52109:2752;-1:-1:-1;;;;;;;;;52109:2752:71:o;52974:1837::-;-1:-1:-1;;;;;53190:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:77;;;;;;;:82;53187:1624;;-1:-1:-1;;;;;53306:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:77;;;;;;;53291:93;;:11;:93;:::i;53187:1624::-;-1:-1:-1;;;;;53403:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:83;;;;;;;:88;53400:1411;;-1:-1:-1;;;;;53525:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:83;;;;;;;53510:99;;:11;:99;:::i;53400:1411::-;-1:-1:-1;;;;;53628:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:83;;;;;;;:88;53625:1186;;-1:-1:-1;;;;;53750:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:83;;;;;;;53735:99;;:11;:99;:::i;53625:1186::-;-1:-1:-1;;;;;53853:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:83;;;;;;;:88;53850:961;;-1:-1:-1;;;;;53975:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:83;;;;;;;53960:99;;:11;:99;:::i;53850:961::-;-1:-1:-1;;;;;54078:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:83;;;;;;;:88;54075:736;;-1:-1:-1;;;;;54200:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:67;;;;;;;;:83;;;;;;;54185:99;;:11;:99;:::i;54075:736::-;-1:-1:-1;;;;;54303:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:89;;;;:94;54300:511;;-1:-1:-1;;;;;54431:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:89;;;;54416:105;;:11;:105;:::i;54300:511::-;-1:-1:-1;;;;;54540:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:89;;;;:94;54537:274;;-1:-1:-1;;;;;54668:42:71;;;;;;;:27;:42;;;;;;;;:57;;;;;;;;;;;:73;;;;;;;;:89;;;;54653:105;;:11;:105;:::i;54537:274::-;-1:-1:-1;54791:11:71;52109:2752;-1:-1:-1;;;;;;;52109:2752:71:o;46557:451::-;46667:12;9006;-1:-1:-1;;;;;8998:27:71;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8984:43:71;:10;-1:-1:-1;;;;;8984:43:71;;:97;;;-1:-1:-1;;;;;;9037:32:71;;;;;;:18;:32;;;;;;;;9070:10;9037:44;;;;;;;;;;8984:97;8969:161;;;;-1:-1:-1;;;8969:161:71;;31969:2:72;8969:161:71;;;31951:21:72;32008:2;31988:18;;;31981:30;32047:34;32027:18;;;32020:62;-1:-1:-1;;;32098:18:72;;;32091:31;32139:19;;8969:161:71;31767:397:72;8969:161:71;46692:6:::1;46687:154;-1:-1:-1::0;;;;;46706:31:71;::::1;;::::0;;;:17:::1;:31;::::0;;;;:38;46704:40;::::1;46687:154;;;-1:-1:-1::0;;;;;46758:32:71;::::1;46829:5;46758:32:::0;;;:18:::1;:32;::::0;;;;;;;46791:17:::1;:31:::0;;;;;:34;;46829:5;;46791:31;46823:1;;46791:34;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;46791:34:71::1;46758:68:::0;;;::::1;::::0;;;;;;;;:76;;-1:-1:-1;;46758:76:71::1;::::0;::::1;;::::0;;;::::1;::::0;;46746:3;::::1;::::0;::::1;:::i;:::-;;;;46687:154;;;;46851:6;46846:109;46863:18:::0;;::::1;46846:109;;;-1:-1:-1::0;;;;;46895:32:71;::::1;;::::0;;;:18:::1;:32;::::0;;;;46944:4:::1;::::0;46928:9;;46938:1;46928:12;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;46895:46:71::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;46895:46:71;:53;;-1:-1:-1;;46895:53:71::1;::::0;::::1;;::::0;;;::::1;::::0;;46883:3;::::1;::::0;::::1;:::i;:::-;;;;46846:109;;;-1:-1:-1::0;;;;;;46960:31:71;::::1;;::::0;;;:17:::1;:31;::::0;;;;:43:::1;::::0;46994:9;;46960:43:::1;:::i;1846:189:2:-:0;665:10:19;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;24499:2:72;1926:73:2::1;::::0;::::1;24481:21:72::0;24538:2;24518:18;;;24511:30;24577:34;24557:18;;;24550:62;-1:-1:-1;;;24628:18:72;;;24621:36;24674:19;;1926:73:2::1;24297:402:72::0;1926:73:2::1;2009:19;2019:8;2009:9;:19::i;11039:2294:71:-:0;11270:10;-1:-1:-1;;;;;11225:55:71;:41;11239:10;11225:41;;;;;;;;;;;;;-1:-1:-1;;;11225:41:71;;;:13;:41::i;:::-;-1:-1:-1;;;;;11225:55:71;;11217:70;;;;-1:-1:-1;;;11217:70:71;;28657:2:72;11217:70:71;;;28639:21:72;28696:1;28676:18;;;28669:29;-1:-1:-1;;;28714:18:72;;;28707:32;28756:18;;11217:70:71;28455:325:72;11217:70:71;-1:-1:-1;;;;;11334:19:71;;11348:4;11334:19;11326:34;;;;-1:-1:-1;;;11326:34:71;;23822:2:72;11326:34:71;;;23804:21:72;23861:1;23841:18;;;23834:29;-1:-1:-1;;;23879:18:72;;;23872:32;23921:18;;11326:34:71;23620:325:72;11326:34:71;11399:31;11411:4;11417:12;;11399:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11399:11:71;;-1:-1:-1;;;11399:31:71:i;:::-;11391:46;;;;-1:-1:-1;;;11391:46:71;;38703:2:72;11391:46:71;;;38685:21:72;38742:1;38722:18;;;38715:29;-1:-1:-1;;;38760:18:72;;;38753:32;38802:18;;11391:46:71;38501:325:72;11391:46:71;11469:12;11484:19;11498:4;40621:2;40611:13;40605:20;;40497:138;11484:19;11469:34;-1:-1:-1;;;;;;;;;;;;11512:27:71;;11509:1820;;;11705:2;11695:13;;;11689:20;11745:2;11735:13;;;11729:20;11791:3;11781:14;;11775:21;11838:3;11828:14;;11822:21;12011:92;;;;;;;12025:10;12011:92;;-1:-1:-1;12011:92:71;;;;;;;;;;;11689:20;;11729;;11775:21;;11822;;11549:17;;12011:92;;12055:16;12011:92;;12073:4;12011:92;;;;;;;;;;;12086:16;12011:92;;11976:127;-1:-1:-1;12111:32:71;12146:24;12165:4;12146:18;:24::i;:::-;12111:59;;12179:162;12202:4;12216:9;12235:8;12253:14;12277;12301:11;12322;12179:13;:162::i;:::-;11541:808;;;;;;11509:1820;;;-1:-1:-1;;;;;;;;;;;12359:29:71;;12355:974;;;12499:2;12489:13;;12483:20;12522:11;;12398:13;;12537:2;12522:17;12518:284;;;-1:-1:-1;12780:2:71;12770:13;;12764:20;12518:284;12809:19;12831:14;;;:7;:14;;;;;12908:13;;12831:14;;12809:19;-1:-1:-1;;;;;12900:21:71;;;12908:13;;12900:21;12899:69;;12948:5;:20;;12899:69;;;12925:5;:20;;12899:69;12854:114;;;;;;;;;;-1:-1:-1;;;;;12854:114:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;12998:34:71;;;;-1:-1:-1;;;;;;12984:48:71;:10;:48;12976:77;;;;-1:-1:-1;;;12976:77:71;;30184:2:72;12976:77:71;;;30166:21:72;30223:2;30203:18;;;30196:30;-1:-1:-1;;;30242:18:72;;;30235:46;30298:18;;12976:77:71;29982:340:72;12976:77:71;13082:21;:29;;;13069:9;:42;13061:89;;;;-1:-1:-1;;;13061:89:71;;36291:2:72;13061:89:71;;;36273:21:72;36330:2;36310:18;;;36303:30;36369:34;36349:18;;;36342:62;-1:-1:-1;;;36420:18:72;;;36413:32;36462:19;;13061:89:71;36089:398:72;13061:89:71;13186:21;:35;;;13166:55;;;;;;;;:::i;:::-;:16;:55;13158:101;;;;-1:-1:-1;;;13158:101:71;;21426:2:72;13158:101:71;;;21408:21:72;21465:2;21445:18;;;21438:30;21504:34;21484:18;;;21477:62;-1:-1:-1;;;21555:18:72;;;21548:31;21596:19;;13158:101:71;21224:397:72;13158:101:71;13268:45;13281:5;13288:4;13294:1;13297:5;13304:8;13268:12;:45::i;:::-;12390:939;;;;12355:974;11211:2122;11039:2294;;;;;;;;;;:::o;10350:216::-;10510:4;10529:31;10541:4;;10529:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10529:31:71;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10547:12:71;;-1:-1:-1;10547:12:71;;;;10529:31;;10547:12;;;;10529:31;;;;;;;;;-1:-1:-1;10529:11:71;;-1:-1:-1;;;10529:31:71:i;:::-;10522:39;10350:216;-1:-1:-1;;;;;;;;;;;;10350:216:71:o;676:141:37:-;808:4;744:16;:61;788:14;771:32;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;771:32:37;;;;;;761:43;;771:32;761:43;;;;744:61;;;;;;;;;;-1:-1:-1;744:61:37;:68;;-1:-1:-1;;744:68:37;;;;;;;;;;-1:-1:-1;676:141:37:o;48188:191:71:-;-1:-1:-1;;;;;48294:28:71;;;48275:4;48294:28;;;:14;:28;;;;;;;;:36;;;;;;;;;;;;;;;:79;;;48352:12;-1:-1:-1;;;;;48344:27:71;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;48334:39:71;:6;-1:-1:-1;;;;;48334:39:71;;48287:87;48188:191;-1:-1:-1;;;48188:191:71:o;31541:576::-;31671:19;31693:14;;;:7;:14;;;;;;31671:19;31758:6;:24;;;;;;;;:::i;:::-;;31757:72;;31809:5;:20;;31757:72;;;31786:5;:20;;31757:72;31714:115;;;;;;;;;;-1:-1:-1;;;;;31714:115:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;31863:29:71;;;;31714:115;;-1:-1:-1;31921:14:71;31903;:32;;;;;;;;:::i;:::-;;31899:214;;;31945:73;31971:5;31978:6;31986:5;31993:14;32009:8;31945:25;:73::i;:::-;31899:214;;;32039:67;32069:5;32076:6;32084:5;32091:14;32039:29;:67::i;:::-;31664:453;;;31541:576;;;;;:::o;26653:1131::-;26724:19;26746:14;;;:7;:14;;;;;;26783:15;26754:5;26783:8;:15::i;:::-;26827:31;;;;26886;;;;26767;;-1:-1:-1;26827:31:71;26927:20;;;26924:821;;;26957:73;26978:5;26985:14;27001:11;27014:5;27021:8;26957:20;:73::i;:::-;27038;27059:5;27066:14;27082:11;27095:5;27102:8;27038:20;:73::i;:::-;26924:821;;;27306:11;27297:5;:20;;:72;;;;-1:-1:-1;27355:14:71;27321:30;;;;;;;;;:48;;;;;;;;:::i;:::-;;;27297:72;27289:132;;;;-1:-1:-1;;;27289:132:71;;28987:2:72;27289:132:71;;;28969:21:72;29026:2;29006:18;;;28999:30;29065:34;29045:18;;;29038:62;-1:-1:-1;;;29116:18:72;;;29109:45;29171:19;;27289:132:71;28785:411:72;27289:132:71;27429:73;27450:5;27457:14;27473:11;27486:5;27493:8;27429:20;:73::i;:::-;27510:67;27531:5;27538:14;27554:5;27561;27568:8;27510:20;:67::i;:::-;27622:16;27588:30;;;;;;;;;:50;;;;;;;;:::i;:::-;;27585:154;;;27650:80;27671:5;27678:14;27694:19;27708:5;27694:11;:19;:::i;:::-;27715:4;27721:8;27650:20;:80::i;:::-;27750:11;;;:28;;27764:14;;27750:11;-1:-1:-1;;27750:28:71;;27764:14;27750:28;;22281:771;22420:26;;22473:24;;;;22521:21;;;;22573:27;;;;22385:4;;22420:26;22473:24;22521:21;22627:14;22610:13;:31;;;;;;;;:::i;:::-;;22607:423;;;22666:53;;-1:-1:-1;;;22666:53:71;;-1:-1:-1;;;;;15447:15:72;;;22666:53:71;;;15429:34:72;22713:4:71;15479:18:72;;;15472:43;22723:10:71;;22666:30;;;;;;15364:18:72;;22666:53:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;22659:75;;;;;;;;22607:423;22767:15;22750:13;:32;;;;;;;;:::i;:::-;;22747:283;;;22799:51;;-1:-1:-1;;;22799:51:71;;;;;17887:25:72;;;22862:4:71;;-1:-1:-1;;;;;22799:33:71;;;;;17860:18:72;;22799:51:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;22799:68:71;;22792:76;;;;;;;;22747:283;22901:16;22884:13;:33;;;;;;;;:::i;:::-;;22881:149;;;22933:75;;-1:-1:-1;;;22933:75:71;;;;;18404:25:72;;;-1:-1:-1;;;;;18503:15:72;;;18483:18;;;18476:43;23002:4:71;18535:18:72;;;18528:43;23012:10:71;;22933:43;;;;;;18377:18:72;;22933:75:71;18202:375:72;22881:149:71;-1:-1:-1;23043:4:71;;22281:771;-1:-1:-1;;;;;;22281:771:71:o;17201:4007::-;17332:19;17354:14;;;:7;:14;;;;;17397:13;17382:11;;;;;;:28;;;;;;;;:::i;:::-;;17374:61;;;;-1:-1:-1;;;17374:61:71;;;;;;;:::i;:::-;17484:13;;17442:23;;-1:-1:-1;;;;;17474:23:71;;;17484:13;;17474:23;17471:341;;;-1:-1:-1;17525:13:71;;;;-1:-1:-1;;;;;17525:13:71;17471:341;;;17564:13;;;;-1:-1:-1;;;;;17554:23:71;;;17564:13;;17554:23;17551:261;;;-1:-1:-1;17605:13:71;;-1:-1:-1;;;;;17605:13:71;17551:261;;;17634:13;;;;-1:-1:-1;;;;;17634:13:71;17631:181;;-1:-1:-1;17671:13:71;;;:22;;-1:-1:-1;;;;;;17671:22:71;-1:-1:-1;;;;;17671:22:71;;;;;;;;;;17719:13;;;17631:181;;;17753:52;;-1:-1:-1;;;17753:52:71;;33548:2:72;17753:52:71;;;33530:21:72;33587:2;33567:18;;;33560:30;33626:34;33606:18;;;33599:62;-1:-1:-1;;;33677:18:72;;;33670:40;33727:19;;17753:52:71;33346:406:72;17631:181:71;17874:13;;17818:42;;-1:-1:-1;;;;;17864:23:71;;;17874:13;;17864:23;17863:71;;17914:5;:20;;17863:71;;;17891:5;:20;;17863:71;17818:116;;;;;;;;;;-1:-1:-1;;;;;17818:116:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;17950:21;:30;;;17949:31;17941:80;;;;-1:-1:-1;;;17941:80:71;;33143:2:72;17941:80:71;;;33125:21:72;33182:2;33162:18;;;33155:30;33221:34;33201:18;;;33194:62;-1:-1:-1;;;33272:18:72;;;33265:34;33316:19;;17941:80:71;32941:400:72;17941:80:71;18066:16;18031:21;:31;;;:51;;;;;;;;:::i;:::-;;18028:1595;;;18134:12;18095:21;:35;;;:51;;;;;;;;:::i;:::-;;18092:1131;;;18178:21;:32;;;18166:8;:44;18158:85;;;;-1:-1:-1;;;18158:85:71;;27059:2:72;18158:85:71;;;27041:21:72;27098:2;27078:18;;;27071:30;-1:-1:-1;;;27117:18:72;;;27110:58;27185:18;;18158:85:71;26857:352:72;18158:85:71;18028:1595;;18092:1131;18300:14;18261:21;:35;;;:53;;;;;;;;:::i;:::-;;18258:965;;;18341:34;;18413:32;;;;18334:112;;-1:-1:-1;;;18334:112:71;;-1:-1:-1;;;;;18334:55:71;;;;;;:112;;18390:6;;18406:4;;18334:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;18028:1595;;18258:965;18503:15;18464:21;:35;;;:54;;;;;;;;:::i;:::-;;18461:762;;;18538:34;;18618:29;;;;;18530:119;;-1:-1:-1;;;18530:119:71;;-1:-1:-1;;;;;18530:56:71;;;;;;:119;;18587:6;;18603:4;;18530:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18028:1595;;18461:762;18707:16;18668:21;:35;;;:55;;;;;;;;:::i;:::-;;18667:83;;;;-1:-1:-1;18728:22:71;;18667:83;18664:559;;;18770:21;:34;;;-1:-1:-1;;;;;18761:72:71;;18834:21;:29;;;18865:6;18881:4;18888:21;:32;;;-1:-1:-1;;;;;;;;;;;18939:18:71;;18922:36;;;;;;14394:19:72;;14438:2;14429:12;;14265:182;18922:36:71;;;;;;;-1:-1:-1;;18922:36:71;;;;;;-1:-1:-1;;;;;;;;;;;18922:36:71;18960;;14394:19:72;18922:36:71;14429:12:72;18960:36:71;;;;;;;;;;;;18761:236;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;18664:559::-;19055:16;19016:21;:35;;;:55;;;;;;;;:::i;:::-;;19015:83;;;;-1:-1:-1;19076:22:71;;;19015:83;19012:211;;;19138:21;:32;;;19117:17;:53;19109:105;;;;-1:-1:-1;;;19109:105:71;;22235:2:72;19109:105:71;;;22217:21:72;22274:2;22254:18;;;22247:30;22313:34;22293:18;;;22286:62;-1:-1:-1;;;22364:18:72;;;22357:37;22411:19;;19109:105:71;22033:403:72;18028:1595:71;19274:14;19239:21;:31;;;:49;;;;;;;;:::i;:::-;;19235:388;;;19308:59;19320:6;19328:15;19345:21;19308:11;:59::i;:::-;19300:127;;;;-1:-1:-1;;;19300:127:71;;37520:2:72;19300:127:71;;;37502:21:72;37559:2;37539:18;;;37532:30;37598:34;37578:18;;;37571:62;-1:-1:-1;;;37649:18:72;;;37642:53;37712:19;;19300:127:71;37318:419:72;19235:388:71;19500:51;19521:6;19529:21;19500:20;:51::i;:::-;19492:124;;;;-1:-1:-1;;;19492:124:71;;29755:2:72;19492:124:71;;;29737:21:72;29794:2;29774:18;;;29767:30;29833:34;29813:18;;;29806:62;-1:-1:-1;;;29884:18:72;;;29877:58;29952:19;;19492:124:71;29553:424:72;19492:124:71;19642:13;;-1:-1:-1;;;;;19632:23:71;;;19642:13;;19632:23;19629:136;;;19665:29;;;:36;;-1:-1:-1;;19665:36:71;;;;;19629:136;;;19722:29;;;:36;;-1:-1:-1;;19722:36:71;;;;;19629:136;19823:20;;;;19804:15;:39;;19776:25;19870:29;19893:5;19870:22;:29::i;:::-;19849:50;;20369:20;:52;;;;-1:-1:-1;20393:14:71;;;;-1:-1:-1;;;;;20393:14:71;:28;20369:52;:104;;;;-1:-1:-1;20459:14:71;20425:30;;;;;;;;;:48;;;;;;;;:::i;:::-;;20369:104;:156;;;;-1:-1:-1;20511:14:71;20477:30;;;;;;;;;:48;;;;;;;;:::i;:::-;;20369:156;:173;;;;;20529:13;20369:173;20365:672;;;20690:13;;20637:39;;-1:-1:-1;;;;;20680:23:71;;;20690:13;;20680:23;20679:71;;20730:5;:20;;20679:71;;;20707:5;:20;;20679:71;20637:113;;;;;;;;;;-1:-1:-1;;;;;20637:113:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;20637:113:71;-1:-1:-1;20762:56:71;20774:15;20791:6;20637:113;20762:11;:56::i;:::-;20758:273;;;20940:29;;;:36;;;-1:-1:-1;;20940:36:71;;;;;;;;20986:29;;;:36;;;;;;;;;;20758:273;20544:493;20365:672;21053:14;;;;-1:-1:-1;;;;;21053:14:71;:28;:63;;;;;21085:31;21110:5;21085:24;:31::i;:::-;21053:80;;;;;21120:13;21053:80;:104;;;;;21137:20;21053:104;21043:161;;;21167:30;21181:5;21188:8;21167:13;:30::i;:::-;17326:3882;;;;;17201:4007;;;;;:::o;1605:92:2:-;665:10:19;1185:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;14738:1913:71:-;15086:12;15054:14;:28;;;:44;;;;;;;;:::i;:::-;;15051:159;;;15144:16;15116:14;:24;;;:44;;;;;;;;:::i;:::-;;15108:95;;;;-1:-1:-1;;;15108:95:71;;;;;;;:::i;:::-;15251:12;15219:14;:28;;;:44;;;;;;;;:::i;:::-;;15216:159;;;15309:16;15281:14;:24;;;:44;;;;;;;;:::i;:::-;;15273:95;;;;-1:-1:-1;;;15273:95:71;;;;;;;:::i;:::-;15413:14;15385;:24;;;:42;;;;;;;;:::i;:::-;;15381:292;;;15477:14;15445;:28;;;:46;;;;;;;;:::i;:::-;;:98;;;-1:-1:-1;15527:16:71;15495:14;:28;;;:48;;;;;;;;:::i;:::-;;15445:98;15437:153;;;;-1:-1:-1;;;15437:153:71;;;;;;;:::i;:::-;15606:22;;;;15598:68;;;;-1:-1:-1;;;15598:68:71;;;;;;;:::i;:::-;15715:14;15687;:24;;;:42;;;;;;;;:::i;:::-;;15683:292;;;15779:14;15747;:28;;;:46;;;;;;;;:::i;:::-;;:98;;;-1:-1:-1;15829:16:71;15797:14;:28;;;:48;;;;;;;;:::i;:::-;;15747:98;15739:153;;;;-1:-1:-1;;;15739:153:71;;;;;;;:::i;:::-;15908:22;;;;15900:68;;;;-1:-1:-1;;;15900:68:71;;;;;;;:::i;:::-;15984:14;;;;15981:142;;;-1:-1:-1;;;;;16016:26:71;;;;;;:16;:26;;;;;;;;16008:108;;;;-1:-1:-1;;;16008:108:71;;26162:2:72;16008:108:71;;;26144:21:72;26201:2;26181:18;;;26174:30;26240:34;26220:18;;;26213:62;26311:34;26291:18;;;26284:62;-1:-1:-1;;;26362:19:72;;;26355:36;26408:19;;16008:108:71;25960:473:72;16008:108:71;-1:-1:-1;;;;;16137:21:71;;16129:82;;;;-1:-1:-1;;;16129:82:71;;37103:2:72;16129:82:71;;;37085:21:72;37142:2;37122:18;;;37115:30;37181:34;37161:18;;;37154:62;-1:-1:-1;;;37232:18:72;;;37225:46;37288:19;;16129:82:71;36901:412:72;16129:82:71;16222:6;:8;;;:6;:8;;;:::i;:::-;;;;;;16237:23;16281:15;16264:14;:32;16263:90;;16318:34;3881:10;16318:15;:34;:::i;:::-;16263:90;;;16300:14;16263:90;16237:116;;16378:268;;;;;;;;16401:7;-1:-1:-1;;;;;16378:268:71;;;;;16425:7;-1:-1:-1;;;;;16378:268:71;;;;;16450:8;-1:-1:-1;;;;;16378:268:71;;;;;16482:15;16378:268;;;;16521:14;16378:268;;;;16559:14;16378:268;;;;16597:14;16378:268;;;;16626:13;16378:268;;;;;;;;:::i;:::-;;;16368:6;;;16360:15;;;;:7;:15;;;;;;;;;:286;;;;-1:-1:-1;;;;;16360:286:71;;;-1:-1:-1;;;;;;16360:286:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;;:286;;;;-1:-1:-1;;16360:286:71;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;16360:286:71;;;;;;;;;;;;;;;;;-1:-1:-1;;16360:286:71;;;;;;;;;-1:-1:-1;;16360:286:71;;;;;;;;;;;;;;;;;-1:-1:-1;;16360:286:71;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;16360:286:71;;;;;;;;;;;-1:-1:-1;;;;;;16360:286:71;-1:-1:-1;;;;;16360:286:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16360:286:71;-1:-1:-1;16360:286:71;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;16360:286:71;;;;;;;;;;;;;;;;;-1:-1:-1;;16360:286:71;;;;;;;;;-1:-1:-1;;16360:286:71;;;;;;;;;;;;;;;;;-1:-1:-1;;16360:286:71;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;16360:286:71;;;;;;;;;-1:-1:-1;;16360:286:71;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;14738:1913:71:o;45668:313::-;45745:6;45740:106;45759:15;:22;45757:24;;45740:106;;;45834:5;45795:16;:36;45812:15;45828:1;45812:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;45812:18:71;45795:36;;;;;;;;;;;;:44;;-1:-1:-1;;45795:44:71;;;;;;;;;;45783:3;;;;:::i;:::-;;;;45740:106;;;;45856:6;45851:93;45870:9;:16;45868:1;:18;45851:93;;;45933:4;45900:16;:30;45917:9;45927:1;45917:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;45900:30:71;;;;;;;;;;;-1:-1:-1;45900:30:71;:37;;-1:-1:-1;;45900:37:71;;;;;;;;;;45888:3;;;;:::i;:::-;;;;45851:93;;;-1:-1:-1;45949:27:71;;;;:15;;:27;;;;;:::i;2041:169:2:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;616:261:68:-;706:7;725:21;776:15;759:33;;;;;;;;:::i;:::-;;;;-1:-1:-1;;759:33:68;;;;;;;;;;749:44;;759:33;749:44;;;;-1:-1:-1;;;810:60:68;;749:44;-1:-1:-1;278:42:68;;810:39;;:60;;850:4;;749:44;;810:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;803:67;616:261;-1:-1:-1;;;;616:261:68:o;39193:613:71:-;39282:4;39297:12;:19;39320:1;39297:24;39294:149;;;-1:-1:-1;39431:5:71;39424:12;;39294:149;39453:12;39468:19;39482:4;40621:2;40611:13;40605:20;;40497:138;39468:19;39453:34;;39496:4;:11;39511:3;39496:18;:49;;;;-1:-1:-1;;;;;;;;;;;;39518:27:71;;39496:49;39493:309;;;39562:4;39555:11;;;;;39493:309;39584:4;:11;39599:2;39584:17;:38;;;;39605:4;:11;39620:2;39605:17;39584:38;39583:73;;;;-1:-1:-1;;;;;;;;;;;;39627:29:71;;39583:73;39579:223;;;39673:4;39666:11;;;;;39579:223;39694:4;:11;39709:2;39694:17;:47;;;;-1:-1:-1;;;;;;;;;;;;39715:26:71;;39694:47;39690:112;;;39758:4;39751:11;;;;;39690:112;39790:5;39783:12;;;;;43370:614;43439:30;;:::i;:::-;43650:3;43640:14;;43634:21;43692:3;43682:14;;;43676:21;43730:3;43720:14;;43714:21;43774:3;43764:14;;43758:21;43814:3;43804:14;;43798:21;43842:137;;;;;;;;-1:-1:-1;;;;;43842:137:71;;;;;;;;;;;;;;;43676:21;;43714;;43758;;43842:137;;;43758:21;43842:137;;;;;;;;:::i;:::-;;;43938:5;43842:137;;;;;;;;;;;;43964:9;43842:137;;;;;;;;:::i;:::-;;;43830:149;43370:614;-1:-1:-1;;;;;;;43370:614:71:o;32121:984::-;32235:19;32257:14;;;:7;:14;;;;;;32235:19;32296:6;:24;;;;;;;;:::i;:::-;;32295:58;;32340:13;;;;-1:-1:-1;;;;;32340:13:71;32295:58;;;32324:13;;-1:-1:-1;;;;;32324:13:71;32295:58;32278:75;-1:-1:-1;32359:17:71;;32380:6;:24;;;;;;;;:::i;:::-;;32379:58;;32424:13;;-1:-1:-1;;;;;32424:13:71;32379:58;;;32408:13;;;;-1:-1:-1;;;;;32408:13:71;32379:58;32359:78;-1:-1:-1;32443:40:71;;32487:6;:24;;;;;;;;:::i;:::-;;32486:72;;32538:5;:20;;32486:72;;;32515:5;:20;;32486:72;32443:115;;;;;;;;;;-1:-1:-1;;;;;32443:115:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;32592:5;:20;;;32573:15;:39;;32565:75;;;;-1:-1:-1;;;32565:75:71;;;;;;;:::i;:::-;32670:32;;32726:27;;;;32784:33;;;;32849:14;32832:13;:31;;;;;;;;:::i;:::-;;:68;;;-1:-1:-1;32884:16:71;32867:13;:33;;;;;;;;:::i;:::-;;32832:68;32824:112;;;;-1:-1:-1;;;32824:112:71;;30529:2:72;32824:112:71;;;30511:21:72;30568:2;30548:18;;;30541:30;30607:33;30587:18;;;30580:61;30658:18;;32824:112:71;30327:355:72;32824:112:71;32951:51;32963:6;32971:9;32982:19;32951:11;:51::i;:::-;32943:79;;;;-1:-1:-1;;;32943:79:71;;22643:2:72;32943:79:71;;;22625:21:72;22682:2;22662:18;;;22655:30;-1:-1:-1;;;22701:18:72;;;22694:45;22756:18;;32943:79:71;22441:339:72;32943:79:71;33029:71;33042:12;33056:7;33065:13;33080:8;33090:9;33029:12;:71::i;:::-;32228:877;;;;;;;32121:984;;;;;:::o;33581:1612::-;33701:19;33723:14;;;:7;:14;;;;;;33701:19;33762:6;:24;;;;;;;;:::i;:::-;;33761:58;;33806:13;;;;-1:-1:-1;;;;;33806:13:71;33761:58;;;33790:13;;-1:-1:-1;;;;;33790:13:71;33761:58;33744:75;-1:-1:-1;33825:17:71;;33846:6;:24;;;;;;;;:::i;:::-;;33845:58;;33890:13;;-1:-1:-1;;;;;33890:13:71;33845:58;;;33874:13;;;;-1:-1:-1;;;;;33874:13:71;33845:58;33825:78;-1:-1:-1;33909:41:71;;33954:6;:24;;;;;;;;:::i;:::-;;33953:72;;34005:5;:20;;33953:72;;;33982:5;:20;;33953:72;34055:32;;34111:27;;;;;34169:33;;;;33909:116;;-1:-1:-1;;;;;;34055:32:71;;;;34169:33;;;34233:6;;34248:29;;;;;;;;;:49;;;;;;;;:::i;:::-;;34245:98;;;-1:-1:-1;34331:4:71;34245:98;34352:14;34349:148;;;34388:6;34376:18;;34349:148;;;34442:5;:20;;;34423:15;:39;;34415:75;;;;-1:-1:-1;;;34415:75:71;;;;;;;:::i;:::-;34523:12;34506:13;:29;;;;;;;;:::i;:::-;;34503:685;;;34606:32;;34588:9;;-1:-1:-1;;;;;34606:25:71;;;:32;;;;;34632:5;;34545:32;34606;34545;34606;34632:5;34606:25;:32;;;;;;;;;;;;;;;;;;;;;34537:108;34503:685;;;34671:14;34654:13;:31;;;;;;;;:::i;:::-;;34651:537;;;-1:-1:-1;;;;;34698:30:71;;34723:4;34698:30;34695:192;;;34740:47;;-1:-1:-1;;;34740:47:71;;-1:-1:-1;;;;;34740:29:71;;;;;:47;;34770:9;;34781:5;;34740:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;34651:537;;34695:192;34812:66;;-1:-1:-1;;;34812:66:71;;-1:-1:-1;;;;;34812:33:71;;;;;:66;;34846:13;;34861:9;;34872:5;;34812:66;;;:::i;34651:537::-;34919:15;34902:13;:32;;;;;;;;:::i;:::-;;34899:289;;;34944:78;;-1:-1:-1;;;34944:78:71;;-1:-1:-1;;;;;34944:34:71;;;;;:78;;34979:13;;34994:9;;35013:7;;34944:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34899:289;;;35055:16;35038:13;:33;;;;;;;;:::i;:::-;;35035:153;;;35081:100;;-1:-1:-1;;;35081:100:71;;;;;19703:25:72;;;-1:-1:-1;;;;;19802:15:72;;;19782:18;;;19775:43;19854:15;;;19834:18;;;19827:43;19886:18;;;19879:34;;;19950:3;19929:19;;;19922:32;-1:-1:-1;19970:19:72;;;19963:30;;;35081:100:71;20009:19:72;;;20002:32;20050:19;;;20043:30;35081:50:71;;;;;20090:19:72;;35081:100:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;33695:1498;;;;;;;;33581:1612;;;;:::o;36343:1550::-;36492:26;;36541:21;;;;36593:27;;;;36457:4;;36492:26;36541:21;36651:16;36634:13;:33;;;;;;;;:::i;:::-;;36631:1258;;;36677:22;36702:53;36716:12;36730:24;;;;;;;;;;;;;-1:-1:-1;;;36730:24:71;;;36702:13;:53::i;:::-;36677:78;-1:-1:-1;;;;;;36782:28:71;;36763:106;;;;-1:-1:-1;;;36763:106:71;;;;;;;:::i;:::-;36878:25;36911:18;36937:21;36966:17;36991:14;37013:18;37141:14;-1:-1:-1;;;;;37110:63:71;;37174:12;37188:6;37110:85;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37039:156;-1:-1:-1;37039:156:71;;-1:-1:-1;37039:156:71;;-1:-1:-1;37039:156:71;;-1:-1:-1;37039:156:71;;-1:-1:-1;37039:156:71;;-1:-1:-1;37224:22:71;;-1:-1:-1;37210:36:71;;-1:-1:-1;;37210:36:71;;:10;:36;;;;;;;;:::i;:::-;;:77;;;;;37263:13;:24;;;37250:9;:37;37210:77;:131;;;;;37306:6;-1:-1:-1;;;;;37292:20:71;:10;-1:-1:-1;;;;;37292:20:71;;:48;;;-1:-1:-1;;;;;;37316:24:71;;;37292:48;37210:161;;;;;37362:9;-1:-1:-1;;;;;37345:26:71;:13;-1:-1:-1;;;;;37345:26:71;;37210:161;:218;;;;-1:-1:-1;37376:24:71;;;;:51;;-1:-1:-1;;;;;;37404:23:71;;37422:4;37404:23;37376:51;37203:225;;;;;;;;;;;;;;36631:1258;37462:14;37445:13;:31;;;;;;;;:::i;:::-;;37441:448;;;37514:58;;-1:-1:-1;;;37514:58:71;;;;;17887:25:72;;;37486::71;;-1:-1:-1;;;;;37514:50:71;;;;;17860:18:72;;37514:58:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37486:86;;37603:6;-1:-1:-1;;;;;37588:21:71;:4;:11;;;-1:-1:-1;;;;;37588:21:71;;:50;;;-1:-1:-1;37613:11:71;;-1:-1:-1;;;;;37613:25:71;;37588:50;37587:83;;;;;37661:9;-1:-1:-1;;;;;37643:27:71;:4;:14;;;-1:-1:-1;;;;;37643:27:71;;37587:83;:126;;;;;37689:13;:24;;;37674:4;:11;;;:39;37587:126;:167;;;;-1:-1:-1;37732:22:71;37717:4;:11;;;:37;;;;;;;;:::i;:::-;;37587:167;:234;;;;-1:-1:-1;37759:15:71;;;;:29;;;:61;;-1:-1:-1;37792:11:71;;;;-1:-1:-1;;;;;37792:28:71;37815:4;37792:28;37759:61;37580:241;;;;;;;;37441:448;37842:40;;-1:-1:-1;;;37842:40:71;;33959:2:72;37842:40:71;;;33941:21:72;33998:2;33978:18;;;33971:30;34037:32;34017:18;;;34010:60;34087:18;;37842:40:71;33757:354:72;35197:1142:71;35396:14;35379:13;:31;;;;;;;;:::i;:::-;;35375:852;;;-1:-1:-1;;;;;35428:19:71;;35420:63;;;;-1:-1:-1;;;35420:63:71;;;;;;;:::i;:::-;35492:61;;-1:-1:-1;;;35492:61:71;;;;;20294:25:72;;;20335:18;;;20328:34;;;-1:-1:-1;;;;;35492:38:71;;;;;20267:18:72;;35492:61:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35375:852;;;35587:16;35570:13;:33;;;;;;;;:::i;:::-;;35566:661;;;-1:-1:-1;;;;;35621:19:71;;35613:63;;;;-1:-1:-1;;;35613:63:71;;;;;;;:::i;:::-;35685:22;35710:46;35724:5;35731:24;;;;;;;;;;;;;-1:-1:-1;;;35731:24:71;;;35710:13;:46::i;:::-;35685:71;-1:-1:-1;;;;;;35783:28:71;;35764:106;;;;-1:-1:-1;;;35764:106:71;;;;;;;:::i;:::-;35926:83;;-1:-1:-1;;;35926:83:71;;35879:17;;-1:-1:-1;;;;;35926:63:71;;;;;:83;;35990:5;;35997:11;;35926:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;36018:147:71;;-1:-1:-1;;;36018:147:71;;-1:-1:-1;;;;;16434:32:72;;;36018:147:71;;;16416:51:72;16483:18;;;16476:34;;;16526:18;;;16519:34;;;16569:18;;;16562:34;;;35904:105:71;;-1:-1:-1;36018:58:71;;;;-1:-1:-1;36018:58:71;;-1:-1:-1;;16388:19:72;;;;;-1:-1:-1;36018:147:71;;-1:-1:-1;;16185:417:72;36018:147:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35605:567;;35566:661;;;36188:32;;-1:-1:-1;;;36188:32:71;;39439:2:72;36188:32:71;;;39421:21:72;39478:2;39458:18;;;39451:30;-1:-1:-1;;;39497:18:72;;;39490:52;39559:18;;36188:32:71;39237:346:72;35566:661:71;36238:96;;;18097:25:72;;;-1:-1:-1;;;;;18158:32:72;;;18153:2;18138:18;;18131:60;36275:11:71;;36238:96;;;;;;18070:18:72;36238:96:71;;;;;;;35197:1142;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:134:72;82:20;;111:31;82:20;111:31;:::i;:::-;14:134;;;:::o;153:367::-;216:8;226:6;280:3;273:4;265:6;261:17;257:27;247:55;;298:1;295;288:12;247:55;-1:-1:-1;321:20:72;;-1:-1:-1;;;;;353:30:72;;350:50;;;396:1;393;386:12;350:50;433:4;425:6;421:17;409:29;;493:3;486:4;476:6;473:1;469:14;461:6;457:27;453:38;450:47;447:67;;;510:1;507;500:12;447:67;153:367;;;;;:::o;525:347::-;576:8;586:6;640:3;633:4;625:6;621:17;617:27;607:55;;658:1;655;648:12;607:55;-1:-1:-1;681:20:72;;-1:-1:-1;;;;;713:30:72;;710:50;;;756:1;753;746:12;710:50;793:4;785:6;781:17;769:29;;845:3;838:4;829:6;821;817:19;813:30;810:39;807:59;;;862:1;859;852:12;877:718;919:5;972:3;965:4;957:6;953:17;949:27;939:55;;990:1;987;980:12;939:55;1013:20;;-1:-1:-1;;;;;1082:10:72;;;1079:36;;;1095:18;;:::i;:::-;1170:2;1164:9;1138:2;1224:13;;-1:-1:-1;;1220:22:72;;;1244:2;1216:31;1212:40;1200:53;;;1268:18;;;1288:22;;;1265:46;1262:72;;;1314:18;;:::i;:::-;1354:10;1350:2;1343:22;1389:2;1381:6;1374:18;1435:3;1428:4;1423:2;1415:6;1411:15;1407:26;1404:35;1401:55;;;1452:1;1449;1442:12;1401:55;1516:2;1509:4;1501:6;1497:17;1490:4;1482:6;1478:17;1465:54;1563:1;1556:4;1551:2;1543:6;1539:15;1535:26;1528:37;1583:6;1574:15;;;;;;877:718;;;;:::o;1600:159::-;1691:13;;1733:1;1723:12;;1713:40;;1749:1;1746;1739:12;1764:247;1823:6;1876:2;1864:9;1855:7;1851:23;1847:32;1844:52;;;1892:1;1889;1882:12;1844:52;1931:9;1918:23;1950:31;1975:5;1950:31;:::i;2016:251::-;2086:6;2139:2;2127:9;2118:7;2114:23;2110:32;2107:52;;;2155:1;2152;2145:12;2107:52;2187:9;2181:16;2206:31;2231:5;2206:31;:::i;2272:388::-;2340:6;2348;2401:2;2389:9;2380:7;2376:23;2372:32;2369:52;;;2417:1;2414;2407:12;2369:52;2456:9;2443:23;2475:31;2500:5;2475:31;:::i;:::-;2525:5;-1:-1:-1;2582:2:72;2567:18;;2554:32;2595:33;2554:32;2595:33;:::i;:::-;2647:7;2637:17;;;2272:388;;;;;:::o;2665:523::-;2739:6;2747;2755;2808:2;2796:9;2787:7;2783:23;2779:32;2776:52;;;2824:1;2821;2814:12;2776:52;2863:9;2850:23;2882:31;2907:5;2882:31;:::i;:::-;2932:5;-1:-1:-1;2989:2:72;2974:18;;2961:32;3002:33;2961:32;3002:33;:::i;:::-;3054:7;-1:-1:-1;3113:2:72;3098:18;;3085:32;3126:30;3085:32;3126:30;:::i;:::-;3175:7;3165:17;;;2665:523;;;;;:::o;3193:525::-;3279:6;3287;3295;3303;3356:3;3344:9;3335:7;3331:23;3327:33;3324:53;;;3373:1;3370;3363:12;3324:53;3412:9;3399:23;3431:31;3456:5;3431:31;:::i;:::-;3481:5;-1:-1:-1;3538:2:72;3523:18;;3510:32;3551:33;3510:32;3551:33;:::i;:::-;3193:525;;3603:7;;-1:-1:-1;;;;3657:2:72;3642:18;;3629:32;;3708:2;3693:18;3680:32;;3193:525::o;3723:594::-;3818:6;3826;3834;3842;3850;3903:3;3891:9;3882:7;3878:23;3874:33;3871:53;;;3920:1;3917;3910:12;3871:53;3959:9;3946:23;3978:31;4003:5;3978:31;:::i;:::-;4028:5;-1:-1:-1;4085:2:72;4070:18;;4057:32;4098:33;4057:32;4098:33;:::i;:::-;3723:594;;4150:7;;-1:-1:-1;;;;4204:2:72;4189:18;;4176:32;;4255:2;4240:18;;4227:32;;4306:3;4291:19;;;4278:33;;-1:-1:-1;3723:594:72:o;4322:572::-;4417:6;4425;4433;4486:2;4474:9;4465:7;4461:23;4457:32;4454:52;;;4502:1;4499;4492:12;4454:52;4541:9;4528:23;4560:31;4585:5;4560:31;:::i;:::-;4610:5;-1:-1:-1;4666:2:72;4651:18;;4638:32;-1:-1:-1;;;;;4682:30:72;;4679:50;;;4725:1;4722;4715:12;4679:50;4764:70;4826:7;4817:6;4806:9;4802:22;4764:70;:::i;:::-;4322:572;;4853:8;;-1:-1:-1;4738:96:72;;-1:-1:-1;;;;4322:572:72:o;4899:315::-;4967:6;4975;5028:2;5016:9;5007:7;5003:23;4999:32;4996:52;;;5044:1;5041;5034:12;4996:52;5083:9;5070:23;5102:31;5127:5;5102:31;:::i;:::-;5152:5;5204:2;5189:18;;;;5176:32;;-1:-1:-1;;;4899:315:72:o;5219:437::-;5305:6;5313;5366:2;5354:9;5345:7;5341:23;5337:32;5334:52;;;5382:1;5379;5372:12;5334:52;5409:23;;-1:-1:-1;;;;;5444:30:72;;5441:50;;;5487:1;5484;5477:12;5441:50;5526:70;5588:7;5579:6;5568:9;5564:22;5526:70;:::i;:::-;5615:8;;5500:96;;-1:-1:-1;5219:437:72;-1:-1:-1;;;;5219:437:72:o;5661:245::-;5728:6;5781:2;5769:9;5760:7;5756:23;5752:32;5749:52;;;5797:1;5794;5787:12;5749:52;5829:9;5823:16;5848:28;5870:5;5848:28;:::i;5911:184::-;5981:6;6034:2;6022:9;6013:7;6009:23;6005:32;6002:52;;;6050:1;6047;6040:12;6002:52;-1:-1:-1;6073:16:72;;5911:184;-1:-1:-1;5911:184:72:o;6100:315::-;6168:6;6176;6229:2;6217:9;6208:7;6204:23;6200:32;6197:52;;;6245:1;6242;6235:12;6197:52;6281:9;6268:23;6258:33;;6341:2;6330:9;6326:18;6313:32;6354:31;6379:5;6354:31;:::i;6420:947::-;6582:6;6590;6598;6606;6614;6622;6630;6638;6646;6699:3;6687:9;6678:7;6674:23;6670:33;6667:53;;;6716:1;6713;6706:12;6667:53;6745:9;6739:16;6729:26;;6798:2;6787:9;6783:18;6777:25;6811:31;6836:5;6811:31;:::i;:::-;6911:2;6896:18;;6890:25;6861:5;;-1:-1:-1;6924:33:72;6890:25;6924:33;:::i;:::-;7028:2;7013:18;;7007:25;6976:7;;-1:-1:-1;7041:33:72;7007:25;7041:33;:::i;:::-;7093:7;7083:17;;;7140:3;7129:9;7125:19;7119:26;7109:36;;7185:3;7174:9;7170:19;7164:26;7154:36;;7230:3;7219:9;7215:19;7209:26;7199:36;;7275:3;7264:9;7260:19;7254:26;7244:36;;7299:62;7356:3;7345:9;7341:19;7299:62;:::i;:::-;7289:72;;6420:947;;;;;;;;;;;:::o;7372:1343::-;7527:6;7535;7543;7551;7559;7567;7575;7583;7591;7599;7607:7;7661:3;7649:9;7640:7;7636:23;7632:33;7629:53;;;7678:1;7675;7668:12;7629:53;-1:-1:-1;;;;;7734:23:72;;7731:31;-1:-1:-1;7728:51:72;;;7775:1;7772;7765:12;7728:51;7814:75;7881:7;7868:9;7855:23;7844:9;7840:39;7814:75;:::i;:::-;7908:8;;-1:-1:-1;7935:8:72;-1:-1:-1;7990:2:72;7975:18;;7962:32;;-1:-1:-1;8013:38:72;8047:2;8032:18;;8013:38;:::i;:::-;8003:48;;8070:38;8104:2;8093:9;8089:18;8070:38;:::i;:::-;8060:48;;8127:39;8161:3;8150:9;8146:19;8127:39;:::i;:::-;8117:49;;8213:3;8202:9;8198:19;8185:33;8175:43;;8268:2;8261:3;8250:9;8246:19;8233:33;8230:41;8227:61;;;8284:1;8281;8274:12;8227:61;8323:85;8400:7;8392:3;8381:9;8377:19;8364:33;8353:9;8349:49;8323:85;:::i;:::-;8427:8;;-1:-1:-1;8454:8:72;-1:-1:-1;8505:3:72;8490:19;;8477:33;8474:41;-1:-1:-1;8471:61:72;;;8528:1;8525;8518:12;8471:61;;8568:85;8645:7;8637:3;8626:9;8622:19;8609:33;8598:9;8594:49;8568:85;:::i;:::-;8672:8;8662:18;;8700:9;8689:20;;;;7372:1343;;;;;;;;;;;;;;:::o;8720:1278::-;8873:6;8881;8889;8897;8905;8913;8921;8929;8937;8945;8998:3;8986:9;8977:7;8973:23;8969:33;8966:53;;;9015:1;9012;9005:12;8966:53;9042:23;;-1:-1:-1;;;;;9114:14:72;;;9111:34;;;9141:1;9138;9131:12;9111:34;9180:58;9230:7;9221:6;9210:9;9206:22;9180:58;:::i;:::-;9257:8;;-1:-1:-1;9154:84:72;-1:-1:-1;9339:2:72;9324:18;;9311:32;;-1:-1:-1;9154:84:72;;-1:-1:-1;9362:38:72;9396:2;9381:18;;9362:38;:::i;:::-;9352:48;;9419:38;9453:2;9442:9;9438:18;9419:38;:::i;:::-;9409:48;;9476:39;9510:3;9499:9;9495:19;9476:39;:::i;:::-;9466:49;;9562:3;9551:9;9547:19;9534:33;9524:43;;9620:3;9609:9;9605:19;9592:33;9576:49;;9650:2;9640:8;9637:16;9634:36;;;9666:1;9663;9656:12;9634:36;9689:51;9732:7;9721:8;9710:9;9706:24;9689:51;:::i;:::-;9679:61;;9793:3;9782:9;9778:19;9765:33;9749:49;;9823:2;9813:8;9810:16;9807:36;;;9839:1;9836;9829:12;9807:36;;9878:60;9930:7;9919:8;9908:9;9904:24;9878:60;:::i;:::-;9852:86;;9957:8;9947:18;;;9984:8;9974:18;;;8720:1278;;;;;;;;;;;;;:::o;10003:270::-;10076:6;10129:2;10117:9;10108:7;10104:23;10100:32;10097:52;;;10145:1;10142;10135:12;10097:52;10184:9;10171:23;10223:1;10216:5;10213:12;10203:40;;10239:1;10236;10229:12;10278:271;10352:6;10405:2;10393:9;10384:7;10380:23;10376:32;10373:52;;;10421:1;10418;10411:12;10373:52;10460:9;10447:23;10499:1;10492:5;10489:12;10479:40;;10515:1;10512;10505:12;10554:1060;10656:6;10709:3;10697:9;10688:7;10684:23;10680:33;10677:53;;;10726:1;10723;10716:12;10677:53;10759:2;10753:9;10801:3;10789:16;;-1:-1:-1;;;;;10820:34:72;;10856:22;;;10817:62;10814:88;;;10882:18;;:::i;:::-;10918:2;10911:22;10955:16;;10980:31;10955:16;10980:31;:::i;:::-;11020:21;;11086:2;11071:18;;11065:25;11099:33;11065:25;11099:33;:::i;:::-;11160:2;11148:15;;11141:32;11218:2;11203:18;;11197:25;11231:33;11197:25;11231:33;:::i;:::-;11297:7;11292:2;11284:6;11280:15;11273:32;;11359:2;11348:9;11344:18;11338:25;11333:2;11325:6;11321:15;11314:50;11419:3;11408:9;11404:19;11398:26;11392:3;11384:6;11380:16;11373:52;11480:3;11469:9;11465:19;11459:26;11453:3;11445:6;11441:16;11434:52;11520:62;11577:3;11566:9;11562:19;11520:62;:::i;:::-;11514:3;11502:16;;11495:88;11506:6;10554:1060;-1:-1:-1;;;10554:1060:72:o;11619:356::-;11725:6;11733;11777:9;11768:7;11764:23;11807:3;11803:2;11799:12;11796:32;;;11824:1;11821;11814:12;11796:32;11847:3;11870:2;11866;11862:11;11859:31;;;11886:1;11883;11876:12;11859:31;11909:9;;11950:18;;;11937:32;;-1:-1:-1;;;;11619:356:72:o;11980:180::-;12039:6;12092:2;12080:9;12071:7;12067:23;12063:32;12060:52;;;12108:1;12105;12098:12;12060:52;-1:-1:-1;12131:23:72;;11980:180;-1:-1:-1;11980:180:72:o;12354:309::-;12419:6;12427;12480:2;12468:9;12459:7;12455:23;12451:32;12448:52;;;12496:1;12493;12486:12;12448:52;12532:9;12519:23;12509:33;;12592:2;12581:9;12577:18;12564:32;12605:28;12627:5;12605:28;:::i;12668:377::-;12742:6;12750;12758;12811:2;12799:9;12790:7;12786:23;12782:32;12779:52;;;12827:1;12824;12817:12;12779:52;12863:9;12850:23;12840:33;;12923:2;12912:9;12908:18;12895:32;12936:28;12958:5;12936:28;:::i;:::-;12668:377;;12983:5;;-1:-1:-1;;;13035:2:72;13020:18;;;;13007:32;;12668:377::o;13050:248::-;13118:6;13126;13179:2;13167:9;13158:7;13154:23;13150:32;13147:52;;;13195:1;13192;13185:12;13147:52;-1:-1:-1;;13218:23:72;;;13288:2;13273:18;;;13260:32;;-1:-1:-1;13050:248:72:o;13303:257::-;13344:3;13382:5;13376:12;13409:6;13404:3;13397:19;13425:63;13481:6;13474:4;13469:3;13465:14;13458:4;13451:5;13447:16;13425:63;:::i;:::-;13542:2;13521:15;-1:-1:-1;;13517:29:72;13508:39;;;;13549:4;13504:50;;13303:257;-1:-1:-1;;13303:257:72:o;13565:695::-;13648:12;;-1:-1:-1;;;;;13644:38:72;13632:51;;13732:4;13721:16;;;13715:23;13699:14;;;13692:47;13788:4;13777:16;;;13771:23;13755:14;;;13748:47;13841:4;13830:16;;13824:23;13856:44;13824:23;13856:44;:::i;:::-;13932:12;13925:4;13920:3;13916:14;13909:36;;14008:4;14001:5;13997:16;13991:23;13984:31;13977:39;13970:4;13965:3;13961:14;13954:63;14080:4;14073:5;14069:16;14063:23;14056:31;14049:39;14042:4;14037:3;14033:14;14026:63;14137:4;14130:5;14126:16;14120:23;14181:1;14165:14;14162:21;14152:55;;14187:18;;:::i;:::-;14239:14;14232:4;14227:3;14223:14;14216:38;;13565:695;;:::o;14452:276::-;14583:3;14621:6;14615:13;14637:53;14683:6;14678:3;14671:4;14663:6;14659:17;14637:53;:::i;:::-;14706:16;;;;;14452:276;-1:-1:-1;;14452:276:72:o;15526:375::-;-1:-1:-1;;;;;15784:15:72;;;15766:34;;15836:15;;;;15831:2;15816:18;;15809:43;15883:2;15868:18;;15861:34;;;;15716:2;15701:18;;15526:375::o;15906:274::-;-1:-1:-1;;;;;16098:32:72;;;;16080:51;;16162:2;16147:18;;16140:34;16068:2;16053:18;;15906:274::o;16886:658::-;17057:2;17109:21;;;17179:13;;17082:18;;;17201:22;;;17028:4;;17057:2;17280:15;;;;17254:2;17239:18;;;17028:4;17323:195;17337:6;17334:1;17331:13;17323:195;;;17402:13;;-1:-1:-1;;;;;17398:39:72;17386:52;;17493:15;;;;17458:12;;;;17434:1;17352:9;17323:195;;;-1:-1:-1;17535:3:72;;16886:658;-1:-1:-1;;;;;;16886:658:72:o;18582:721::-;18869:25;;;-1:-1:-1;;;;;18968:15:72;;;18963:2;18948:18;;18941:43;19020:15;;19015:2;19000:18;;18993:43;19067:2;19052:18;;19045:34;;;19116:3;19110;19095:19;;19088:32;;;18850:4;;19143:45;;19168:19;;19160:6;19143:45;:::i;:::-;19237:9;19229:6;19225:22;19219:3;19208:9;19204:19;19197:51;19265:32;19290:6;19282;19265:32;:::i;21626:402::-;21828:2;21810:21;;;21867:2;21847:18;;;21840:30;21906:34;21901:2;21886:18;;21879:62;-1:-1:-1;;;21972:2:72;21957:18;;21950:36;22018:3;22003:19;;21626:402::o;29201:347::-;29403:2;29385:21;;;29442:2;29422:18;;;29415:30;-1:-1:-1;;;29476:2:72;29461:18;;29454:53;29539:2;29524:18;;29201:347::o;30687:356::-;30889:2;30871:21;;;30908:18;;;30901:30;30967:34;30962:2;30947:18;;30940:62;31034:2;31019:18;;30687:356::o;31048:355::-;31250:2;31232:21;;;31289:2;31269:18;;;31262:30;31328:33;31323:2;31308:18;;31301:61;31394:2;31379:18;;31048:355::o;31408:354::-;31610:2;31592:21;;;31649:2;31629:18;;;31622:30;31688:32;31683:2;31668:18;;31661:60;31753:2;31738:18;;31408:354::o;34472:353::-;34674:2;34656:21;;;34713:2;34693:18;;;34686:30;34752:31;34747:2;34732:18;;34725:59;34816:2;34801:18;;34472:353::o;35678:406::-;35880:2;35862:21;;;35919:2;35899:18;;;35892:30;35958:34;35953:2;35938:18;;35931:62;-1:-1:-1;;;36024:2:72;36009:18;;36002:40;36074:3;36059:19;;35678:406::o;38152:344::-;38354:2;38336:21;;;38393:2;38373:18;;;38366:30;-1:-1:-1;;;38427:2:72;38412:18;;38405:50;38487:2;38472:18;;38152:344::o;38831:401::-;39033:2;39015:21;;;39072:2;39052:18;;;39045:30;39111:34;39106:2;39091:18;;39084:62;-1:-1:-1;;;39177:2:72;39162:18;;39155:35;39222:3;39207:19;;38831:401::o;39588:343::-;39790:2;39772:21;;;39829:2;39809:18;;;39802:30;-1:-1:-1;;;39863:2:72;39848:18;;39841:49;39922:2;39907:18;;39588:343::o;40345:979::-;40485:4;40527:3;40516:9;40512:19;40504:27;;40567:1;40563;40558:3;40554:11;40550:19;40615:2;40606:6;40600:13;40596:22;40585:9;40578:41;40687:2;40679:4;40671:6;40667:17;40661:24;40657:33;40650:4;40639:9;40635:20;40628:63;40759:2;40751:4;40743:6;40739:17;40733:24;40729:33;40722:4;40711:9;40707:20;40700:63;;40819:4;40811:6;40807:17;40801:24;40794:4;40783:9;40779:20;40772:54;40882:4;40874:6;40870:17;40864:24;40857:4;40846:9;40842:20;40835:54;40936:4;40928:6;40924:17;40918:24;40951:67;41012:4;41001:9;40997:20;40983:12;40951:67;:::i;:::-;;41067:4;41059:6;41055:17;41049:24;41082:71;41145:6;41134:9;41130:22;41114:14;41082:71;:::i;:::-;;41202:4;41194:6;41190:17;41184:24;41217:46;41248:14;41217:46;:::i;:::-;41303:14;41294:6;41283:9;41279:22;41272:46;;40345:979;;;;:::o;41511:128::-;41551:3;41582:1;41578:6;41575:1;41572:13;41569:39;;;41588:18;;:::i;:::-;-1:-1:-1;41624:9:72;;41511:128::o;41644:217::-;41684:1;41710;41700:132;;41754:10;41749:3;41745:20;41742:1;41735:31;41789:4;41786:1;41779:15;41817:4;41814:1;41807:15;41700:132;-1:-1:-1;41846:9:72;;41644:217::o;41866:168::-;41906:7;41972:1;41968;41964:6;41960:14;41957:1;41954:21;41949:1;41942:9;41935:17;41931:45;41928:71;;;41979:18;;:::i;:::-;-1:-1:-1;42019:9:72;;41866:168::o;42039:125::-;42079:4;42107:1;42104;42101:8;42098:34;;;42112:18;;:::i;:::-;-1:-1:-1;42149:9:72;;42039:125::o;42169:258::-;42241:1;42251:113;42265:6;42262:1;42259:13;42251:113;;;42341:11;;;42335:18;42322:11;;;42315:39;42287:2;42280:10;42251:113;;;42382:6;42379:1;42376:13;42373:48;;;-1:-1:-1;;42417:1:72;42399:16;;42392:27;42169:258::o;42432:135::-;42471:3;-1:-1:-1;;42492:17:72;;42489:43;;;42512:18;;:::i;:::-;-1:-1:-1;42559:1:72;42548:13;;42432:135::o;42572:127::-;42633:10;42628:3;42624:20;42621:1;42614:31;42664:4;42661:1;42654:15;42688:4;42685:1;42678:15;42704:127;42765:10;42760:3;42756:20;42753:1;42746:31;42796:4;42793:1;42786:15;42820:4;42817:1;42810:15;42836:127;42897:10;42892:3;42888:20;42885:1;42878:31;42928:4;42925:1;42918:15;42952:4;42949:1;42942:15;42968:127;43029:10;43024:3;43020:20;43017:1;43010:31;43060:4;43057:1;43050:15;43084:4;43081:1;43074:15;43100:113;43181:1;43174:5;43171:12;43161:46;;43187:18;;:::i;43218:131::-;-1:-1:-1;;;;;43293:31:72;;43283:42;;43273:70;;43339:1;43336;43329:12;43354:118;43440:5;43433:13;43426:21;43419:5;43416:32;43406:60;;43462:1;43459;43452:12",
  "source": "// SPDX-License-Identifier: Apache-2.0\n/*\n * This code has not been reviewed.\n * Do not use or deploy this code before reviewing it personally first.\n */\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nimport \"./ERC1820Client.sol\";\nimport \"../interface/ERC1820Implementer.sol\";\n\nimport \"../extensions/userExtensions/IERC1400TokensRecipient.sol\";\nimport \"../interface/IERC20HoldableToken.sol\";\nimport \"../interface/IHoldableERC1400TokenExtension.sol\";\n\nimport \"../IERC1400.sol\";\n\n\n/**\n * @title Swaps\n * @dev Delivery-Vs-Payment contract for investor-to-investor token trades.\n * @dev Intended usage:\n * The purpose of the contract is to allow secure token transfers/exchanges between 2 stakeholders (called holder1 and holder2).\n * From now on, an operation in the Swaps smart contract (transfer/exchange) is called a trade.\n * Depending on the type of trade, one/multiple token transfers will be executed.\n *\n * The simplified workflow is the following:\n * 1) A trade request is created in the Swaps smart contract, it specifies:\n *  - The token holder(s) involved in the trade\n *  - The trade executer (optional)\n *  - An expiration date\n *  - Details on the first token (address, requested amount, standard)\n *  - Details on the second token (address, requested amount, standard)\n *  - Whether the tokens need to be escrowed in the Swaps contract or not\n *  - The current status of the trade (pending / executed / forced / cancelled)\n * 2) The trade is accepted by both token holders\n * 3) [OPTIONAL] The trade is approved by token controllers (only if requested by tokens controllers)\n * 4) The trade is executed (either by the executer in case the executer is specified, or by anyone)\n *\n * STANDARD-AGNOSTIC:\n * The Swaps smart contract is standard-agnostic, it supports ETH, ERC20, ERC721, ERC1400.\n * The advantage of using an ERC1400 token is to leverages its hook property, thus requiring ONE single\n * transaction (operatorTransferByPartition()) to send tokens to the Swaps smart contract instead of TWO\n * with the ERC20 token standard (approve() + transferFrom()).\n *\n * OFF-CHAIN PAYMENT:\n * The contract can be used as escrow contract while waiting for an off-chain payment.\n * Once payment is received off-chain, the token sender realeases the tokens escrowed in\n * the Swaps contract to deliver them to the recipient.\n *\n * ESCROW VS SWAP MODE:\n * In case escrow mode is selected, tokens need to be escrowed in Swaps smart contract\n * before the trade can occur.\n * In case swap mode is selected, tokens are not escrowed in the Swaps. Instead, the Swaps\n * contract is only allowed to transfer tokens ON BEHALF of their owners. When trade is\n * executed, an atomic token swap occurs.\n *\n * EXPIRATION DATE:\n * The trade can be cancelled by both parties in case expiration date is passed.\n *\n * CLAIMS:\n * The executer has the ability to force or cancel the trade.\n * In case of disagreement/missing payment, both parties can contact the \"executer\"\n * of the trade to deposit a claim and solve the issue.\n *\n * MARKETPLACE:\n * The contract can be used as a token marketplace. Indeed, when trades are created\n * without specifying the recipient address, anyone can purchase them by sending\n * the requested payment in exchange.\n *\n * PRICE ORACLES:\n * When price oracles are defined, those can define the price at which trades need to be executed.\n * This feature is particularly useful for assets with NAV (net asset value).\n *\n */\ncontract Swaps is Ownable, ERC1820Client, IERC1400TokensRecipient, ERC1820Implementer {\n  string constant internal DELIVERY_VS_PAYMENT = \"DeliveryVsPayment\";\n  string constant internal ERC1400_TOKENS_RECIPIENT = \"ERC1400TokensRecipient\";\n\n  uint256 constant internal SECONDS_IN_MONTH = 86400 * 30;\n  uint256 constant internal SECONDS_IN_WEEK = 86400 * 7;\n\n  bytes32 constant internal TRADE_PROPOSAL_FLAG = 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc;\n  bytes32 constant internal TRADE_ACCEPTANCE_FLAG = 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd;\n\n  bytes32 constant internal BYPASS_ACTION_FLAG = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\n\n  bytes32 constant internal ALL_PARTITIONS = 0x0000000000000000000000000000000000000000000000000000000000000000;\n\n  enum Standard {OffChain, ETH, ERC20, ERC721, ERC1400}\n\n  enum State {Undefined, Pending, Executed, Forced, Cancelled}\n\n  enum TradeType {Allowance, Hold, Escrow}\n\n  enum Holder {Holder1, Holder2}\n    \n  string internal constant ERC1400_TOKENS_VALIDATOR = \"ERC1400TokensValidator\";\n\n  /**\n  @dev Include token events so they can be parsed by Ethereum clients from the settlement transactions.\n    */\n  // Holdable\n  event ExecutedHold(\n      address indexed token,\n      bytes32 indexed holdId,\n      bytes32 lockPreimage,\n      address recipient\n  );\n  // ERC20\n  event Transfer(address indexed from, address indexed to, uint256 tokens);\n  // ERC1400\n  event TransferByPartition(\n      bytes32 indexed fromPartition,\n      address operator,\n      address indexed from,\n      address indexed to,\n      uint256 value,\n      bytes data,\n      bytes operatorData\n  );\n  event CreateNote(\n      address indexed owner,\n      bytes32 indexed noteHash,\n      bytes metadata\n  );\n  event DestroyNote(address indexed owner, bytes32 indexed noteHash);\n\n  struct UserTradeData {\n    address tokenAddress;\n    uint256 tokenValue;\n    bytes32 tokenId;\n    Standard tokenStandard;\n    bool accepted;\n    bool approved;\n    TradeType tradeType;\n  }\n  \n  /**\n   * @dev Input data for the requestTrade function\n   * @param holder1 Address of the first token holder.\n   * @param holder2 Address of the second token holder.\n   * @param executer Executer of the trade.\n   * @param expirationDate Expiration date of the trade.\n   * @param tokenAddress1 Address of the first token smart contract.\n   * @param tokenValue1 Amount of tokens to send for the first token.\n   * @param tokenId1 ERC721ID/holdId/partition of the first token.\n   * @param tokenStandard1 Standard of the first token (ETH | ERC20 | ERC721 | ERC1400).\n   * @param tokenAddress2 Address of the second token smart contract.\n   * @param tokenValue2 Amount of tokens to send for the second token.\n   * @param tokenId2 ERC721ID/holdId/partition of the second token.\n   * @param tokenStandard2 Standard of the second token (ETH | ERC20 | ERC721 | ERC1400).\n   * @param tradeType Indicates whether or not tokens shall be escrowed in the Swaps contract before the trade.\n   */\n  struct TradeRequestInput {\n    address holder1;\n    address holder2;\n    address executer; // Set to address(0) if no executer is required for the trade\n    uint256 expirationDate;\n    address tokenAddress1;\n    uint256 tokenValue1;\n    bytes32 tokenId1;\n    Standard tokenStandard1;\n    address tokenAddress2; // Set to address(0) if no token is expected in return (for example in case of an off-chain payment)\n    uint256 tokenValue2;\n    bytes32 tokenId2;\n    Standard tokenStandard2;\n    TradeType tradeType1;\n    TradeType tradeType2;\n    uint256 settlementDate;\n  }\n\n  struct Trade {\n    address holder1;\n    address holder2;\n    address executer;\n    uint256 expirationDate;\n    uint256 settlementDate;\n    UserTradeData userTradeData1;\n    UserTradeData userTradeData2;\n    State state;\n  }\n\n  // Index of most recent trade request.\n  uint256 internal _index;\n\n  // Mapping from index to trade requests.\n  mapping(uint256 => Trade) internal _trades;\n\n  // Mapping from token to price oracles.\n  mapping(address => address[]) internal _priceOracles;\n\n  // Mapping from (token, operator) to price oracle status.\n  mapping(address => mapping(address => bool)) internal _isPriceOracle;\n\n  // Mapping from (token1, token2) to price ownership.\n  mapping(address => mapping(address => bool)) internal _priceOwnership;\n\n  // Mapping from (token1, token2, tokenId1, tokenId2) to price.\n  mapping(address => mapping (address => mapping (bytes32 =>  mapping (bytes32 => uint256)))) internal _tokenUnitPricesByPartition;\n\n  // Indicate whether Swaps smart contract is owned or not (for instance by an exchange, etc.).\n  bool internal _ownedContract;\n\n  // Array of trade execcuters.\n  address[] internal _tradeExecuters;\n\n  // Mapping from operator to trade executer status.\n  mapping(address => bool) internal _isTradeExecuter;\n\n  // Mapping from token to token controllers.\n  mapping(address => address[]) internal _tokenControllers;\n\n  // Mapping from (token, operator) to token controller status.\n  mapping(address => mapping(address => bool)) internal _isTokenController;\n\n  // Mapping from token to variable price start date.\n  mapping(address => uint256) internal _variablePriceStartDate;\n\n  /**\n   * @dev Modifier to verify if sender is a token controller.\n   */\n  modifier onlyTokenController(address tokenAddress) {\n    require(\n      msg.sender == Ownable(tokenAddress).owner() ||\n      _isTokenController[tokenAddress][msg.sender],\n      \"Sender is not a token controller.\"\n    );\n    _;\n  }\n\n  /**\n   * @dev Modifier to verify if sender is a price oracle.\n   */\n  modifier onlyPriceOracle(address tokenAddress) {\n    require(_checkPriceOracle(tokenAddress, msg.sender), \"Sender is not a price oracle.\");\n    _;\n  }\n\n  /**\n   * [Swaps CONSTRUCTOR]\n   * @dev Initialize Swaps + register\n   * the contract implementation in ERC1820Registry.\n   */\n  constructor(bool owned) {\n    ERC1820Implementer._setInterface(DELIVERY_VS_PAYMENT);\n    ERC1820Implementer._setInterface(ERC1400_TOKENS_RECIPIENT);\n    setInterfaceImplementation(ERC1400_TOKENS_RECIPIENT, address(this));\n\n    _ownedContract = owned;\n\n    if(_ownedContract) {\n      address[] memory initialTradeExecuters = new address[] (1);\n      initialTradeExecuters[0] = msg.sender;\n      _setTradeExecuters(initialTradeExecuters);\n    }\n  }\n\n  /**\n   * [ERC1400TokensRecipient INTERFACE (1/2)]\n   * @dev Indicate whether or not the Swaps contract can receive the tokens or not. [USED FOR ERC1400 TOKENS ONLY]\n   * @param data Information attached to the token transfer.\n   * @param operatorData Information attached to the Swaps transfer, by the operator.\n   * @return 'true' if the Swaps contract can receive the tokens, 'false' if not.\n   */\n  function canReceive(bytes calldata, bytes32, address, address, address, uint, bytes calldata  data, bytes calldata operatorData) external override pure returns(bool) {\n    return(_canReceive(data, operatorData));\n  }\n\n  /**\n   * [ERC1400TokensRecipient INTERFACE (2/2)]\n   * @dev Hook function executed when tokens are sent to the Swaps contract. [USED FOR ERC1400 TOKENS ONLY]\n   * @param partition Name of the partition.\n   * @param from Token holder.\n   * @param to Token recipient.\n   * @param value Number of tokens to transfer.\n   * @param data Information attached to the token transfer.\n   * @param operatorData Information attached to the Swaps transfer, by the operator.\n   */\n  function tokensReceived(bytes calldata, bytes32 partition, address, address from, address to, uint value, bytes memory data, bytes calldata operatorData) external override {\n    require(interfaceAddr(msg.sender, \"ERC1400Token\") == msg.sender, \"55\"); // funds locked (lockup period)\n\n    require(to == address(this), \"50\"); // 0x50\ttransfer failure\n    require(_canReceive(data, operatorData), \"57\"); // 0x57\tinvalid receiver\n\n    bytes32 flag = _getTradeFlag(data);\n    if(flag == TRADE_PROPOSAL_FLAG) {\n      address recipient;\n      address executor;\n      uint256 expirationDate;\n      uint256 settlementDate;\n      assembly {\n        recipient:= mload(add(data, 64))\n        executor:= mload(add(data, 96))\n        expirationDate:= mload(add(data, 128))\n        settlementDate:= mload(add(data, 160))\n      }\n      // Token data: < 1: address > < 2: amount > < 3: id/partition > < 4: standard > < 5: accepted > < 6: approved >\n      UserTradeData memory _tradeData1 = UserTradeData(msg.sender, value, partition, Standard.ERC1400, true, false, TradeType.Escrow);\n      UserTradeData memory _tokenData2 = _getTradeTokenData(data);\n\n      _requestTrade(\n        from,\n        recipient,\n        executor,\n        expirationDate,\n        settlementDate,\n        _tradeData1,\n        _tokenData2\n      );\n\n    } else if (flag == TRADE_ACCEPTANCE_FLAG) {\n      uint256 index;\n      bytes32 preimage = bytes32(0);\n      assembly {\n        index:= mload(add(data, 64))\n      }\n      if (data.length == 96) {\n        //This field is optional\n        //If the data's length does not include the preimage\n        //then return an empty preimage\n        //canReceive accepts both data lengths\n        assembly {\n          preimage:= mload(add(data, 96))\n        }\n      }\n      Trade storage trade = _trades[index];\n\n      UserTradeData memory selectedUserTradeData = (from == trade.holder1) ? trade.userTradeData1 : trade.userTradeData2;\n      require(msg.sender == selectedUserTradeData.tokenAddress, \"Wrong token sent\");\n      require(partition == selectedUserTradeData.tokenId, \"Tokens of the wrong partition sent\");\n      require(Standard.ERC1400 == selectedUserTradeData.tokenStandard, \"Tokens of the wrong standard sent\");\n\n      _acceptTrade(index, from, 0, value, preimage);         \n    }\n  }\n\n  /**\n   * @dev Create a new trade request in the Swaps smart contract.\n   * @param inputData The input for this function\n   */\n  function requestTrade(TradeRequestInput calldata inputData, bytes32 preimage)\n    external\n    payable\n  {\n    _requestTrade(\n      inputData.holder1,\n      inputData.holder2,\n      inputData.executer,\n      inputData.expirationDate,\n      inputData.settlementDate,\n      UserTradeData(inputData.tokenAddress1, inputData.tokenValue1, inputData.tokenId1, inputData.tokenStandard1, false, false, inputData.tradeType1),\n      UserTradeData(inputData.tokenAddress2, inputData.tokenValue2, inputData.tokenId2, inputData.tokenStandard2, false, false, inputData.tradeType2)\n    );\n\n    if(msg.sender == inputData.holder1 || msg.sender == inputData.holder2) {\n      _acceptTrade(_index, msg.sender, msg.value, 0, preimage);\n    }\n  }\n\n  /**\n   * @dev Create a new trade request in the Swaps smart contract.\n   * @param holder1 Address of the first token holder.\n   * @param holder2 Address of the second token holder.\n   * @param executer Executer of the trade.\n   * @param expirationDate Expiration date of the trade.\n   * @param userTradeData1 Encoded pack of variables for token1 (address, amount, id/partition, standard, accepted, approved).\n   * @param userTradeData2 Encoded pack of variables for token2 (address, amount, id/partition, standard, accepted, approved).\n   */\n  function _requestTrade(\n    address holder1,\n    address holder2,\n    address executer, // Set to address(0) if no executer is required for the trade\n    uint256 expirationDate,\n    uint256 settlementDate,\n    UserTradeData memory userTradeData1,\n    UserTradeData memory userTradeData2\n  ) \n    internal\n  {\n    if(userTradeData1.tokenStandard == Standard.ETH) {\n      require(userTradeData1.tradeType == TradeType.Escrow, \"Ether trades need to be of type Escrow\");\n    }\n\n    if(userTradeData2.tokenStandard == Standard.ETH) {\n      require(userTradeData2.tradeType == TradeType.Escrow, \"Ether trades need to be of type Escrow\");\n    }\n\n    if (userTradeData1.tradeType == TradeType.Hold) {\n      require(userTradeData1.tokenStandard == Standard.ERC20 || userTradeData1.tokenStandard == Standard.ERC1400, \"Invalid token standard for hold trade type\");\n      require(userTradeData1.tokenId != bytes32(0), \"No holdId specified\");\n    }\n    \n    if (userTradeData2.tradeType == TradeType.Hold) {\n      require(userTradeData2.tokenStandard == Standard.ERC20 || userTradeData2.tokenStandard == Standard.ERC1400, \"Invalid token standard for hold trade type\");\n      require(userTradeData2.tokenId != bytes32(0), \"No holdId specified\");\n    }\n\n    if(_ownedContract) {\n      require(_isTradeExecuter[executer], \"Trade executer needs to belong to the list of allowed trade executers\");\n    }\n\n    require(holder1 != address(0), \"A trade can not be created with the zero address\");\n    \n    _index++;\n\n    uint256 _expirationDate = (expirationDate > block.timestamp) ? expirationDate : (block.timestamp + SECONDS_IN_MONTH);\n\n    _trades[_index] = Trade({\n      holder1: holder1,\n      holder2: holder2,\n      executer: executer,\n      expirationDate: _expirationDate,\n      settlementDate: settlementDate,\n      userTradeData1: userTradeData1,\n      userTradeData2: userTradeData2,\n      state: State.Pending\n    });\n  }\n\n  /**\n   * @dev Accept a given trade (+ potentially escrow tokens).\n   * @param index Index of the trade to be accepted.\n   */\n  function acceptTrade(uint256 index, bytes32 preimage) external payable {\n    _acceptTrade(index, msg.sender, msg.value, 0, preimage);\n  }\n\n  /**\n   * @dev Accept a given trade (+ potentially escrow tokens).\n   * @param index Index of the trade to be accepted.\n   * @param sender Message sender\n   * @param ethValue Value sent (only used for ETH)\n   * @param erc1400TokenValue Value sent (only used for ERC1400)\n   */\n  function _acceptTrade(uint256 index, address sender, uint256 ethValue, uint256 erc1400TokenValue, bytes32 preimage) internal {\n    Trade storage trade = _trades[index];\n    require(trade.state == State.Pending, \"Trade is not pending\");\n\n    address recipientHolder;\n    if(sender == trade.holder1) {\n      recipientHolder = trade.holder2;\n    } else if(sender == trade.holder2) {\n      recipientHolder = trade.holder1;\n    } else if(trade.holder2 == address(0)) {\n      trade.holder2 = sender;\n      recipientHolder = trade.holder1;\n    } else {\n      revert(\"Only registered holders can accept a trade\");\n    }\n\n    UserTradeData memory selectedUserTradeData = (sender == trade.holder1) ? trade.userTradeData1 : trade.userTradeData2;\n\n    require(!selectedUserTradeData.accepted, \"Trade already accepted by the holder\");\n\n    if(selectedUserTradeData.tradeType == TradeType.Escrow) {\n      if(selectedUserTradeData.tokenStandard == Standard.ETH) {\n        require(ethValue == selectedUserTradeData.tokenValue, \"Amount of ETH is not correct\");\n      } else if(selectedUserTradeData.tokenStandard == Standard.ERC20) {        \n        IERC20(selectedUserTradeData.tokenAddress).transferFrom(sender, address(this), selectedUserTradeData.tokenValue);\n      } else if(selectedUserTradeData.tokenStandard == Standard.ERC721) {\n        IERC721(selectedUserTradeData.tokenAddress).transferFrom(sender, address(this), uint256(selectedUserTradeData.tokenId));\n      } else if((selectedUserTradeData.tokenStandard == Standard.ERC1400) && erc1400TokenValue == 0){\n        IERC1400(selectedUserTradeData.tokenAddress).operatorTransferByPartition(selectedUserTradeData.tokenId, sender, address(this), selectedUserTradeData.tokenValue, abi.encodePacked(BYPASS_ACTION_FLAG), abi.encodePacked(BYPASS_ACTION_FLAG));\n      } else if((selectedUserTradeData.tokenStandard == Standard.ERC1400) && erc1400TokenValue != 0){\n        require(erc1400TokenValue == selectedUserTradeData.tokenValue, \"Amount of ERC1400 tokens is not correct\");\n      }\n    } else if (selectedUserTradeData.tradeType == TradeType.Hold) {\n        require(_holdExists(sender, recipientHolder, selectedUserTradeData), \"Hold needs to be provided in token smart contract first\");\n    } else { // trade.tradeType == TradeType.Allowance\n        require(_allowanceIsProvided(sender, selectedUserTradeData), \"Allowance needs to be provided in token smart contract first\");\n    }\n\n    if(sender == trade.holder1) {\n      trade.userTradeData1.accepted = true;\n    } else {\n      trade.userTradeData2.accepted = true;\n    }\n\n    \n    bool settlementDatePassed = block.timestamp >= trade.settlementDate;\n    bool tradeApproved = getTradeApprovalStatus(index);\n    //Execute both holds of a trade if the following conditions are met\n    //* There is no executer set. Only the executer should execute transactions if one is defined\n    //* Both trade types are holds\n    //* The trade is approved. Token controllers must pre-approve this trade. This is also true if the token has no token controllers\n    //* If both holds exist according to _holdExists\n    //* If the current block timestamp is after the settlement date\n    if (settlementDatePassed && trade.executer == address(0) && trade.userTradeData1.tradeType == TradeType.Hold && trade.userTradeData2.tradeType == TradeType.Hold && tradeApproved) {\n      //we know selectedUserTradeData has a hold that exists, so check the other one\n      UserTradeData memory otherUserTradeData = (sender == trade.holder1) ? trade.userTradeData2 : trade.userTradeData1;\n      if (_holdExists(recipientHolder, sender, otherUserTradeData)) {\n        //If both holds exist, then mark both sides of trade as accepted\n        //Next if will execute trade\n        trade.userTradeData1.accepted = true;\n        trade.userTradeData2.accepted = true;\n      }\n    }\n\n    if(\n      trade.executer == address(0) && getTradeAcceptanceStatus(index) && tradeApproved && settlementDatePassed) {\n      _executeTrade(index, preimage);\n    }\n  }\n  /**\n   * @dev Verify if a trade has been accepted by the token holders.\n   *\n   * The trade needs to be accepted by both parties (token holders) before it gets executed.\n   *\n   * @param index Index of the trade to be accepted.\n   */\n  function getTradeAcceptanceStatus(uint256 index) public view returns(bool) {\n    Trade storage trade = _trades[index];\n\n    if(trade.state == State.Pending) {\n      if(trade.userTradeData1.tradeType == TradeType.Allowance && !_allowanceIsProvided(trade.holder1, trade.userTradeData1)) {\n        return false;\n      }\n      if(trade.userTradeData2.tradeType == TradeType.Allowance && !_allowanceIsProvided(trade.holder2, trade.userTradeData2)) {\n        return false;\n      }\n    }\n\n    return(trade.userTradeData1.accepted && trade.userTradeData2.accepted);\n  }\n\n  /**\n   * @dev Verify if a token allowance has been provided in token smart contract.\n   *\n   * @param sender Address of the sender.\n   * @param userTradeData Encoded pack of variables for the token (address, amount, id/partition, standard, accepted, approved).\n   */\n  function _allowanceIsProvided(address sender, UserTradeData memory userTradeData) internal view returns(bool) {\n    address tokenAddress = userTradeData.tokenAddress;\n    uint256 tokenValue = userTradeData.tokenValue;\n    bytes32 tokenId = userTradeData.tokenId;\n    Standard tokenStandard = userTradeData.tokenStandard;\n\n    if(tokenStandard == Standard.ERC20) {        \n      return(IERC20(tokenAddress).allowance(sender, address(this)) >= tokenValue);\n    } else if(tokenStandard == Standard.ERC721) {\n      return(IERC721(tokenAddress).getApproved(uint256(tokenId)) == address(this));\n    } else if(tokenStandard == Standard.ERC1400){\n      return(IERC1400(tokenAddress).allowanceByPartition(tokenId, sender, address(this)) >= tokenValue);\n    }\n\n    return true;\n  }\n\n  function approveTrade(uint256 index, bool approved) external {\n    approveTradeWithPreimage(index, approved, 0);\n  }\n\n  /**\n   * @dev Approve a trade (if the tokens involved in the trade are controlled)\n   *\n   * This function can only be called by a token controller of one of the tokens involved in the trade.\n   *\n   * Indeed, when a token smart contract is controlled by an owner, the owner can decide to open the\n   * secondary market by:\n   *  - Allowlisting the Swaps smart contract\n   *  - Setting \"token controllers\" in the Swaps smart contract, in order to approve all the trades made with his token\n   *\n   * @param index Index of the trade to be executed.\n   * @param approved 'true' if trade is approved, 'false' if not.\n   */\n  function approveTradeWithPreimage(uint256 index, bool approved, bytes32 preimage) public {\n    Trade storage trade = _trades[index];\n    require(trade.state == State.Pending, \"Trade is not pending\");\n\n    require(_isTokenController[trade.userTradeData1.tokenAddress][msg.sender] || _isTokenController[trade.userTradeData2.tokenAddress][msg.sender], \"Only token controllers of involved tokens can approve a trade\");\n\n    if(_isTokenController[trade.userTradeData1.tokenAddress][msg.sender]) {\n      trade.userTradeData1.approved = approved;\n    }\n    \n    if(_isTokenController[trade.userTradeData2.tokenAddress][msg.sender]) {\n      trade.userTradeData2.approved = approved;\n    }\n\n    if(trade.executer == address(0) && getTradeAcceptanceStatus(index) && getTradeApprovalStatus(index)) {\n      _executeTrade(index, preimage);\n    }\n  }\n\n  /**\n   * @dev Verify if a trade has been approved by the token controllers.\n   *\n   * In case a given token has token controllers, those need to validate the trade before it gets executed.\n   *\n   * @param index Index of the trade to be approved.\n   */\n  function getTradeApprovalStatus(uint256 index) public view returns(bool) {\n    Trade storage trade = _trades[index];\n\n    if(_tokenControllers[trade.userTradeData1.tokenAddress].length != 0 && !trade.userTradeData1.approved) {\n      return false;\n    }\n\n    if(_tokenControllers[trade.userTradeData2.tokenAddress].length != 0 && !trade.userTradeData2.approved) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function executeTrade(uint256 index) external {\n    executeTradeWithPreimage(index, 0);\n  }\n\n  /**\n   * @dev Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required).\n   *\n   * This function can only be called by the executer specified at trade creation.\n   * If no executer is specified, the trade can be launched by anyone.\n   *\n   * @param index Index of the trade to be executed.\n   */\n  function executeTradeWithPreimage(uint256 index, bytes32 preimage) public {\n    Trade storage trade = _trades[index];\n    require(trade.state == State.Pending, \"Trade is not pending\");\n\n    if(trade.executer != address(0)) {\n      require(msg.sender == trade.executer, \"Trade can only be executed by executer defined at trade creation\");\n    }\n\n    require(block.timestamp >= trade.settlementDate, \"Trade can only be executed on or after settlement date\");\n\n    require(getTradeAcceptanceStatus(index), \"Trade has not been accepted by all token holders yet\");\n    \n    require(getTradeApprovalStatus(index), \"Trade has not been approved by all token controllers yet\");\n\n    _executeTrade(index, preimage);\n  }\n\n  /**\n   * @dev Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required).\n   * @param index Index of the trade to be executed.\n   */\n  function _executeTrade(uint256 index, bytes32 preimage) internal {\n    Trade storage trade = _trades[index];\n\n    uint256 price = getPrice(index);\n\n    uint256 tokenValue1 = trade.userTradeData1.tokenValue;\n    uint256 tokenValue2 = trade.userTradeData2.tokenValue;\n\n    if(price == tokenValue2) {\n      _transferUsersTokens(index, Holder.Holder1, tokenValue1, false, preimage);\n      _transferUsersTokens(index, Holder.Holder2, tokenValue2, false, preimage);\n    } else {\n      //Holds cannot move a specific amount of tokens\n      //So require that if the price is less than the value\n      //that the trade is not a hold trade\n      require(price <= tokenValue2 && trade.userTradeData2.tradeType != TradeType.Hold, \"Price is higher than amount escrowed/authorized\");\n      _transferUsersTokens(index, Holder.Holder1, tokenValue1, false, preimage);\n      _transferUsersTokens(index, Holder.Holder2, price, false, preimage);\n      if(trade.userTradeData2.tradeType == TradeType.Escrow) {\n        _transferUsersTokens(index, Holder.Holder2, tokenValue2 - price, true, preimage);\n      }\n    }\n    trade.state = State.Executed;\n\n  }\n\n  function forceTrade(uint256 index) external {\n    forceTradeWithPreimage(index, 0);\n  }\n\n  /**\n   * @dev Force a trade execution in the Swaps contract by transferring tokens back to their target recipients.\n   * @param index Index of the trade to be forced.\n   */\n  function forceTradeWithPreimage(uint256 index, bytes32 preimage) public {\n    Trade storage trade = _trades[index];\n    require(trade.state == State.Pending, \"Trade is not pending\");\n    \n    address tokenAddress1 = trade.userTradeData1.tokenAddress;\n    uint256 tokenValue1 = trade.userTradeData1.tokenValue;\n    bool accepted1 = trade.userTradeData1.accepted;\n\n    address tokenAddress2 = trade.userTradeData2.tokenAddress;\n    uint256 tokenValue2 = trade.userTradeData2.tokenValue;\n    bool accepted2 = trade.userTradeData2.accepted;\n\n    require(!(accepted1 && accepted2), \"executeTrade can be called\");\n    require(_tokenControllers[tokenAddress1].length == 0 && _tokenControllers[tokenAddress2].length == 0, \"Trade can not be forced if tokens have controllers\");\n\n    if(trade.executer != address(0)) {\n      require(msg.sender == trade.executer, \"Sender is not allowed to force trade (0)\");\n    } else if(accepted1) {\n      require(msg.sender == trade.holder1, \"Sender is not allowed to force trade (1)\");\n    } else if(accepted2) {\n      require(msg.sender == trade.holder2, \"Sender is not allowed to force trade (2)\");\n    } else {\n      revert(\"Trade can't be forced as tokens are not available so far\");\n    }\n\n    if(accepted1) {\n      _transferUsersTokens(index, Holder.Holder1, tokenValue1, false, preimage);\n    }\n\n    if(accepted2) {\n      _transferUsersTokens(index, Holder.Holder2, tokenValue2, false, preimage);\n    }\n\n    trade.state = State.Forced;\n  }\n\n  /**\n   * @dev Cancel a trade execution in the Swaps contract by transferring tokens back to their initial owners.\n   * @param index Index of the trade to be cancelled.\n   */\n  function cancelTrade(uint256 index) external {\n    Trade storage trade = _trades[index];\n    require(trade.state == State.Pending, \"Trade is not pending\");\n\n    uint256 tokenValue1 = trade.userTradeData1.tokenValue;\n    bool accepted1 = trade.userTradeData1.accepted;\n\n    uint256 tokenValue2 = trade.userTradeData2.tokenValue;\n    bool accepted2 = trade.userTradeData2.accepted;\n\n    if(accepted1 && accepted2) {\n      require(msg.sender == trade.executer || (block.timestamp >= trade.expirationDate && (msg.sender == trade.holder1 || msg.sender == trade.holder2) ), \"Sender is not allowed to cancel trade (0)\");\n      if(trade.userTradeData1.tradeType == TradeType.Escrow) {\n        _transferUsersTokens(index, Holder.Holder1, tokenValue1, true, bytes32(0));\n      }\n      if(trade.userTradeData2.tradeType == TradeType.Escrow) {\n        _transferUsersTokens(index, Holder.Holder2, tokenValue2, true, bytes32(0));\n      }\n    } else if(accepted1) {\n      require(msg.sender == trade.executer || (block.timestamp >= trade.expirationDate && msg.sender == trade.holder1), \"Sender is not allowed to cancel trade (1)\");\n      if(trade.userTradeData1.tradeType == TradeType.Escrow) {\n        _transferUsersTokens(index, Holder.Holder1, tokenValue1, true, bytes32(0));\n      }\n    } else if(accepted2) {\n      require(msg.sender == trade.executer || (block.timestamp >= trade.expirationDate && msg.sender == trade.holder2), \"Sender is not allowed to cancel trade (2)\");\n      if(trade.userTradeData2.tradeType == TradeType.Escrow) {\n        _transferUsersTokens(index, Holder.Holder2, tokenValue2, true, bytes32(0));\n      }\n    } else {\n      require(msg.sender == trade.executer || msg.sender == trade.holder1 || msg.sender == trade.holder2, \"Sender is not allowed to cancel trade (3)\");\n    }\n\n    trade.state = State.Cancelled;\n  }\n\n  function _transferUsersTokens(uint256 index, Holder holder, uint256 value, bool revertTransfer, bytes32 preimage) internal { \n    Trade storage trade = _trades[index];\n\n    UserTradeData memory senderUserTradeData = (holder == Holder.Holder1) ? trade.userTradeData1 : trade.userTradeData2;\n\n    TradeType tokenTradeType = senderUserTradeData.tradeType;\n\n    if (tokenTradeType == TradeType.Hold) {\n      _executeHoldOnUsersTokens(index, holder, value, revertTransfer, preimage);\n    } else {\n      _executeTransferOnUsersTokens(index, holder, value, revertTransfer);\n    }\n  }\n\n  function _executeHoldOnUsersTokens(uint256 index, Holder holder, uint256, bool, bytes32 preimage) internal { \n    Trade storage trade = _trades[index];\n\n    address sender = (holder == Holder.Holder1) ? trade.holder1 : trade.holder2;\n    address recipient = (holder == Holder.Holder1) ? trade.holder2 : trade.holder1;\n    UserTradeData memory senderUserTradeData = (holder == Holder.Holder1) ? trade.userTradeData1 : trade.userTradeData2;\n\n    require(block.timestamp <= trade.expirationDate, \"Expiration date is past\");\n\n    address tokenAddress = senderUserTradeData.tokenAddress;\n    bytes32 tokenId = senderUserTradeData.tokenId;\n    Standard tokenStandard = senderUserTradeData.tokenStandard;\n\n    require(tokenStandard == Standard.ERC20 || tokenStandard == Standard.ERC1400, \"Token standard must be holdable\");\n\n    require(_holdExists(sender, recipient, senderUserTradeData), \"Hold must exist\");\n\n    _executeHold(tokenAddress, tokenId, tokenStandard, preimage, recipient);\n  }\n\n  /**\n   * @dev Internal function to transfer tokens to their recipient by taking the token standard into account.\n   * @param index Index of the trade the token transfer is execcuted for.\n   * @param holder Sender of the tokens (currently owning the tokens).\n   * @param value Amount of tokens to send.\n   * @param revertTransfer If set to true + trade has been accepted, tokens need to be sent back to their initial owners instead of sent to the target recipient.\n   */\n  function _executeTransferOnUsersTokens(uint256 index, Holder holder, uint256 value, bool revertTransfer) internal {\n    Trade storage trade = _trades[index];\n\n    address sender = (holder == Holder.Holder1) ? trade.holder1 : trade.holder2;\n    address recipient = (holder == Holder.Holder1) ? trade.holder2 : trade.holder1;\n    UserTradeData storage senderUserTradeData = (holder == Holder.Holder1) ? trade.userTradeData1 : trade.userTradeData2;\n\n    address tokenAddress = senderUserTradeData.tokenAddress;\n    bytes32 tokenId = senderUserTradeData.tokenId;\n    Standard tokenStandard = senderUserTradeData.tokenStandard;\n\n    address currentHolder = sender;\n    if(senderUserTradeData.tradeType == TradeType.Escrow) {\n      currentHolder = address(this);\n    }\n\n    if(revertTransfer) {\n      recipient = sender;\n    } else {\n      require(block.timestamp <= trade.expirationDate, \"Expiration date is past\");\n    }\n\n    if(tokenStandard == Standard.ETH) {\n      address payable payableRecipient = payable(recipient);\n      payableRecipient.transfer(value);\n    } else if(tokenStandard == Standard.ERC20) {\n      if(currentHolder == address(this)) {\n        IERC20(tokenAddress).transfer(recipient, value);\n      } else {\n        IERC20(tokenAddress).transferFrom(currentHolder, recipient, value);\n      }\n    } else if(tokenStandard == Standard.ERC721) {\n      IERC721(tokenAddress).transferFrom(currentHolder, recipient, uint256(tokenId));\n    } else if(tokenStandard == Standard.ERC1400) {\n      IERC1400(tokenAddress).operatorTransferByPartition(tokenId, currentHolder, recipient, value, \"\", \"\");\n    }\n\n  }\n\n  function _executeHold(\n    address token,\n    bytes32 tokenHoldId,\n    Standard tokenStandard,\n    bytes32 preimage,\n    address tokenRecipient\n  ) internal {\n    // Token 1\n    if (tokenStandard == Standard.ERC20) {\n      require(token != address(0), \"token can not be a zero address\");\n\n      IERC20HoldableToken(token).executeHold(tokenHoldId, preimage);\n    } else if (tokenStandard == Standard.ERC1400) {\n      require(token != address(0), \"token can not be a zero address\");\n\n      address tokenExtension = interfaceAddr(token, ERC1400_TOKENS_VALIDATOR);\n      require(\n          tokenExtension != address(0),\n          \"token has no holdable token extension\"\n      );\n\n      uint256 holdValue;\n      (,,,,holdValue,,,,) = IHoldableERC1400TokenExtension(tokenExtension).retrieveHoldData(token, tokenHoldId);\n\n      IHoldableERC1400TokenExtension(tokenExtension).executeHold(\n          token,\n          tokenHoldId,\n          holdValue,\n          preimage\n      );\n    } else {\n        revert(\"invalid token standard\");\n    }\n\n    emit ExecutedHold(\n        token,\n        tokenHoldId,\n        preimage,\n        tokenRecipient\n    );\n  }\n\n  function _holdExists(address sender, address recipient, UserTradeData memory userTradeData) internal view returns(bool) {\n    address tokenAddress = userTradeData.tokenAddress;\n    bytes32 holdId = userTradeData.tokenId;\n    Standard tokenStandard = userTradeData.tokenStandard;\n    \n    if(tokenStandard == Standard.ERC1400) {\n      address tokenExtension = interfaceAddr(tokenAddress, ERC1400_TOKENS_VALIDATOR);\n      require(\n          tokenExtension != address(0),\n          \"token has no holdable token extension\"\n      );\n\n      HoldStatusCode holdStatus;\n      address holdSender;\n      address holdRecipient;\n      uint256 holdValue;\n      address notary;\n      bytes32 secretHash;\n      (,holdSender,holdRecipient,notary,holdValue,,secretHash,,holdStatus) = IHoldableERC1400TokenExtension(tokenExtension).retrieveHoldData(tokenAddress, holdId);\n      return holdStatus == HoldStatusCode.Ordered && holdValue == userTradeData.tokenValue && (holdSender == sender || holdSender == address(0)) && holdRecipient == recipient && (secretHash != bytes32(0) || notary == address(this));\n    } else if (tokenStandard == Standard.ERC20) {\n      ERC20HoldData memory data = IERC20HoldableToken(tokenAddress).retrieveHoldData(holdId);\n      return (data.sender == sender || data.sender == address(0)) && data.recipient == recipient && data.amount == userTradeData.tokenValue && data.status == HoldStatusCode.Ordered && (data.secretHash != bytes32(0) || data.notary == address(this));\n    } else {\n      revert(\"Invalid tokenStandard provided\");\n    }\n  }\n\n  /**\n   * @dev Indicate whether or not the Swaps contract can receive the tokens or not.\n   *\n   * By convention, the 32 first bytes of a token transfer to the Swaps smart contract contain a flag.\n   *\n   *  - When tokens are transferred to Swaps contract to propose a new trade. The 'data' field starts with the\n   *  following flag: 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n   *  In this case the data structure is the the following:\n   *  <tradeFlag (32 bytes)><recipient address (32 bytes)><executer address (32 bytes)><expiration date (32 bytes)><requested token data (4 * 32 bytes)>\n   *\n   *  - When tokens are transferred to Swaps contract to accept an existing trade. The 'data' field starts with the\n   *  following flag: 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n   *  In this case the data structure is the the following:\n   *  <tradeFlag (32 bytes)><request index (32 bytes)>\n   *\n   * If the 'data' doesn't start with one of those flags, the Swaps contract won't accept the token transfer.\n   *\n   * @param data Information attached to the Swaps transfer.\n   * @param operatorData Information attached to the Swaps transfer, by the operator.\n   * @return 'true' if the Swaps contract can receive the tokens, 'false' if not.\n   */\n  function _canReceive(bytes memory data, bytes memory operatorData) internal pure returns(bool) {\n    if(operatorData.length == 0) { // The reason for this check is to avoid a certificate gets interpreted as a flag by mistake\n      return false;\n    }\n    \n    bytes32 flag = _getTradeFlag(data);\n    if(data.length == 320 && flag == TRADE_PROPOSAL_FLAG) {\n      return true;\n    } else if ((data.length == 64 || data.length == 96) && flag == TRADE_ACCEPTANCE_FLAG) {\n      return true;\n    } else if (data.length == 32 && flag == BYPASS_ACTION_FLAG) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n    /**\n   * @dev Retrieve the trade flag from the 'data' field.\n   *\n   * By convention, the 32 first bytes of a token transfer to the Swaps smart contract contain a flag.\n   *  - When tokens are transferred to Swaps contract to propose a new trade. The 'data' field starts with the\n   *  following flag: 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n   *  - When tokens are transferred to Swaps contract to accept an existing trade. The 'data' field starts with the\n   *  following flag: 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n   *\n   * @param data Concatenated information about the trade proposal.\n   * @return flag Trade flag.\n   */\n  function _getTradeFlag(bytes memory data) internal pure returns(bytes32 flag) {\n    assembly {\n      flag:= mload(add(data, 32))\n    }\n  }\n\n  /**\n   * By convention, when tokens are transferred to Swaps contract to propose a new trade, the 'data' of a token transfer has the following structure:\n   *  <tradeFlag (32 bytes)><recipient address (32 bytes)><executer address (32 bytes)><expiration date (32 bytes)><requested token data (5 * 32 bytes)>\n   *\n   * The first 32 bytes are the flag 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n   *\n   * The next 32 bytes contain the trade recipient address (or the zero address if the recipient is not chosen).\n   *\n   * The next 32 bytes contain the trade executer address (or zero if the executer is not chosen).\n   *\n   * The next 32 bytes contain the trade expiration date (or zero if the expiration date is not chosen).\n   *\n   * The next 32 bytes contain the trade requested token address (or the zero address if the recipient is not chosen).\n   * The next 32 bytes contain the trade requested token amount.\n   * The next 32 bytes contain the trade requested token id/partition (used when token standard is ERC721 or ERC1400).\n   * The next 32 bytes contain the trade requested token standard (OffChain, ERC20, ERC721, ERC1400, ETH).\n   * The next 32 bytes contain a boolean precising wether trade has been accepted by token holder or not.\n   * The next 32 bytes contain a boolean precising wether trade has been approved by token controller or not.\n   *\n   * Example input for recipient address '0xb5747835141b46f7C472393B31F8F5A57F74A44f', expiration date '1576348418',\n   * trade executer address '0x32F54098916ceb5f57a117dA9554175Fe25611bA', requested token address '0xC6F0410A667a5BEA528d6bc9efBe10270089Bb11',\n   * requested token amount '5', requested token id/partition '37252', and requested token type 'ERC1400', accepted and approved:\n   * 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc000000000000000000000000b5747835141b46f7C472393B31F8F5A57F74A44f\n   * 000000000000000000000000000000000000000000000000000000157634841800000000000000000000000032F54098916ceb5f57a117dA9554175Fe25611bA\n   * 000000000000000000000000C6F0410A667a5BEA528d6bc9efBe10270089Bb110000000000000000000000000000000000000000000000000000000000000005\n   * 000000000000000000000000000000000000000000000000000000000037252000000000000000000000000000000000000000000000000000000000000002\n   * 000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000001\n   */\n\n  /**\n   * @dev Retrieve the tokenData from the 'data' field.\n   *\n   * @param data Concatenated information about the trade proposal.\n   * @return tokenData Trade token data < 1: address > < 2: amount > < 3: id/partition > < 4: standard > < 5: accepted > < 6: approved >.\n   */\n  function _getTradeTokenData(bytes memory data) internal pure returns(UserTradeData memory tokenData) {\n    address tokenAddress;\n    uint256 tokenAmount;\n    bytes32 tokenId;\n    Standard tokenStandard;\n    TradeType tradeType;\n    assembly {\n      tokenAddress:= mload(add(data, 192))\n      tokenAmount:= mload(add(data, 224))\n      tokenId:= mload(add(data, 256))\n      tokenStandard:= mload(add(data, 288))\n      tradeType:= mload(add(data, 320))\n    }\n    tokenData = UserTradeData(\n      tokenAddress,\n      tokenAmount,\n      tokenId,\n      tokenStandard,\n      false,\n      false,\n      tradeType\n    );\n  }\n\n  /**\n   * @dev Retrieve the trade index from the 'data' field.\n   *\n   * By convention, when tokens are transferred to Swaps contract to accept an existing trade, the 'data' of a token transfer has the following structure:\n   *  <tradeFlag (32 bytes)><index uint256 (32 bytes)>\n   *\n   * The first 32 bytes are the flag 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n   *\n   * The next 32 bytes contain the trade index.\n   *\n   * Example input for trade index #2985:\n   * 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd0000000000000000000000000000000000000000000000000000000000002985\n   *\n   * @param data Concatenated information about the trade validation.\n   * @return index Trade index.\n   */\n\n  /**************************** TRADE EXECUTERS *******************************/\n\n  /**\n   * @dev Renounce ownership of the contract.\n   */\n  function renounceOwnership() public override onlyOwner {\n    Ownable.renounceOwnership();\n    _ownedContract = false;\n  }\n\n  /**\n   * @dev Get the list of trade executers as defined by the Swaps contract.\n   * @return List of addresses of all the trade executers.\n   */\n  function tradeExecuters() external view returns (address[] memory) {\n    return _tradeExecuters;\n  }\n\n  /**\n   * @dev Set list of trade executers for the Swaps contract.\n   * @param operators Trade executers addresses.\n   */\n  function setTradeExecuters(address[] calldata operators) external onlyOwner {\n    require(_ownedContract, \"Swaps contract is not owned\");\n    _setTradeExecuters(operators);\n  }\n\n  /**\n   * @dev Set list of trade executers for the Swaps contract.\n   * @param operators Trade executers addresses.\n   */\n  function _setTradeExecuters(address[] memory operators) internal {\n\n    for (uint i = 0; i<_tradeExecuters.length; i++){\n      _isTradeExecuter[_tradeExecuters[i]] = false;\n    }\n    for (uint j = 0; j<operators.length; j++){\n      _isTradeExecuter[operators[j]] = true;\n    }\n    _tradeExecuters = operators;\n  }\n\n  /************************** TOKEN CONTROLLERS *******************************/\n\n  /**\n   * @dev Get the list of token controllers for a given token.\n   * @param tokenAddress Token address.\n   * @return List of addresses of all the token controllers for a given token.\n   */\n  function tokenControllers(address tokenAddress) external view returns (address[] memory) {\n    return _tokenControllers[tokenAddress];\n  }\n\n  /**\n   * @dev Set list of token controllers for a given token.\n   * @param tokenAddress Token address.\n   * @param operators Operators addresses.\n   */\n  function setTokenControllers(address tokenAddress, address[] calldata operators) external onlyTokenController(tokenAddress) {\n    for (uint i = 0; i<_tokenControllers[tokenAddress].length; i++){\n      _isTokenController[tokenAddress][_tokenControllers[tokenAddress][i]] = false;\n    }\n    for (uint j = 0; j<operators.length; j++){\n      _isTokenController[tokenAddress][operators[j]] = true;\n    }\n    _tokenControllers[tokenAddress] = operators;\n  }\n\n  /************************** TOKEN PRICE ORACLES *******************************/\n\n  /**\n   * @dev Get the list of price oracles for a given token.\n   * @param tokenAddress Token address.\n   * @return List of addresses of all the price oracles for a given token.\n   */\n  function priceOracles(address tokenAddress) external view returns (address[] memory) {\n    return _priceOracles[tokenAddress];\n  }\n\n  /**\n   * @dev Set list of price oracles for a given token.\n   * @param tokenAddress Token address.\n   * @param oracles Oracles addresses.\n   */\n  function setPriceOracles(address tokenAddress, address[] calldata oracles) external onlyPriceOracle(tokenAddress) {\n    for (uint i = 0; i<_priceOracles[tokenAddress].length; i++){\n      _isPriceOracle[tokenAddress][_priceOracles[tokenAddress][i]] = false;\n    }\n    for (uint j = 0; j<oracles.length; j++){\n      _isPriceOracle[tokenAddress][oracles[j]] = true;\n    }\n    _priceOracles[tokenAddress] = oracles;\n  }\n\n  /**\n   * @dev Check if address is oracle of a given token.\n   * @param tokenAddress Token address.\n   * @param oracle Oracle address.\n   * @return 'true' if the address is oracle of the given token.\n   */\n  function _checkPriceOracle(address tokenAddress, address oracle) internal view returns(bool) {\n    return(_isPriceOracle[tokenAddress][oracle] || oracle == Ownable(tokenAddress).owner());\n  }\n\n  /****************************** Swaps PRICES *********************************/\n\n  /**\n   * @dev Get price of the token.\n   * @param tokenAddress1 Address of the token to be priced.\n   * @param tokenAddress2 Address of the token to pay for token1.\n   */\n  function getPriceOwnership(address tokenAddress1, address tokenAddress2) external view returns(bool) {\n    return _priceOwnership[tokenAddress1][tokenAddress2];\n  }\n\n  /**\n   * @dev Take ownership for setting the price of a token.\n   * @param tokenAddress1 Address of the token to be priced.\n   * @param tokenAddress2 Address of the token to pay for token1.\n   */\n  function setPriceOwnership(address tokenAddress1, address tokenAddress2, bool priceOwnership) external onlyPriceOracle(tokenAddress1) {\n    _priceOwnership[tokenAddress1][tokenAddress2] = priceOwnership;\n  }\n\n  /**\n   * @dev Get date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\n   * @param tokenAddress Token address.\n   */\n  function variablePriceStartDate(address tokenAddress) external view returns(uint256) {\n    return _variablePriceStartDate[tokenAddress];\n  }\n\n  /**\n   * @dev Set date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\n   * @param tokenAddress Token address.\n   * @param startDate Date after which token price can potentially be set by an oracle (0 if price can not be set by an oracle).\n   */\n  function setVariablePriceStartDate(address tokenAddress, uint256 startDate) external onlyPriceOracle(tokenAddress) {\n    require((startDate > block.timestamp + SECONDS_IN_WEEK) || startDate == 0, \"Start date needs to be set at least a week before\");\n    _variablePriceStartDate[tokenAddress] = startDate;\n  }\n\n  /**\n   * @dev Get price of the token.\n   * @param tokenAddress1 Address of the token to be priced.\n   * @param tokenAddress2 Address of the token to pay for token1.\n   * @param tokenId1 ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).\n   * @param tokenId1 ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions).\n   */\n  function getTokenPrice(address tokenAddress1, address tokenAddress2, bytes32 tokenId1, bytes32 tokenId2) external view returns(uint256) {\n    return _tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][tokenId2];\n  }\n\n  /**\n   * @dev Set price of a token.\n   * @param tokenAddress1 Address of the token to be priced.\n   * @param tokenAddress2 Address of the token to pay for token1.\n   * @param tokenId1 ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).\n   * @param tokenId2 ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions).\n   * @param newPrice New price of the token.\n   */\n  function setTokenPrice(address tokenAddress1, address tokenAddress2, bytes32 tokenId1, bytes32 tokenId2, uint256 newPrice) external {\n    require(!(_priceOwnership[tokenAddress1][tokenAddress2] && _priceOwnership[tokenAddress2][tokenAddress1]), \"Competition on price ownership\");\n\n    if(_priceOwnership[tokenAddress1][tokenAddress2]) {\n      require(_checkPriceOracle(tokenAddress1, msg.sender), \"Price setter is not an oracle for this token (1)\");\n    } else if(_priceOwnership[tokenAddress2][tokenAddress1]) {\n      require(_checkPriceOracle(tokenAddress2, msg.sender), \"Price setter is not an oracle for this token (2)\");\n    } else {\n      revert(\"No price ownership\");\n    }\n\n    _tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][tokenId2] = newPrice;\n  }\n\n  /**\n   * @dev Get amount of token2 to pay to acquire the token1.\n   * @param index Index of the Swaps request.\n   */\n  function getPrice(uint256 index) public view returns(uint256) {\n    Trade storage trade = _trades[index];\n\n    address tokenAddress1 = trade.userTradeData1.tokenAddress;\n    uint256 tokenValue1 = trade.userTradeData1.tokenValue;\n    bytes32 tokenId1 = trade.userTradeData1.tokenId;\n\n    address tokenAddress2 = trade.userTradeData2.tokenAddress;\n    uint256 tokenValue2 = trade.userTradeData2.tokenValue;\n    bytes32 tokenId2 = trade.userTradeData2.tokenId;\n\n    require(!(_priceOwnership[tokenAddress1][tokenAddress2] && _priceOwnership[tokenAddress2][tokenAddress1]), \"Competition on price ownership\");\n\n    if(_variablePriceStartDate[tokenAddress1] == 0 || block.timestamp < _variablePriceStartDate[tokenAddress1]) {\n      return tokenValue2;\n    }\n\n    if(_priceOwnership[tokenAddress1][tokenAddress2] || _priceOwnership[tokenAddress2][tokenAddress1]) {\n\n      if(_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][tokenId2] != 0) {\n        return tokenValue1 * (_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][tokenId2]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][tokenId2][tokenId1] != 0) {\n        return tokenValue1 / (_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][tokenId2][tokenId1]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][ALL_PARTITIONS] != 0) {\n        return tokenValue1 * (_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][tokenId1][ALL_PARTITIONS]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][ALL_PARTITIONS][tokenId1] != 0) {\n        return tokenValue1 / (_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][ALL_PARTITIONS][tokenId1]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][ALL_PARTITIONS][tokenId2] != 0) {\n        return tokenValue1 * (_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][ALL_PARTITIONS][tokenId2]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][tokenId2][ALL_PARTITIONS] != 0) {\n        return tokenValue1 / (_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][tokenId2][ALL_PARTITIONS]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][ALL_PARTITIONS][ALL_PARTITIONS] != 0) {\n        return tokenValue1 * (_tokenUnitPricesByPartition[tokenAddress1][tokenAddress2][ALL_PARTITIONS][ALL_PARTITIONS]);\n\n      } else if(_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][ALL_PARTITIONS][ALL_PARTITIONS] != 0) {\n        return tokenValue1 / (_tokenUnitPricesByPartition[tokenAddress2][tokenAddress1][ALL_PARTITIONS][ALL_PARTITIONS]);\n\n      } else {\n        return tokenValue2;\n      }\n\n    } else {\n      return tokenValue2;\n    }\n  }\n\n  /**************************** VIEW FUNCTIONS *******************************/\n\n  /**\n   * @dev Get the trade.\n   * @param index Index of the trade.\n   * @return Trade.\n   */\n  function getTrade(uint256 index) external view returns(Trade memory) {\n    Trade storage trade = _trades[index];\n    return trade;\n  }\n\n  /**\n   * @dev Get the total number of requests in the Swaps contract.\n   * @return Total number of requests in the Swaps contract.\n   */\n  function getNbTrades() external view returns(uint256) {\n    return _index;\n  }\n }\n",
  "sourcePath": "/Users/sergio/Desktop/TFM/project/contracts/tools/Swaps.sol",
  "ast": {
    "absolutePath": "project:/contracts/tools/Swaps.sol",
    "exportedSymbols": {
      "Context": [
        3361
      ],
      "ERC1820Client": [
        18518
      ],
      "ERC1820Implementer": [
        12351
      ],
      "ERC20HoldData": [
        12432
      ],
      "HoldStatusCode": [
        12361
      ],
      "IERC1400": [
        7982
      ],
      "IERC1400TokensRecipient": [
        12255
      ],
      "IERC1643": [
        12412
      ],
      "IERC165": [
        3600
      ],
      "IERC1820Registry": [
        3690
      ],
      "IERC20": [
        1377
      ],
      "IERC20HoldableToken": [
        12548
      ],
      "IERC721": [
        2435
      ],
      "IHoldableERC1400TokenExtension": [
        12589
      ],
      "Ownable": [
        661
      ],
      "Swaps": [
        25543
      ]
    },
    "id": 25544,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21761,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "154:23:71"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 21762,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25544,
        "sourceUnit": 662,
        "src": "179:52:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 21763,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25544,
        "sourceUnit": 1378,
        "src": "232:56:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 21764,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25544,
        "sourceUnit": 2436,
        "src": "289:58:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tools/ERC1820Client.sol",
        "file": "./ERC1820Client.sol",
        "id": 21765,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25544,
        "sourceUnit": 18519,
        "src": "349:29:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interface/ERC1820Implementer.sol",
        "file": "../interface/ERC1820Implementer.sol",
        "id": 21766,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25544,
        "sourceUnit": 12352,
        "src": "379:45:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/extensions/userExtensions/IERC1400TokensRecipient.sol",
        "file": "../extensions/userExtensions/IERC1400TokensRecipient.sol",
        "id": 21767,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25544,
        "sourceUnit": 12256,
        "src": "426:66:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interface/IERC20HoldableToken.sol",
        "file": "../interface/IERC20HoldableToken.sol",
        "id": 21768,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25544,
        "sourceUnit": 12549,
        "src": "493:46:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interface/IHoldableERC1400TokenExtension.sol",
        "file": "../interface/IHoldableERC1400TokenExtension.sol",
        "id": 21769,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25544,
        "sourceUnit": 12590,
        "src": "540:57:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IERC1400.sol",
        "file": "../IERC1400.sol",
        "id": 21770,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25544,
        "sourceUnit": 7983,
        "src": "599:25:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21772,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 661,
              "src": "3613:7:71"
            },
            "id": 21773,
            "nodeType": "InheritanceSpecifier",
            "src": "3613:7:71"
          },
          {
            "baseName": {
              "id": 21774,
              "name": "ERC1820Client",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18518,
              "src": "3622:13:71"
            },
            "id": 21775,
            "nodeType": "InheritanceSpecifier",
            "src": "3622:13:71"
          },
          {
            "baseName": {
              "id": 21776,
              "name": "IERC1400TokensRecipient",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12255,
              "src": "3637:23:71"
            },
            "id": 21777,
            "nodeType": "InheritanceSpecifier",
            "src": "3637:23:71"
          },
          {
            "baseName": {
              "id": 21778,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12351,
              "src": "3662:18:71"
            },
            "id": 21779,
            "nodeType": "InheritanceSpecifier",
            "src": "3662:18:71"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21771,
          "nodeType": "StructuredDocumentation",
          "src": "627:2967:71",
          "text": " @title Swaps\n @dev Delivery-Vs-Payment contract for investor-to-investor token trades.\n @dev Intended usage:\n The purpose of the contract is to allow secure token transfers/exchanges between 2 stakeholders (called holder1 and holder2).\n From now on, an operation in the Swaps smart contract (transfer/exchange) is called a trade.\n Depending on the type of trade, one/multiple token transfers will be executed.\n The simplified workflow is the following:\n 1) A trade request is created in the Swaps smart contract, it specifies:\n  - The token holder(s) involved in the trade\n  - The trade executer (optional)\n  - An expiration date\n  - Details on the first token (address, requested amount, standard)\n  - Details on the second token (address, requested amount, standard)\n  - Whether the tokens need to be escrowed in the Swaps contract or not\n  - The current status of the trade (pending / executed / forced / cancelled)\n 2) The trade is accepted by both token holders\n 3) [OPTIONAL] The trade is approved by token controllers (only if requested by tokens controllers)\n 4) The trade is executed (either by the executer in case the executer is specified, or by anyone)\n STANDARD-AGNOSTIC:\n The Swaps smart contract is standard-agnostic, it supports ETH, ERC20, ERC721, ERC1400.\n The advantage of using an ERC1400 token is to leverages its hook property, thus requiring ONE single\n transaction (operatorTransferByPartition()) to send tokens to the Swaps smart contract instead of TWO\n with the ERC20 token standard (approve() + transferFrom()).\n OFF-CHAIN PAYMENT:\n The contract can be used as escrow contract while waiting for an off-chain payment.\n Once payment is received off-chain, the token sender realeases the tokens escrowed in\n the Swaps contract to deliver them to the recipient.\n ESCROW VS SWAP MODE:\n In case escrow mode is selected, tokens need to be escrowed in Swaps smart contract\n before the trade can occur.\n In case swap mode is selected, tokens are not escrowed in the Swaps. Instead, the Swaps\n contract is only allowed to transfer tokens ON BEHALF of their owners. When trade is\n executed, an atomic token swap occurs.\n EXPIRATION DATE:\n The trade can be cancelled by both parties in case expiration date is passed.\n CLAIMS:\n The executer has the ability to force or cancel the trade.\n In case of disagreement/missing payment, both parties can contact the \"executer\"\n of the trade to deposit a claim and solve the issue.\n MARKETPLACE:\n The contract can be used as a token marketplace. Indeed, when trades are created\n without specifying the recipient address, anyone can purchase them by sending\n the requested payment in exchange.\n PRICE ORACLES:\n When price oracles are defined, those can define the price at which trades need to be executed.\n This feature is particularly useful for assets with NAV (net asset value)."
        },
        "fullyImplemented": true,
        "id": 25543,
        "linearizedBaseContracts": [
          25543,
          12351,
          12255,
          18518,
          661,
          3361
        ],
        "name": "Swaps",
        "nameLocation": "3604:5:71",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 21782,
            "mutability": "constant",
            "name": "DELIVERY_VS_PAYMENT",
            "nameLocation": "3710:19:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "3685:66:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 21780,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3685:6:71",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "44656c697665727956735061796d656e74",
              "id": 21781,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3732:19:71",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e8e336559fc1e6282be5a43d52f68f49566aba335aa0a6444efb7b7a35445572",
                "typeString": "literal_string \"DeliveryVsPayment\""
              },
              "value": "DeliveryVsPayment"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 21785,
            "mutability": "constant",
            "name": "ERC1400_TOKENS_RECIPIENT",
            "nameLocation": "3780:24:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "3755:76:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 21783,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3755:6:71",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "45524331343030546f6b656e73526563697069656e74",
              "id": 21784,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3807:24:71",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2c93a7aca686281a8c69c278068a355318b4c196f673d0b4a4407212b40df37a",
                "typeString": "literal_string \"ERC1400TokensRecipient\""
              },
              "value": "ERC1400TokensRecipient"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 21790,
            "mutability": "constant",
            "name": "SECONDS_IN_MONTH",
            "nameLocation": "3862:16:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "3836:55:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21786,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3836:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "id": 21789,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3836343030",
                "id": 21787,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3881:5:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "86400"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3330",
                "id": 21788,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3889:2:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_30_by_1",
                  "typeString": "int_const 30"
                },
                "value": "30"
              },
              "src": "3881:10:71",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 21795,
            "mutability": "constant",
            "name": "SECONDS_IN_WEEK",
            "nameLocation": "3921:15:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "3895:53:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21791,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3895:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "id": 21794,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3836343030",
                "id": 21792,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3939:5:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "86400"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "37",
                "id": 21793,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3947:1:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_7_by_1",
                  "typeString": "int_const 7"
                },
                "value": "7"
              },
              "src": "3939:9:71",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 21798,
            "mutability": "constant",
            "name": "TRADE_PROPOSAL_FLAG",
            "nameLocation": "3979:19:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "3953:114:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21796,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3953:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307863636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363",
              "id": 21797,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4001:66:71",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_92633671389852956338856788006950326282615987732512451231566067206330503711948_by_1",
                "typeString": "int_const 9263...(69 digits omitted)...1948"
              },
              "value": "0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 21801,
            "mutability": "constant",
            "name": "TRADE_ACCEPTANCE_FLAG",
            "nameLocation": "4097:21:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "4071:116:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21799,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4071:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307864646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464",
              "id": 21800,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4121:66:71",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100353144005674036033761520340862853472833986710221822167529906140191379021277_by_1",
                "typeString": "int_const 1003...(70 digits omitted)...1277"
              },
              "value": "0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 21804,
            "mutability": "constant",
            "name": "BYPASS_ACTION_FLAG",
            "nameLocation": "4218:18:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "4192:113:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21802,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4192:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307861616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161",
              "id": 21803,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4239:66:71",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_77194726158210796949047323339125271902179989777093709359638389338608753093290_by_1",
                "typeString": "int_const 7719...(69 digits omitted)...3290"
              },
              "value": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 21807,
            "mutability": "constant",
            "name": "ALL_PARTITIONS",
            "nameLocation": "4336:14:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "4310:109:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21805,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4310:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
              "id": 21806,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4353:66:71",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0x0000000000000000000000000000000000000000000000000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Swaps.Standard",
            "id": 21813,
            "members": [
              {
                "id": 21808,
                "name": "OffChain",
                "nameLocation": "4439:8:71",
                "nodeType": "EnumValue",
                "src": "4439:8:71"
              },
              {
                "id": 21809,
                "name": "ETH",
                "nameLocation": "4449:3:71",
                "nodeType": "EnumValue",
                "src": "4449:3:71"
              },
              {
                "id": 21810,
                "name": "ERC20",
                "nameLocation": "4454:5:71",
                "nodeType": "EnumValue",
                "src": "4454:5:71"
              },
              {
                "id": 21811,
                "name": "ERC721",
                "nameLocation": "4461:6:71",
                "nodeType": "EnumValue",
                "src": "4461:6:71"
              },
              {
                "id": 21812,
                "name": "ERC1400",
                "nameLocation": "4469:7:71",
                "nodeType": "EnumValue",
                "src": "4469:7:71"
              }
            ],
            "name": "Standard",
            "nameLocation": "4429:8:71",
            "nodeType": "EnumDefinition",
            "src": "4424:53:71"
          },
          {
            "canonicalName": "Swaps.State",
            "id": 21819,
            "members": [
              {
                "id": 21814,
                "name": "Undefined",
                "nameLocation": "4493:9:71",
                "nodeType": "EnumValue",
                "src": "4493:9:71"
              },
              {
                "id": 21815,
                "name": "Pending",
                "nameLocation": "4504:7:71",
                "nodeType": "EnumValue",
                "src": "4504:7:71"
              },
              {
                "id": 21816,
                "name": "Executed",
                "nameLocation": "4513:8:71",
                "nodeType": "EnumValue",
                "src": "4513:8:71"
              },
              {
                "id": 21817,
                "name": "Forced",
                "nameLocation": "4523:6:71",
                "nodeType": "EnumValue",
                "src": "4523:6:71"
              },
              {
                "id": 21818,
                "name": "Cancelled",
                "nameLocation": "4531:9:71",
                "nodeType": "EnumValue",
                "src": "4531:9:71"
              }
            ],
            "name": "State",
            "nameLocation": "4486:5:71",
            "nodeType": "EnumDefinition",
            "src": "4481:60:71"
          },
          {
            "canonicalName": "Swaps.TradeType",
            "id": 21823,
            "members": [
              {
                "id": 21820,
                "name": "Allowance",
                "nameLocation": "4561:9:71",
                "nodeType": "EnumValue",
                "src": "4561:9:71"
              },
              {
                "id": 21821,
                "name": "Hold",
                "nameLocation": "4572:4:71",
                "nodeType": "EnumValue",
                "src": "4572:4:71"
              },
              {
                "id": 21822,
                "name": "Escrow",
                "nameLocation": "4578:6:71",
                "nodeType": "EnumValue",
                "src": "4578:6:71"
              }
            ],
            "name": "TradeType",
            "nameLocation": "4550:9:71",
            "nodeType": "EnumDefinition",
            "src": "4545:40:71"
          },
          {
            "canonicalName": "Swaps.Holder",
            "id": 21826,
            "members": [
              {
                "id": 21824,
                "name": "Holder1",
                "nameLocation": "4602:7:71",
                "nodeType": "EnumValue",
                "src": "4602:7:71"
              },
              {
                "id": 21825,
                "name": "Holder2",
                "nameLocation": "4611:7:71",
                "nodeType": "EnumValue",
                "src": "4611:7:71"
              }
            ],
            "name": "Holder",
            "nameLocation": "4594:6:71",
            "nodeType": "EnumDefinition",
            "src": "4589:30:71"
          },
          {
            "constant": true,
            "id": 21829,
            "mutability": "constant",
            "name": "ERC1400_TOKENS_VALIDATOR",
            "nameLocation": "4652:24:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "4627:76:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 21827,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "4627:6:71",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "45524331343030546f6b656e7356616c696461746f72",
              "id": 21828,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4679:24:71",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_595db897d6dbdcb800524f62aac721a55f3203c7bf80bd14e6e90920e184a21d",
                "typeString": "literal_string \"ERC1400TokensValidator\""
              },
              "value": "ERC1400TokensValidator"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 21830,
              "nodeType": "StructuredDocumentation",
              "src": "4708:114:71",
              "text": "@dev Include token events so they can be parsed by Ethereum clients from the settlement transactions."
            },
            "id": 21840,
            "name": "ExecutedHold",
            "nameLocation": "4845:12:71",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21832,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4881:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21840,
                  "src": "4865:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4865:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21834,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "holdId",
                  "nameLocation": "4910:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21840,
                  "src": "4894:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21833,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4894:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lockPreimage",
                  "nameLocation": "4932:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21840,
                  "src": "4924:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21835,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4924:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21838,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4960:9:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21840,
                  "src": "4952:17:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4952:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4857:116:71"
            },
            "src": "4839:135:71"
          },
          {
            "anonymous": false,
            "id": 21848,
            "name": "Transfer",
            "nameLocation": "4994:8:71",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21842,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5019:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21848,
                  "src": "5003:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5003:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21844,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5041:2:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21848,
                  "src": "5025:18:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5025:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21846,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "5053:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21848,
                  "src": "5045:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5045:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5002:58:71"
            },
            "src": "4988:73:71"
          },
          {
            "anonymous": false,
            "id": 21864,
            "name": "TransferByPartition",
            "nameLocation": "5083:19:71",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21850,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromPartition",
                  "nameLocation": "5126:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21864,
                  "src": "5110:29:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21849,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5110:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21852,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5155:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21864,
                  "src": "5147:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5147:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21854,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5187:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21864,
                  "src": "5171:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21856,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5215:2:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21864,
                  "src": "5199:18:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5199:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21858,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5233:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21864,
                  "src": "5225:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5225:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21860,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5252:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21864,
                  "src": "5246:10:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21859,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5246:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21862,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "5270:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21864,
                  "src": "5264:18:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21861,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5102:184:71"
            },
            "src": "5077:210:71"
          },
          {
            "anonymous": false,
            "id": 21872,
            "name": "CreateNote",
            "nameLocation": "5296:10:71",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21866,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5330:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21872,
                  "src": "5314:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5314:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21868,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "noteHash",
                  "nameLocation": "5359:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21872,
                  "src": "5343:24:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21867,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5343:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21870,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "metadata",
                  "nameLocation": "5381:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21872,
                  "src": "5375:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 21869,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5375:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5306:87:71"
            },
            "src": "5290:104:71"
          },
          {
            "anonymous": false,
            "id": 21878,
            "name": "DestroyNote",
            "nameLocation": "5403:11:71",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21874,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5431:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21878,
                  "src": "5415:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5415:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21876,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "noteHash",
                  "nameLocation": "5454:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 21878,
                  "src": "5438:24:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21875,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5438:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5414:49:71"
            },
            "src": "5397:67:71"
          },
          {
            "canonicalName": "Swaps.UserTradeData",
            "id": 21895,
            "members": [
              {
                "constant": false,
                "id": 21880,
                "mutability": "mutable",
                "name": "tokenAddress",
                "nameLocation": "5503:12:71",
                "nodeType": "VariableDeclaration",
                "scope": 21895,
                "src": "5495:20:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21879,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5495:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21882,
                "mutability": "mutable",
                "name": "tokenValue",
                "nameLocation": "5529:10:71",
                "nodeType": "VariableDeclaration",
                "scope": 21895,
                "src": "5521:18:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21881,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "5521:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21884,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "5553:7:71",
                "nodeType": "VariableDeclaration",
                "scope": 21895,
                "src": "5545:15:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 21883,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "5545:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21887,
                "mutability": "mutable",
                "name": "tokenStandard",
                "nameLocation": "5575:13:71",
                "nodeType": "VariableDeclaration",
                "scope": 21895,
                "src": "5566:22:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Standard_$21813",
                  "typeString": "enum Swaps.Standard"
                },
                "typeName": {
                  "id": 21886,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21885,
                    "name": "Standard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 21813,
                    "src": "5566:8:71"
                  },
                  "referencedDeclaration": 21813,
                  "src": "5566:8:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Standard_$21813",
                    "typeString": "enum Swaps.Standard"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21889,
                "mutability": "mutable",
                "name": "accepted",
                "nameLocation": "5599:8:71",
                "nodeType": "VariableDeclaration",
                "scope": 21895,
                "src": "5594:13:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 21888,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "5594:4:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21891,
                "mutability": "mutable",
                "name": "approved",
                "nameLocation": "5618:8:71",
                "nodeType": "VariableDeclaration",
                "scope": 21895,
                "src": "5613:13:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 21890,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "5613:4:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21894,
                "mutability": "mutable",
                "name": "tradeType",
                "nameLocation": "5642:9:71",
                "nodeType": "VariableDeclaration",
                "scope": 21895,
                "src": "5632:19:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_TradeType_$21823",
                  "typeString": "enum Swaps.TradeType"
                },
                "typeName": {
                  "id": 21893,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21892,
                    "name": "TradeType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 21823,
                    "src": "5632:9:71"
                  },
                  "referencedDeclaration": 21823,
                  "src": "5632:9:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TradeType_$21823",
                    "typeString": "enum Swaps.TradeType"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserTradeData",
            "nameLocation": "5475:13:71",
            "nodeType": "StructDefinition",
            "scope": 25543,
            "src": "5468:188:71",
            "visibility": "public"
          },
          {
            "canonicalName": "Swaps.TradeRequestInput",
            "id": 21930,
            "members": [
              {
                "constant": false,
                "id": 21897,
                "mutability": "mutable",
                "name": "holder1",
                "nameLocation": "6682:7:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "6674:15:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21896,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6674:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21899,
                "mutability": "mutable",
                "name": "holder2",
                "nameLocation": "6703:7:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "6695:15:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21898,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6695:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21901,
                "mutability": "mutable",
                "name": "executer",
                "nameLocation": "6724:8:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "6716:16:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21900,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6716:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21903,
                "mutability": "mutable",
                "name": "expirationDate",
                "nameLocation": "6808:14:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "6800:22:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21902,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6800:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21905,
                "mutability": "mutable",
                "name": "tokenAddress1",
                "nameLocation": "6836:13:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "6828:21:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21904,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6828:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21907,
                "mutability": "mutable",
                "name": "tokenValue1",
                "nameLocation": "6863:11:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "6855:19:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21906,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6855:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21909,
                "mutability": "mutable",
                "name": "tokenId1",
                "nameLocation": "6888:8:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "6880:16:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 21908,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "6880:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21912,
                "mutability": "mutable",
                "name": "tokenStandard1",
                "nameLocation": "6911:14:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "6902:23:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Standard_$21813",
                  "typeString": "enum Swaps.Standard"
                },
                "typeName": {
                  "id": 21911,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21910,
                    "name": "Standard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 21813,
                    "src": "6902:8:71"
                  },
                  "referencedDeclaration": 21813,
                  "src": "6902:8:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Standard_$21813",
                    "typeString": "enum Swaps.Standard"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21914,
                "mutability": "mutable",
                "name": "tokenAddress2",
                "nameLocation": "6939:13:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "6931:21:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21913,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6931:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21916,
                "mutability": "mutable",
                "name": "tokenValue2",
                "nameLocation": "7067:11:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "7059:19:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21915,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7059:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21918,
                "mutability": "mutable",
                "name": "tokenId2",
                "nameLocation": "7092:8:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "7084:16:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 21917,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "7084:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21921,
                "mutability": "mutable",
                "name": "tokenStandard2",
                "nameLocation": "7115:14:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "7106:23:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Standard_$21813",
                  "typeString": "enum Swaps.Standard"
                },
                "typeName": {
                  "id": 21920,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21919,
                    "name": "Standard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 21813,
                    "src": "7106:8:71"
                  },
                  "referencedDeclaration": 21813,
                  "src": "7106:8:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Standard_$21813",
                    "typeString": "enum Swaps.Standard"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21924,
                "mutability": "mutable",
                "name": "tradeType1",
                "nameLocation": "7145:10:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "7135:20:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_TradeType_$21823",
                  "typeString": "enum Swaps.TradeType"
                },
                "typeName": {
                  "id": 21923,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21922,
                    "name": "TradeType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 21823,
                    "src": "7135:9:71"
                  },
                  "referencedDeclaration": 21823,
                  "src": "7135:9:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TradeType_$21823",
                    "typeString": "enum Swaps.TradeType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21927,
                "mutability": "mutable",
                "name": "tradeType2",
                "nameLocation": "7171:10:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "7161:20:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_TradeType_$21823",
                  "typeString": "enum Swaps.TradeType"
                },
                "typeName": {
                  "id": 21926,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21925,
                    "name": "TradeType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 21823,
                    "src": "7161:9:71"
                  },
                  "referencedDeclaration": 21823,
                  "src": "7161:9:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TradeType_$21823",
                    "typeString": "enum Swaps.TradeType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21929,
                "mutability": "mutable",
                "name": "settlementDate",
                "nameLocation": "7195:14:71",
                "nodeType": "VariableDeclaration",
                "scope": 21930,
                "src": "7187:22:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21928,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7187:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TradeRequestInput",
            "nameLocation": "6650:17:71",
            "nodeType": "StructDefinition",
            "scope": 25543,
            "src": "6643:571:71",
            "visibility": "public"
          },
          {
            "canonicalName": "Swaps.Trade",
            "id": 21950,
            "members": [
              {
                "constant": false,
                "id": 21932,
                "mutability": "mutable",
                "name": "holder1",
                "nameLocation": "7245:7:71",
                "nodeType": "VariableDeclaration",
                "scope": 21950,
                "src": "7237:15:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21931,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7237:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21934,
                "mutability": "mutable",
                "name": "holder2",
                "nameLocation": "7266:7:71",
                "nodeType": "VariableDeclaration",
                "scope": 21950,
                "src": "7258:15:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21933,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7258:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21936,
                "mutability": "mutable",
                "name": "executer",
                "nameLocation": "7287:8:71",
                "nodeType": "VariableDeclaration",
                "scope": 21950,
                "src": "7279:16:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 21935,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7279:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21938,
                "mutability": "mutable",
                "name": "expirationDate",
                "nameLocation": "7309:14:71",
                "nodeType": "VariableDeclaration",
                "scope": 21950,
                "src": "7301:22:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21937,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7301:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21940,
                "mutability": "mutable",
                "name": "settlementDate",
                "nameLocation": "7337:14:71",
                "nodeType": "VariableDeclaration",
                "scope": 21950,
                "src": "7329:22:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21939,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7329:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21943,
                "mutability": "mutable",
                "name": "userTradeData1",
                "nameLocation": "7371:14:71",
                "nodeType": "VariableDeclaration",
                "scope": 21950,
                "src": "7357:28:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                  "typeString": "struct Swaps.UserTradeData"
                },
                "typeName": {
                  "id": 21942,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21941,
                    "name": "UserTradeData",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 21895,
                    "src": "7357:13:71"
                  },
                  "referencedDeclaration": 21895,
                  "src": "7357:13:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21946,
                "mutability": "mutable",
                "name": "userTradeData2",
                "nameLocation": "7405:14:71",
                "nodeType": "VariableDeclaration",
                "scope": 21950,
                "src": "7391:28:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                  "typeString": "struct Swaps.UserTradeData"
                },
                "typeName": {
                  "id": 21945,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21944,
                    "name": "UserTradeData",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 21895,
                    "src": "7391:13:71"
                  },
                  "referencedDeclaration": 21895,
                  "src": "7391:13:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21949,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "7431:5:71",
                "nodeType": "VariableDeclaration",
                "scope": 21950,
                "src": "7425:11:71",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$21819",
                  "typeString": "enum Swaps.State"
                },
                "typeName": {
                  "id": 21948,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 21947,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 21819,
                    "src": "7425:5:71"
                  },
                  "referencedDeclaration": 21819,
                  "src": "7425:5:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$21819",
                    "typeString": "enum Swaps.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "nameLocation": "7225:5:71",
            "nodeType": "StructDefinition",
            "scope": 25543,
            "src": "7218:223:71",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21952,
            "mutability": "mutable",
            "name": "_index",
            "nameLocation": "7503:6:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "7486:23:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21951,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7486:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21957,
            "mutability": "mutable",
            "name": "_trades",
            "nameLocation": "7592:7:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "7557:42:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
              "typeString": "mapping(uint256 => struct Swaps.Trade)"
            },
            "typeName": {
              "id": 21956,
              "keyType": {
                "id": 21953,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7565:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "7557:25:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                "typeString": "mapping(uint256 => struct Swaps.Trade)"
              },
              "valueType": {
                "id": 21955,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21954,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21950,
                  "src": "7576:5:71"
                },
                "referencedDeclaration": 21950,
                "src": "7576:5:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                  "typeString": "struct Swaps.Trade"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21962,
            "mutability": "mutable",
            "name": "_priceOracles",
            "nameLocation": "7685:13:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "7646:52:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 21961,
              "keyType": {
                "id": 21958,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7654:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7646:29:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 21959,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7665:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 21960,
                "nodeType": "ArrayTypeName",
                "src": "7665:9:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21968,
            "mutability": "mutable",
            "name": "_isPriceOracle",
            "nameLocation": "7817:14:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "7763:68:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 21967,
              "keyType": {
                "id": 21963,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7771:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7763:44:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 21966,
                "keyType": {
                  "id": 21964,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7790:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "7782:24:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 21965,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "7801:4:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21974,
            "mutability": "mutable",
            "name": "_priceOwnership",
            "nameLocation": "7945:15:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "7891:69:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 21973,
              "keyType": {
                "id": 21969,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7899:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7891:44:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 21972,
                "keyType": {
                  "id": 21970,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7918:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "7910:24:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 21971,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "7929:4:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21984,
            "mutability": "mutable",
            "name": "_tokenUnitPricesByPartition",
            "nameLocation": "8131:27:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "8030:128:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
            },
            "typeName": {
              "id": 21983,
              "keyType": {
                "id": 21975,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8038:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8030:91:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
              },
              "valueType": {
                "id": 21982,
                "keyType": {
                  "id": 21976,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "8058:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "8049:71:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                  "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                },
                "valueType": {
                  "id": 21981,
                  "keyType": {
                    "id": 21977,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8078:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "8069:50:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                    "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                  },
                  "valueType": {
                    "id": 21980,
                    "keyType": {
                      "id": 21978,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8099:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "8090:28:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                      "typeString": "mapping(bytes32 => uint256)"
                    },
                    "valueType": {
                      "id": 21979,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8110:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21986,
            "mutability": "mutable",
            "name": "_ownedContract",
            "nameLocation": "8273:14:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "8259:28:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 21985,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "8259:4:71",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21989,
            "mutability": "mutable",
            "name": "_tradeExecuters",
            "nameLocation": "8343:15:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "8324:34:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 21987,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8324:7:71",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 21988,
              "nodeType": "ArrayTypeName",
              "src": "8324:9:71",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21993,
            "mutability": "mutable",
            "name": "_isTradeExecuter",
            "nameLocation": "8450:16:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "8416:50:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 21992,
              "keyType": {
                "id": 21990,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8424:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8416:24:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 21991,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "8435:4:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 21998,
            "mutability": "mutable",
            "name": "_tokenControllers",
            "nameLocation": "8556:17:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "8517:56:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 21997,
              "keyType": {
                "id": 21994,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8525:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8517:29:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 21995,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "8536:7:71",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 21996,
                "nodeType": "ArrayTypeName",
                "src": "8536:9:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 22004,
            "mutability": "mutable",
            "name": "_isTokenController",
            "nameLocation": "8696:18:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "8642:72:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 22003,
              "keyType": {
                "id": 21999,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8650:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8642:44:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 22002,
                "keyType": {
                  "id": 22000,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "8669:7:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "8661:24:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 22001,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "8680:4:71",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 22008,
            "mutability": "mutable",
            "name": "_variablePriceStartDate",
            "nameLocation": "8810:23:71",
            "nodeType": "VariableDeclaration",
            "scope": 25543,
            "src": "8773:60:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 22007,
              "keyType": {
                "id": 22005,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8781:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8773:27:71",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 22006,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "8792:7:71",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22033,
              "nodeType": "Block",
              "src": "8963:179:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 22028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 22021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 22014,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8984:3:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 22015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8984:10:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 22017,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22011,
                                    "src": "9006:12:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 22016,
                                  "name": "Ownable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 661,
                                  "src": "8998:7:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Ownable_$661_$",
                                    "typeString": "type(contract Ownable)"
                                  }
                                },
                                "id": 22018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8998:21:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Ownable_$661",
                                  "typeString": "contract Ownable"
                                }
                              },
                              "id": 22019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 590,
                              "src": "8998:27:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 22020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8998:29:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8984:43:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 22022,
                              "name": "_isTokenController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22004,
                              "src": "9037:18:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 22024,
                            "indexExpression": {
                              "id": 22023,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22011,
                              "src": "9056:12:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9037:32:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 22027,
                          "indexExpression": {
                            "expression": {
                              "id": 22025,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9070:3:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 22026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9070:10:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9037:44:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8984:97:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f74206120746f6b656e20636f6e74726f6c6c65722e",
                        "id": 22029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9089:35:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a20f967af876332f8e5cf464602ff6aaa46bca373759b506dfded8592e2d84c8",
                          "typeString": "literal_string \"Sender is not a token controller.\""
                        },
                        "value": "Sender is not a token controller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a20f967af876332f8e5cf464602ff6aaa46bca373759b506dfded8592e2d84c8",
                          "typeString": "literal_string \"Sender is not a token controller.\""
                        }
                      ],
                      "id": 22013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8969:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8969:161:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22031,
                  "nodeType": "ExpressionStatement",
                  "src": "8969:161:71"
                },
                {
                  "id": 22032,
                  "nodeType": "PlaceholderStatement",
                  "src": "9136:1:71"
                }
              ]
            },
            "documentation": {
              "id": 22009,
              "nodeType": "StructuredDocumentation",
              "src": "8838:71:71",
              "text": " @dev Modifier to verify if sender is a token controller."
            },
            "id": 22034,
            "name": "onlyTokenController",
            "nameLocation": "8921:19:71",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 22012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22011,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "8949:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22034,
                  "src": "8941:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8941:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8940:22:71"
            },
            "src": "8912:230:71",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22049,
              "nodeType": "Block",
              "src": "9263:103:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22041,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22037,
                            "src": "9295:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 22042,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9309:3:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 22043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9309:10:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 22040,
                          "name": "_checkPriceOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25011,
                          "src": "9277:17:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 22044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9277:43:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206973206e6f742061207072696365206f7261636c652e",
                        "id": 22045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9322:31:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbcf36d182174f136d2e0dc28ab771dc911d5712b5b9ea7fb39228ecd0c9d185",
                          "typeString": "literal_string \"Sender is not a price oracle.\""
                        },
                        "value": "Sender is not a price oracle."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbcf36d182174f136d2e0dc28ab771dc911d5712b5b9ea7fb39228ecd0c9d185",
                          "typeString": "literal_string \"Sender is not a price oracle.\""
                        }
                      ],
                      "id": 22039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9269:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9269:85:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22047,
                  "nodeType": "ExpressionStatement",
                  "src": "9269:85:71"
                },
                {
                  "id": 22048,
                  "nodeType": "PlaceholderStatement",
                  "src": "9360:1:71"
                }
              ]
            },
            "documentation": {
              "id": 22035,
              "nodeType": "StructuredDocumentation",
              "src": "9146:67:71",
              "text": " @dev Modifier to verify if sender is a price oracle."
            },
            "id": 22050,
            "name": "onlyPriceOracle",
            "nameLocation": "9225:15:71",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 22038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22037,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "9249:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22050,
                  "src": "9241:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9241:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9240:22:71"
            },
            "src": "9216:150:71",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22105,
              "nodeType": "Block",
              "src": "9522:422:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22059,
                        "name": "DELIVERY_VS_PAYMENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21782,
                        "src": "9561:19:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 22056,
                        "name": "ERC1820Implementer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12351,
                        "src": "9528:18:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1820Implementer_$12351_$",
                          "typeString": "type(contract ERC1820Implementer)"
                        }
                      },
                      "id": 22058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12350,
                      "src": "9528:32:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 22060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9528:53:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22061,
                  "nodeType": "ExpressionStatement",
                  "src": "9528:53:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22065,
                        "name": "ERC1400_TOKENS_RECIPIENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21785,
                        "src": "9620:24:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 22062,
                        "name": "ERC1820Implementer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12351,
                        "src": "9587:18:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1820Implementer_$12351_$",
                          "typeString": "type(contract ERC1820Implementer)"
                        }
                      },
                      "id": 22064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12350,
                      "src": "9587:32:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 22066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9587:58:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22067,
                  "nodeType": "ExpressionStatement",
                  "src": "9587:58:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22069,
                        "name": "ERC1400_TOKENS_RECIPIENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21785,
                        "src": "9678:24:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 22072,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "9712:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swaps_$25543",
                              "typeString": "contract Swaps"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swaps_$25543",
                              "typeString": "contract Swaps"
                            }
                          ],
                          "id": 22071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9704:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22070,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9704:7:71",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9704:13:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22068,
                      "name": "setInterfaceImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18476,
                      "src": "9651:26:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 22074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9651:67:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22075,
                  "nodeType": "ExpressionStatement",
                  "src": "9651:67:71"
                },
                {
                  "expression": {
                    "id": 22078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22076,
                      "name": "_ownedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21986,
                      "src": "9725:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22077,
                      "name": "owned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22053,
                      "src": "9742:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9725:22:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22079,
                  "nodeType": "ExpressionStatement",
                  "src": "9725:22:71"
                },
                {
                  "condition": {
                    "id": 22080,
                    "name": "_ownedContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21986,
                    "src": "9757:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22104,
                  "nodeType": "IfStatement",
                  "src": "9754:186:71",
                  "trueBody": {
                    "id": 22103,
                    "nodeType": "Block",
                    "src": "9773:167:71",
                    "statements": [
                      {
                        "assignments": [
                          22085
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22085,
                            "mutability": "mutable",
                            "name": "initialTradeExecuters",
                            "nameLocation": "9798:21:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 22103,
                            "src": "9781:38:71",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 22083,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9781:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 22084,
                              "nodeType": "ArrayTypeName",
                              "src": "9781:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22091,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 22089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9837:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 22088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9822:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 22086,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9826:7:71",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 22087,
                              "nodeType": "ArrayTypeName",
                              "src": "9826:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 22090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9822:17:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9781:58:71"
                      },
                      {
                        "expression": {
                          "id": 22097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 22092,
                              "name": "initialTradeExecuters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22085,
                              "src": "9847:21:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 22094,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 22093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9869:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9847:24:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 22095,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9874:3:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 22096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9874:10:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9847:37:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 22098,
                        "nodeType": "ExpressionStatement",
                        "src": "9847:37:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 22100,
                              "name": "initialTradeExecuters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22085,
                              "src": "9911:21:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "id": 22099,
                            "name": "_setTradeExecuters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24819,
                            "src": "9892:18:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address[] memory)"
                            }
                          },
                          "id": 22101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9892:41:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22102,
                        "nodeType": "ExpressionStatement",
                        "src": "9892:41:71"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 22051,
              "nodeType": "StructuredDocumentation",
              "src": "9370:125:71",
              "text": " [Swaps CONSTRUCTOR]\n @dev Initialize Swaps + register\n the contract implementation in ERC1820Registry."
            },
            "id": 22106,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22053,
                  "mutability": "mutable",
                  "name": "owned",
                  "nameLocation": "9515:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22106,
                  "src": "9510:10:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22052,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9510:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9509:12:71"
            },
            "returnParameters": {
              "id": 22055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9522:0:71"
            },
            "scope": 25543,
            "src": "9498:446:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12235
            ],
            "body": {
              "id": 22135,
              "nodeType": "Block",
              "src": "10516:50:71",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 22130,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22121,
                            "src": "10541:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 22131,
                            "name": "operatorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22123,
                            "src": "10547:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 22129,
                          "name": "_canReceive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24669,
                          "src": "10529:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,bytes memory) pure returns (bool)"
                          }
                        },
                        "id": 22132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10529:31:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 22133,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10528:33:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 22128,
                  "id": 22134,
                  "nodeType": "Return",
                  "src": "10522:39:71"
                }
              ]
            },
            "documentation": {
              "id": 22107,
              "nodeType": "StructuredDocumentation",
              "src": "9948:399:71",
              "text": " [ERC1400TokensRecipient INTERFACE (1/2)]\n @dev Indicate whether or not the Swaps contract can receive the tokens or not. [USED FOR ERC1400 TOKENS ONLY]\n @param data Information attached to the token transfer.\n @param operatorData Information attached to the Swaps transfer, by the operator.\n @return 'true' if the Swaps contract can receive the tokens, 'false' if not."
            },
            "functionSelector": "f55886df",
            "id": 22136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canReceive",
            "nameLocation": "10359:10:71",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22125,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10488:8:71"
            },
            "parameters": {
              "id": 22124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22136,
                  "src": "10370:14:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22108,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10370:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22136,
                  "src": "10386:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22110,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10386:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22136,
                  "src": "10395:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10395:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22136,
                  "src": "10404:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10404:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22136,
                  "src": "10413:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10413:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22136,
                  "src": "10422:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10422:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22121,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10444:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22136,
                  "src": "10428:20:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22120,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10428:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22123,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "10465:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22136,
                  "src": "10450:27:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22122,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10450:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10369:109:71"
            },
            "returnParameters": {
              "id": 22128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22127,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22136,
                  "src": "10510:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22126,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10510:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10509:6:71"
            },
            "scope": 25543,
            "src": "10350:216:71",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12254
            ],
            "body": {
              "id": 22322,
              "nodeType": "Block",
              "src": "11211:2122:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 22159,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11239:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 22160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11239:10:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "45524331343030546f6b656e",
                              "id": 22161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11251:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f9924936296af2a5ccae1dd57fa11f492d390f57f49220c78a81bed0241f0d1c",
                                "typeString": "literal_string \"ERC1400Token\""
                              },
                              "value": "ERC1400Token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f9924936296af2a5ccae1dd57fa11f492d390f57f49220c78a81bed0241f0d1c",
                                "typeString": "literal_string \"ERC1400Token\""
                              }
                            ],
                            "id": 22158,
                            "name": "interfaceAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18501,
                            "src": "11225:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (address,string memory) view returns (address)"
                            }
                          },
                          "id": 22162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11225:41:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 22163,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11270:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 22164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11270:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11225:55:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3535",
                        "id": 22166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11282:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35",
                          "typeString": "literal_string \"55\""
                        },
                        "value": "55"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6590fa52fa76f967656340b874bc9ca09733c2fddea9886210ebcbbceee04b35",
                          "typeString": "literal_string \"55\""
                        }
                      ],
                      "id": 22157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11217:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11217:70:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22168,
                  "nodeType": "ExpressionStatement",
                  "src": "11217:70:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22170,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22147,
                          "src": "11334:2:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 22173,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "11348:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swaps_$25543",
                                "typeString": "contract Swaps"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swaps_$25543",
                                "typeString": "contract Swaps"
                              }
                            ],
                            "id": 22172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11340:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 22171,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11340:7:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11340:13:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11334:19:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 22176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11355:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803",
                          "typeString": "literal_string \"50\""
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803",
                          "typeString": "literal_string \"50\""
                        }
                      ],
                      "id": 22169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11326:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11326:34:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22178,
                  "nodeType": "ExpressionStatement",
                  "src": "11326:34:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22181,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22151,
                            "src": "11411:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 22182,
                            "name": "operatorData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22153,
                            "src": "11417:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 22180,
                          "name": "_canReceive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24669,
                          "src": "11399:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,bytes memory) pure returns (bool)"
                          }
                        },
                        "id": 22183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11399:31:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3537",
                        "id": 22184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11432:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16",
                          "typeString": "literal_string \"57\""
                        },
                        "value": "57"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e921da22f871c25c63f06c1365385cbb26397f64f79055cdbab32187a9377d16",
                          "typeString": "literal_string \"57\""
                        }
                      ],
                      "id": 22179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11391:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11391:46:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22186,
                  "nodeType": "ExpressionStatement",
                  "src": "11391:46:71"
                },
                {
                  "assignments": [
                    22188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22188,
                      "mutability": "mutable",
                      "name": "flag",
                      "nameLocation": "11477:4:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 22322,
                      "src": "11469:12:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 22187,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11469:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22192,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 22190,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22151,
                        "src": "11498:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 22189,
                      "name": "_getTradeFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24679,
                      "src": "11484:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 22191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11484:19:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11469:34:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 22195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 22193,
                      "name": "flag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22188,
                      "src": "11512:4:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 22194,
                      "name": "TRADE_PROPOSAL_FLAG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21798,
                      "src": "11520:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "11512:27:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 22245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 22243,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22188,
                        "src": "12359:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 22244,
                        "name": "TRADE_ACCEPTANCE_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21801,
                        "src": "12367:21:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "12359:29:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 22320,
                    "nodeType": "IfStatement",
                    "src": "12355:974:71",
                    "trueBody": {
                      "id": 22319,
                      "nodeType": "Block",
                      "src": "12390:939:71",
                      "statements": [
                        {
                          "assignments": [
                            22247
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 22247,
                              "mutability": "mutable",
                              "name": "index",
                              "nameLocation": "12406:5:71",
                              "nodeType": "VariableDeclaration",
                              "scope": 22319,
                              "src": "12398:13:71",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 22246,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12398:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 22248,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12398:13:71"
                        },
                        {
                          "assignments": [
                            22250
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 22250,
                              "mutability": "mutable",
                              "name": "preimage",
                              "nameLocation": "12427:8:71",
                              "nodeType": "VariableDeclaration",
                              "scope": 22319,
                              "src": "12419:16:71",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "typeName": {
                                "id": 22249,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "12419:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 22255,
                          "initialValue": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 22253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12446:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 22252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12438:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 22251,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "12438:7:71",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 22254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12438:10:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12419:29:71"
                        },
                        {
                          "AST": {
                            "nodeType": "YulBlock",
                            "src": "12465:46:71",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "12475:28:71",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "12493:4:71"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12499:2:71",
                                          "type": "",
                                          "value": "64"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "12489:3:71"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12489:13:71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "12483:5:71"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12483:20:71"
                                },
                                "variableNames": [
                                  {
                                    "name": "index",
                                    "nodeType": "YulIdentifier",
                                    "src": "12475:5:71"
                                  }
                                ]
                              }
                            ]
                          },
                          "evmVersion": "london",
                          "externalReferences": [
                            {
                              "declaration": 22151,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "12493:4:71",
                              "valueSize": 1
                            },
                            {
                              "declaration": 22247,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "12475:5:71",
                              "valueSize": 1
                            }
                          ],
                          "id": 22256,
                          "nodeType": "InlineAssembly",
                          "src": "12456:55:71"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 22260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 22257,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22151,
                                "src": "12522:4:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 22258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "12522:11:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "3936",
                              "id": 22259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12537:2:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_96_by_1",
                                "typeString": "int_const 96"
                              },
                              "value": "96"
                            },
                            "src": "12522:17:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 22263,
                          "nodeType": "IfStatement",
                          "src": "12518:284:71",
                          "trueBody": {
                            "id": 22262,
                            "nodeType": "Block",
                            "src": "12541:261:71",
                            "statements": [
                              {
                                "AST": {
                                  "nodeType": "YulBlock",
                                  "src": "12741:53:71",
                                  "statements": [
                                    {
                                      "nodeType": "YulAssignment",
                                      "src": "12753:31:71",
                                      "value": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "data",
                                                "nodeType": "YulIdentifier",
                                                "src": "12774:4:71"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "12780:2:71",
                                                "type": "",
                                                "value": "96"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "12770:3:71"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12770:13:71"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "12764:5:71"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12764:20:71"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "preimage",
                                          "nodeType": "YulIdentifier",
                                          "src": "12753:8:71"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "evmVersion": "london",
                                "externalReferences": [
                                  {
                                    "declaration": 22151,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "12774:4:71",
                                    "valueSize": 1
                                  },
                                  {
                                    "declaration": 22250,
                                    "isOffset": false,
                                    "isSlot": false,
                                    "src": "12753:8:71",
                                    "valueSize": 1
                                  }
                                ],
                                "id": 22261,
                                "nodeType": "InlineAssembly",
                                "src": "12732:62:71"
                              }
                            ]
                          }
                        },
                        {
                          "assignments": [
                            22266
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 22266,
                              "mutability": "mutable",
                              "name": "trade",
                              "nameLocation": "12823:5:71",
                              "nodeType": "VariableDeclaration",
                              "scope": 22319,
                              "src": "12809:19:71",
                              "stateVariable": false,
                              "storageLocation": "storage",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                "typeString": "struct Swaps.Trade"
                              },
                              "typeName": {
                                "id": 22265,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 22264,
                                  "name": "Trade",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 21950,
                                  "src": "12809:5:71"
                                },
                                "referencedDeclaration": 21950,
                                "src": "12809:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 22270,
                          "initialValue": {
                            "baseExpression": {
                              "id": 22267,
                              "name": "_trades",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21957,
                              "src": "12831:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                                "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                              }
                            },
                            "id": 22269,
                            "indexExpression": {
                              "id": 22268,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22247,
                              "src": "12839:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12831:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage",
                              "typeString": "struct Swaps.Trade storage ref"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12809:36:71"
                        },
                        {
                          "assignments": [
                            22273
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 22273,
                              "mutability": "mutable",
                              "name": "selectedUserTradeData",
                              "nameLocation": "12875:21:71",
                              "nodeType": "VariableDeclaration",
                              "scope": 22319,
                              "src": "12854:42:71",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData"
                              },
                              "typeName": {
                                "id": 22272,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 22271,
                                  "name": "UserTradeData",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 21895,
                                  "src": "12854:13:71"
                                },
                                "referencedDeclaration": 21895,
                                "src": "12854:13:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                                  "typeString": "struct Swaps.UserTradeData"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 22284,
                          "initialValue": {
                            "condition": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 22277,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 22274,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22145,
                                    "src": "12900:4:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 22275,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 22266,
                                      "src": "12908:5:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 22276,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "holder1",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21932,
                                    "src": "12908:13:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "12900:21:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 22278,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12899:23:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "expression": {
                                "id": 22281,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22266,
                                "src": "12948:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 22282,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21946,
                              "src": "12948:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 22283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "12899:69:71",
                            "trueExpression": {
                              "expression": {
                                "id": 22279,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22266,
                                "src": "12925:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 22280,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21943,
                              "src": "12925:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                              "typeString": "struct Swaps.UserTradeData storage pointer"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12854:114:71"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 22290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 22286,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "12984:3:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 22287,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "12984:10:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 22288,
                                    "name": "selectedUserTradeData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22273,
                                    "src": "12998:21:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 22289,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21880,
                                  "src": "12998:34:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "12984:48:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "57726f6e6720746f6b656e2073656e74",
                                "id": 22291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13034:18:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_8ee647a01aa5f1bda643aa6834c1b9128a69a3f433a02ac84adf7f3b27e1e0ee",
                                  "typeString": "literal_string \"Wrong token sent\""
                                },
                                "value": "Wrong token sent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8ee647a01aa5f1bda643aa6834c1b9128a69a3f433a02ac84adf7f3b27e1e0ee",
                                  "typeString": "literal_string \"Wrong token sent\""
                                }
                              ],
                              "id": 22285,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "12976:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 22292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12976:77:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 22293,
                          "nodeType": "ExpressionStatement",
                          "src": "12976:77:71"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 22298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 22295,
                                  "name": "partition",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22141,
                                  "src": "13069:9:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 22296,
                                    "name": "selectedUserTradeData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22273,
                                    "src": "13082:21:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 22297,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21884,
                                  "src": "13082:29:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "13069:42:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "546f6b656e73206f66207468652077726f6e6720706172746974696f6e2073656e74",
                                "id": 22299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13113:36:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d2707e93029f7cfd1559052cc8a7011948874a8a768af73b9e30b493e73abe98",
                                  "typeString": "literal_string \"Tokens of the wrong partition sent\""
                                },
                                "value": "Tokens of the wrong partition sent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d2707e93029f7cfd1559052cc8a7011948874a8a768af73b9e30b493e73abe98",
                                  "typeString": "literal_string \"Tokens of the wrong partition sent\""
                                }
                              ],
                              "id": 22294,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "13061:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 22300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13061:89:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 22301,
                          "nodeType": "ExpressionStatement",
                          "src": "13061:89:71"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Standard_$21813",
                                  "typeString": "enum Swaps.Standard"
                                },
                                "id": 22307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 22303,
                                    "name": "Standard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21813,
                                    "src": "13166:8:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                      "typeString": "type(enum Swaps.Standard)"
                                    }
                                  },
                                  "id": 22304,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC1400",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21812,
                                  "src": "13166:16:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$21813",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 22305,
                                    "name": "selectedUserTradeData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22273,
                                    "src": "13186:21:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 22306,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21887,
                                  "src": "13186:35:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$21813",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "src": "13166:55:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "546f6b656e73206f66207468652077726f6e67207374616e646172642073656e74",
                                "id": 22308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13223:35:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0aed4c7d60c28efa628f3b3834329787d344f5899e54ae045c324776c24530d2",
                                  "typeString": "literal_string \"Tokens of the wrong standard sent\""
                                },
                                "value": "Tokens of the wrong standard sent"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0aed4c7d60c28efa628f3b3834329787d344f5899e54ae045c324776c24530d2",
                                  "typeString": "literal_string \"Tokens of the wrong standard sent\""
                                }
                              ],
                              "id": 22302,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "13158:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 22309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13158:101:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 22310,
                          "nodeType": "ExpressionStatement",
                          "src": "13158:101:71"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 22312,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22247,
                                "src": "13281:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 22313,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22145,
                                "src": "13288:4:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 22314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13294:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "id": 22315,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22149,
                                "src": "13297:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 22316,
                                "name": "preimage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22250,
                                "src": "13304:8:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 22311,
                              "name": "_acceptTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22962,
                              "src": "13268:12:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                                "typeString": "function (uint256,address,uint256,uint256,bytes32)"
                              }
                            },
                            "id": 22317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13268:45:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 22318,
                          "nodeType": "ExpressionStatement",
                          "src": "13268:45:71"
                        }
                      ]
                    }
                  },
                  "id": 22321,
                  "nodeType": "IfStatement",
                  "src": "11509:1820:71",
                  "trueBody": {
                    "id": 22242,
                    "nodeType": "Block",
                    "src": "11541:808:71",
                    "statements": [
                      {
                        "assignments": [
                          22197
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22197,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "11557:9:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 22242,
                            "src": "11549:17:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 22196,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11549:7:71",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22198,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11549:17:71"
                      },
                      {
                        "assignments": [
                          22200
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22200,
                            "mutability": "mutable",
                            "name": "executor",
                            "nameLocation": "11582:8:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 22242,
                            "src": "11574:16:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 22199,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11574:7:71",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22201,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11574:16:71"
                      },
                      {
                        "assignments": [
                          22203
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22203,
                            "mutability": "mutable",
                            "name": "expirationDate",
                            "nameLocation": "11606:14:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 22242,
                            "src": "11598:22:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 22202,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11598:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22204,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11598:22:71"
                      },
                      {
                        "assignments": [
                          22206
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22206,
                            "mutability": "mutable",
                            "name": "settlementDate",
                            "nameLocation": "11636:14:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 22242,
                            "src": "11628:22:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 22205,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11628:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22207,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11628:22:71"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "11667:184:71",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11677:32:71",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "11699:4:71"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11705:2:71",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11695:3:71"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11695:13:71"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11689:5:71"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11689:20:71"
                              },
                              "variableNames": [
                                {
                                  "name": "recipient",
                                  "nodeType": "YulIdentifier",
                                  "src": "11677:9:71"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11718:31:71",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "11739:4:71"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11745:2:71",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11735:3:71"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11735:13:71"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11729:5:71"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11729:20:71"
                              },
                              "variableNames": [
                                {
                                  "name": "executor",
                                  "nodeType": "YulIdentifier",
                                  "src": "11718:8:71"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11758:38:71",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "11785:4:71"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11791:3:71",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11781:3:71"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11781:14:71"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11775:5:71"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11775:21:71"
                              },
                              "variableNames": [
                                {
                                  "name": "expirationDate",
                                  "nodeType": "YulIdentifier",
                                  "src": "11758:14:71"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11805:38:71",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "11832:4:71"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11838:3:71",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11828:3:71"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11828:14:71"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11822:5:71"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11822:21:71"
                              },
                              "variableNames": [
                                {
                                  "name": "settlementDate",
                                  "nodeType": "YulIdentifier",
                                  "src": "11805:14:71"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 22151,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11699:4:71",
                            "valueSize": 1
                          },
                          {
                            "declaration": 22151,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11739:4:71",
                            "valueSize": 1
                          },
                          {
                            "declaration": 22151,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11785:4:71",
                            "valueSize": 1
                          },
                          {
                            "declaration": 22151,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11832:4:71",
                            "valueSize": 1
                          },
                          {
                            "declaration": 22200,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11718:8:71",
                            "valueSize": 1
                          },
                          {
                            "declaration": 22203,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11758:14:71",
                            "valueSize": 1
                          },
                          {
                            "declaration": 22197,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11677:9:71",
                            "valueSize": 1
                          },
                          {
                            "declaration": 22206,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11805:14:71",
                            "valueSize": 1
                          }
                        ],
                        "id": 22208,
                        "nodeType": "InlineAssembly",
                        "src": "11658:193:71"
                      },
                      {
                        "assignments": [
                          22211
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22211,
                            "mutability": "mutable",
                            "name": "_tradeData1",
                            "nameLocation": "11997:11:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 22242,
                            "src": "11976:32:71",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData"
                            },
                            "typeName": {
                              "id": 22210,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 22209,
                                "name": "UserTradeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 21895,
                                "src": "11976:13:71"
                              },
                              "referencedDeclaration": 21895,
                              "src": "11976:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                                "typeString": "struct Swaps.UserTradeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22224,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 22213,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "12025:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 22214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12025:10:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22215,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22149,
                              "src": "12037:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 22216,
                              "name": "partition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22141,
                              "src": "12044:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 22217,
                                "name": "Standard",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21813,
                                "src": "12055:8:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                  "typeString": "type(enum Swaps.Standard)"
                                }
                              },
                              "id": 22218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ERC1400",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21812,
                              "src": "12055:16:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Standard_$21813",
                                "typeString": "enum Swaps.Standard"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 22219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12073:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 22220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12079:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "expression": {
                                "id": 22221,
                                "name": "TradeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21823,
                                "src": "12086:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                  "typeString": "type(enum Swaps.TradeType)"
                                }
                              },
                              "id": 22222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Escrow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21822,
                              "src": "12086:16:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_enum$_Standard_$21813",
                                "typeString": "enum Swaps.Standard"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              }
                            ],
                            "id": 22212,
                            "name": "UserTradeData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21895,
                            "src": "12011:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_UserTradeData_$21895_storage_ptr_$",
                              "typeString": "type(struct Swaps.UserTradeData storage pointer)"
                            }
                          },
                          "id": 22223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12011:92:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11976:127:71"
                      },
                      {
                        "assignments": [
                          22227
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22227,
                            "mutability": "mutable",
                            "name": "_tokenData2",
                            "nameLocation": "12132:11:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 22242,
                            "src": "12111:32:71",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData"
                            },
                            "typeName": {
                              "id": 22226,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 22225,
                                "name": "UserTradeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 21895,
                                "src": "12111:13:71"
                              },
                              "referencedDeclaration": 21895,
                              "src": "12111:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                                "typeString": "struct Swaps.UserTradeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22231,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 22229,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22151,
                              "src": "12165:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 22228,
                            "name": "_getTradeTokenData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24719,
                            "src": "12146:18:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_UserTradeData_$21895_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (struct Swaps.UserTradeData memory)"
                            }
                          },
                          "id": 22230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12146:24:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12111:59:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 22233,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22145,
                              "src": "12202:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22234,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22197,
                              "src": "12216:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22235,
                              "name": "executor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "12235:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22236,
                              "name": "expirationDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22203,
                              "src": "12253:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 22237,
                              "name": "settlementDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22206,
                              "src": "12277:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 22238,
                              "name": "_tradeData1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22211,
                              "src": "12301:11:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            },
                            {
                              "id": 22239,
                              "name": "_tokenData2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22227,
                              "src": "12322:11:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            ],
                            "id": 22232,
                            "name": "_requestTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22570,
                            "src": "12179:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_UserTradeData_$21895_memory_ptr_$_t_struct$_UserTradeData_$21895_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,uint256,struct Swaps.UserTradeData memory,struct Swaps.UserTradeData memory)"
                            }
                          },
                          "id": 22240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12179:162:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22241,
                        "nodeType": "ExpressionStatement",
                        "src": "12179:162:71"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 22137,
              "nodeType": "StructuredDocumentation",
              "src": "10570:466:71",
              "text": " [ERC1400TokensRecipient INTERFACE (2/2)]\n @dev Hook function executed when tokens are sent to the Swaps contract. [USED FOR ERC1400 TOKENS ONLY]\n @param partition Name of the partition.\n @param from Token holder.\n @param to Token recipient.\n @param value Number of tokens to transfer.\n @param data Information attached to the token transfer.\n @param operatorData Information attached to the Swaps transfer, by the operator."
            },
            "functionSelector": "f464b576",
            "id": 22323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensReceived",
            "nameLocation": "11048:14:71",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22155,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11202:8:71"
            },
            "parameters": {
              "id": 22154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22139,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22323,
                  "src": "11063:14:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22138,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11063:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22141,
                  "mutability": "mutable",
                  "name": "partition",
                  "nameLocation": "11087:9:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22323,
                  "src": "11079:17:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22140,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11079:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22143,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22323,
                  "src": "11098:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11098:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22145,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11115:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22323,
                  "src": "11107:12:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11107:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22147,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11129:2:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22323,
                  "src": "11121:10:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11121:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22149,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "11138:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22323,
                  "src": "11133:10:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22148,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11133:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22151,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11158:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22323,
                  "src": "11145:17:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22150,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11145:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22153,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "11179:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22323,
                  "src": "11164:27:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22152,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11164:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11062:130:71"
            },
            "returnParameters": {
              "id": 22156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11211:0:71"
            },
            "scope": 25543,
            "src": "11039:2294:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22396,
              "nodeType": "Block",
              "src": "13570:620:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 22333,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22327,
                          "src": "13597:9:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 22334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21897,
                        "src": "13597:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 22335,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22327,
                          "src": "13622:9:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 22336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21899,
                        "src": "13622:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 22337,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22327,
                          "src": "13647:9:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 22338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "executer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21901,
                        "src": "13647:18:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 22339,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22327,
                          "src": "13673:9:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 22340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expirationDate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21903,
                        "src": "13673:24:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 22341,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22327,
                          "src": "13705:9:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 22342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "settlementDate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21929,
                        "src": "13705:24:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 22344,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22327,
                              "src": "13751:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 22345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21905,
                            "src": "13751:23:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 22346,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22327,
                              "src": "13776:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 22347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenValue1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21907,
                            "src": "13776:21:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 22348,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22327,
                              "src": "13799:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 22349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21909,
                            "src": "13799:18:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 22350,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22327,
                              "src": "13819:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 22351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenStandard1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21912,
                            "src": "13819:24:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 22352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13845:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 22353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13852:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "expression": {
                              "id": 22354,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22327,
                              "src": "13859:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 22355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21924,
                            "src": "13859:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          ],
                          "id": 22343,
                          "name": "UserTradeData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21895,
                          "src": "13737:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_UserTradeData_$21895_storage_ptr_$",
                            "typeString": "type(struct Swaps.UserTradeData storage pointer)"
                          }
                        },
                        "id": 22356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13737:143:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 22358,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22327,
                              "src": "13902:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 22359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21914,
                            "src": "13902:23:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 22360,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22327,
                              "src": "13927:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 22361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenValue2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21916,
                            "src": "13927:21:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 22362,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22327,
                              "src": "13950:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 22363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenId2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21918,
                            "src": "13950:18:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 22364,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22327,
                              "src": "13970:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 22365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenStandard2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21921,
                            "src": "13970:24:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 22366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13996:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 22367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14003:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "expression": {
                              "id": 22368,
                              "name": "inputData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22327,
                              "src": "14010:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                                "typeString": "struct Swaps.TradeRequestInput calldata"
                              }
                            },
                            "id": 22369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21927,
                            "src": "14010:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          ],
                          "id": 22357,
                          "name": "UserTradeData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21895,
                          "src": "13888:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_UserTradeData_$21895_storage_ptr_$",
                            "typeString": "type(struct Swaps.UserTradeData storage pointer)"
                          }
                        },
                        "id": 22370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13888:143:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      ],
                      "id": 22332,
                      "name": "_requestTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22570,
                      "src": "13576:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_UserTradeData_$21895_memory_ptr_$_t_struct$_UserTradeData_$21895_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,struct Swaps.UserTradeData memory,struct Swaps.UserTradeData memory)"
                      }
                    },
                    "id": 22371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13576:461:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22372,
                  "nodeType": "ExpressionStatement",
                  "src": "13576:461:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 22383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 22377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 22373,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "14047:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 22374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14047:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 22375,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22327,
                          "src": "14061:9:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 22376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21897,
                        "src": "14061:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14047:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 22382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 22378,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "14082:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 22379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14082:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 22380,
                          "name": "inputData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22327,
                          "src": "14096:9:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                            "typeString": "struct Swaps.TradeRequestInput calldata"
                          }
                        },
                        "id": 22381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21899,
                        "src": "14096:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "14082:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14047:66:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22395,
                  "nodeType": "IfStatement",
                  "src": "14044:142:71",
                  "trueBody": {
                    "id": 22394,
                    "nodeType": "Block",
                    "src": "14115:71:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 22385,
                              "name": "_index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21952,
                              "src": "14136:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 22386,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14144:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 22387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14144:10:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 22388,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14156:3:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 22389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "14156:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 22390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14167:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 22391,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22329,
                              "src": "14170:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 22384,
                            "name": "_acceptTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22962,
                            "src": "14123:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,address,uint256,uint256,bytes32)"
                            }
                          },
                          "id": 22392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14123:56:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22393,
                        "nodeType": "ExpressionStatement",
                        "src": "14123:56:71"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 22324,
              "nodeType": "StructuredDocumentation",
              "src": "13337:125:71",
              "text": " @dev Create a new trade request in the Swaps smart contract.\n @param inputData The input for this function"
            },
            "functionSelector": "89a0c9e7",
            "id": 22397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestTrade",
            "nameLocation": "13474:12:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22327,
                  "mutability": "mutable",
                  "name": "inputData",
                  "nameLocation": "13514:9:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22397,
                  "src": "13487:36:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeRequestInput_$21930_calldata_ptr",
                    "typeString": "struct Swaps.TradeRequestInput"
                  },
                  "typeName": {
                    "id": 22326,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22325,
                      "name": "TradeRequestInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21930,
                      "src": "13487:17:71"
                    },
                    "referencedDeclaration": 21930,
                    "src": "13487:17:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeRequestInput_$21930_storage_ptr",
                      "typeString": "struct Swaps.TradeRequestInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22329,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "13533:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22397,
                  "src": "13525:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22328,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13525:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13486:56:71"
            },
            "returnParameters": {
              "id": 22331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13570:0:71"
            },
            "scope": 25543,
            "src": "13465:725:71",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22569,
              "nodeType": "Block",
              "src": "15045:1606:71",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 22421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 22417,
                        "name": "userTradeData1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22411,
                        "src": "15054:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      "id": 22418,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenStandard",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21887,
                      "src": "15054:28:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 22419,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21813,
                        "src": "15086:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 22420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21809,
                      "src": "15086:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "15054:44:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22432,
                  "nodeType": "IfStatement",
                  "src": "15051:159:71",
                  "trueBody": {
                    "id": 22431,
                    "nodeType": "Block",
                    "src": "15100:110:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              },
                              "id": 22427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 22423,
                                  "name": "userTradeData1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22411,
                                  "src": "15116:14:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                    "typeString": "struct Swaps.UserTradeData memory"
                                  }
                                },
                                "id": 22424,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tradeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21894,
                                "src": "15116:24:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$21823",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 22425,
                                  "name": "TradeType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21823,
                                  "src": "15144:9:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                    "typeString": "type(enum Swaps.TradeType)"
                                  }
                                },
                                "id": 22426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Escrow",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21822,
                                "src": "15144:16:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$21823",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "src": "15116:44:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "457468657220747261646573206e65656420746f206265206f66207479706520457363726f77",
                              "id": 22428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15162:40:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4",
                                "typeString": "literal_string \"Ether trades need to be of type Escrow\""
                              },
                              "value": "Ether trades need to be of type Escrow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4",
                                "typeString": "literal_string \"Ether trades need to be of type Escrow\""
                              }
                            ],
                            "id": 22422,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15108:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15108:95:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22430,
                        "nodeType": "ExpressionStatement",
                        "src": "15108:95:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 22437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 22433,
                        "name": "userTradeData2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22414,
                        "src": "15219:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      "id": 22434,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenStandard",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21887,
                      "src": "15219:28:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 22435,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21813,
                        "src": "15251:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 22436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21809,
                      "src": "15251:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "15219:44:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22448,
                  "nodeType": "IfStatement",
                  "src": "15216:159:71",
                  "trueBody": {
                    "id": 22447,
                    "nodeType": "Block",
                    "src": "15265:110:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              },
                              "id": 22443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 22439,
                                  "name": "userTradeData2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22414,
                                  "src": "15281:14:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                    "typeString": "struct Swaps.UserTradeData memory"
                                  }
                                },
                                "id": 22440,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tradeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21894,
                                "src": "15281:24:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$21823",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 22441,
                                  "name": "TradeType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21823,
                                  "src": "15309:9:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                    "typeString": "type(enum Swaps.TradeType)"
                                  }
                                },
                                "id": 22442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Escrow",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21822,
                                "src": "15309:16:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$21823",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "src": "15281:44:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "457468657220747261646573206e65656420746f206265206f66207479706520457363726f77",
                              "id": 22444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15327:40:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4",
                                "typeString": "literal_string \"Ether trades need to be of type Escrow\""
                              },
                              "value": "Ether trades need to be of type Escrow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0b2b516375d20093ba5abecc0cd58e75e4a2fdc1bed15bafb457d94a3ba607a4",
                                "typeString": "literal_string \"Ether trades need to be of type Escrow\""
                              }
                            ],
                            "id": 22438,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15273:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15273:95:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22446,
                        "nodeType": "ExpressionStatement",
                        "src": "15273:95:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TradeType_$21823",
                      "typeString": "enum Swaps.TradeType"
                    },
                    "id": 22453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 22449,
                        "name": "userTradeData1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22411,
                        "src": "15385:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      "id": 22450,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tradeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21894,
                      "src": "15385:24:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 22451,
                        "name": "TradeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21823,
                        "src": "15413:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                          "typeString": "type(enum Swaps.TradeType)"
                        }
                      },
                      "id": 22452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Hold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21821,
                      "src": "15413:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "src": "15385:42:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22481,
                  "nodeType": "IfStatement",
                  "src": "15381:292:71",
                  "trueBody": {
                    "id": 22480,
                    "nodeType": "Block",
                    "src": "15429:244:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 22465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Standard_$21813",
                                  "typeString": "enum Swaps.Standard"
                                },
                                "id": 22459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 22455,
                                    "name": "userTradeData1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22411,
                                    "src": "15445:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 22456,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21887,
                                  "src": "15445:28:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$21813",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 22457,
                                    "name": "Standard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21813,
                                    "src": "15477:8:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                      "typeString": "type(enum Swaps.Standard)"
                                    }
                                  },
                                  "id": 22458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC20",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21810,
                                  "src": "15477:14:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$21813",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "src": "15445:46:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Standard_$21813",
                                  "typeString": "enum Swaps.Standard"
                                },
                                "id": 22464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 22460,
                                    "name": "userTradeData1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22411,
                                    "src": "15495:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 22461,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21887,
                                  "src": "15495:28:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$21813",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 22462,
                                    "name": "Standard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21813,
                                    "src": "15527:8:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                      "typeString": "type(enum Swaps.Standard)"
                                    }
                                  },
                                  "id": 22463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC1400",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21812,
                                  "src": "15527:16:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$21813",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "src": "15495:48:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15445:98:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e207374616e6461726420666f7220686f6c642074726164652074797065",
                              "id": 22466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15545:44:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb",
                                "typeString": "literal_string \"Invalid token standard for hold trade type\""
                              },
                              "value": "Invalid token standard for hold trade type"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb",
                                "typeString": "literal_string \"Invalid token standard for hold trade type\""
                              }
                            ],
                            "id": 22454,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15437:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15437:153:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22468,
                        "nodeType": "ExpressionStatement",
                        "src": "15437:153:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 22476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 22470,
                                  "name": "userTradeData1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22411,
                                  "src": "15606:14:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                    "typeString": "struct Swaps.UserTradeData memory"
                                  }
                                },
                                "id": 22471,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21884,
                                "src": "15606:22:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 22474,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15640:1:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 22473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15632:7:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 22472,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15632:7:71",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 22475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15632:10:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "15606:36:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20686f6c64496420737065636966696564",
                              "id": 22477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15644:21:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4",
                                "typeString": "literal_string \"No holdId specified\""
                              },
                              "value": "No holdId specified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4",
                                "typeString": "literal_string \"No holdId specified\""
                              }
                            ],
                            "id": 22469,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15598:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15598:68:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22479,
                        "nodeType": "ExpressionStatement",
                        "src": "15598:68:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TradeType_$21823",
                      "typeString": "enum Swaps.TradeType"
                    },
                    "id": 22486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 22482,
                        "name": "userTradeData2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22414,
                        "src": "15687:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      "id": 22483,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tradeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21894,
                      "src": "15687:24:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 22484,
                        "name": "TradeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21823,
                        "src": "15715:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                          "typeString": "type(enum Swaps.TradeType)"
                        }
                      },
                      "id": 22485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Hold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21821,
                      "src": "15715:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "src": "15687:42:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22514,
                  "nodeType": "IfStatement",
                  "src": "15683:292:71",
                  "trueBody": {
                    "id": 22513,
                    "nodeType": "Block",
                    "src": "15731:244:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 22498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Standard_$21813",
                                  "typeString": "enum Swaps.Standard"
                                },
                                "id": 22492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 22488,
                                    "name": "userTradeData2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22414,
                                    "src": "15747:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 22489,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21887,
                                  "src": "15747:28:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$21813",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 22490,
                                    "name": "Standard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21813,
                                    "src": "15779:8:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                      "typeString": "type(enum Swaps.Standard)"
                                    }
                                  },
                                  "id": 22491,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC20",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21810,
                                  "src": "15779:14:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$21813",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "src": "15747:46:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Standard_$21813",
                                  "typeString": "enum Swaps.Standard"
                                },
                                "id": 22497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 22493,
                                    "name": "userTradeData2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22414,
                                    "src": "15797:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  },
                                  "id": 22494,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21887,
                                  "src": "15797:28:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$21813",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 22495,
                                    "name": "Standard",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21813,
                                    "src": "15829:8:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                      "typeString": "type(enum Swaps.Standard)"
                                    }
                                  },
                                  "id": 22496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC1400",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21812,
                                  "src": "15829:16:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Standard_$21813",
                                    "typeString": "enum Swaps.Standard"
                                  }
                                },
                                "src": "15797:48:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15747:98:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e207374616e6461726420666f7220686f6c642074726164652074797065",
                              "id": 22499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15847:44:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb",
                                "typeString": "literal_string \"Invalid token standard for hold trade type\""
                              },
                              "value": "Invalid token standard for hold trade type"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d2053e1061c836597f4dea813fbe2c6ba0c3d847ab0cb01c7bf3e51a4ada89bb",
                                "typeString": "literal_string \"Invalid token standard for hold trade type\""
                              }
                            ],
                            "id": 22487,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15739:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15739:153:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22501,
                        "nodeType": "ExpressionStatement",
                        "src": "15739:153:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 22509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 22503,
                                  "name": "userTradeData2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22414,
                                  "src": "15908:14:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                    "typeString": "struct Swaps.UserTradeData memory"
                                  }
                                },
                                "id": 22504,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21884,
                                "src": "15908:22:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 22507,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15942:1:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 22506,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15934:7:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 22505,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15934:7:71",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 22508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15934:10:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "15908:36:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20686f6c64496420737065636966696564",
                              "id": 22510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15946:21:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4",
                                "typeString": "literal_string \"No holdId specified\""
                              },
                              "value": "No holdId specified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f27e4c6b14f179cc89617a8534b57ab0d5c0d186253e10a2233490cdd2b5d7a4",
                                "typeString": "literal_string \"No holdId specified\""
                              }
                            ],
                            "id": 22502,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "15900:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15900:68:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22512,
                        "nodeType": "ExpressionStatement",
                        "src": "15900:68:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 22515,
                    "name": "_ownedContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21986,
                    "src": "15984:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22524,
                  "nodeType": "IfStatement",
                  "src": "15981:142:71",
                  "trueBody": {
                    "id": 22523,
                    "nodeType": "Block",
                    "src": "16000:123:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 22517,
                                "name": "_isTradeExecuter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21993,
                                "src": "16016:16:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 22519,
                              "indexExpression": {
                                "id": 22518,
                                "name": "executer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22404,
                                "src": "16033:8:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16016:26:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616465206578656375746572206e6565647320746f2062656c6f6e6720746f20746865206c697374206f6620616c6c6f77656420747261646520657865637574657273",
                              "id": 22520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16044:71:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3a6c5fb48c287bee984928951d89e75c588c9b0df86b8ef015c0ada5e6d8b633",
                                "typeString": "literal_string \"Trade executer needs to belong to the list of allowed trade executers\""
                              },
                              "value": "Trade executer needs to belong to the list of allowed trade executers"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3a6c5fb48c287bee984928951d89e75c588c9b0df86b8ef015c0ada5e6d8b633",
                                "typeString": "literal_string \"Trade executer needs to belong to the list of allowed trade executers\""
                              }
                            ],
                            "id": 22516,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "16008:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 22521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16008:108:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22522,
                        "nodeType": "ExpressionStatement",
                        "src": "16008:108:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22526,
                          "name": "holder1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22400,
                          "src": "16137:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 22529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16156:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 22528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16148:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 22527,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16148:7:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16148:10:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16137:21:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412074726164652063616e206e6f742062652063726561746564207769746820746865207a65726f2061646472657373",
                        "id": 22532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16160:50:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7422c5722be9eca0f8e40021c8dfba381e5cf7f3a04965f64b9b68b5a46c4e9",
                          "typeString": "literal_string \"A trade can not be created with the zero address\""
                        },
                        "value": "A trade can not be created with the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7422c5722be9eca0f8e40021c8dfba381e5cf7f3a04965f64b9b68b5a46c4e9",
                          "typeString": "literal_string \"A trade can not be created with the zero address\""
                        }
                      ],
                      "id": 22525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "16129:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16129:82:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22534,
                  "nodeType": "ExpressionStatement",
                  "src": "16129:82:71"
                },
                {
                  "expression": {
                    "id": 22536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "16222:8:71",
                    "subExpression": {
                      "id": 22535,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21952,
                      "src": "16222:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22537,
                  "nodeType": "ExpressionStatement",
                  "src": "16222:8:71"
                },
                {
                  "assignments": [
                    22539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22539,
                      "mutability": "mutable",
                      "name": "_expirationDate",
                      "nameLocation": "16245:15:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 22569,
                      "src": "16237:23:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22538,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16237:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22552,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 22543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 22540,
                            "name": "expirationDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22406,
                            "src": "16264:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 22541,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "16281:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 22542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16281:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16264:32:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 22544,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16263:34:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 22549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 22546,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "16318:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 22547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16318:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 22548,
                            "name": "SECONDS_IN_MONTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21790,
                            "src": "16336:16:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16318:34:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 22550,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16317:36:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 22551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "16263:90:71",
                    "trueExpression": {
                      "id": 22545,
                      "name": "expirationDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22406,
                      "src": "16300:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16237:116:71"
                },
                {
                  "expression": {
                    "id": 22567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22553,
                        "name": "_trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21957,
                        "src": "16360:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                          "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                        }
                      },
                      "id": 22555,
                      "indexExpression": {
                        "id": 22554,
                        "name": "_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21952,
                        "src": "16368:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16360:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage",
                        "typeString": "struct Swaps.Trade storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 22557,
                          "name": "holder1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22400,
                          "src": "16401:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 22558,
                          "name": "holder2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22402,
                          "src": "16425:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 22559,
                          "name": "executer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22404,
                          "src": "16450:8:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 22560,
                          "name": "_expirationDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22539,
                          "src": "16482:15:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 22561,
                          "name": "settlementDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22408,
                          "src": "16521:14:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 22562,
                          "name": "userTradeData1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22411,
                          "src": "16559:14:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          }
                        },
                        {
                          "id": 22563,
                          "name": "userTradeData2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22414,
                          "src": "16597:14:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 22564,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21819,
                            "src": "16626:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$21819_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 22565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21815,
                          "src": "16626:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        ],
                        "id": 22556,
                        "name": "Trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21950,
                        "src": "16378:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trade_$21950_storage_ptr_$",
                          "typeString": "type(struct Swaps.Trade storage pointer)"
                        }
                      },
                      "id": 22566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "holder1",
                        "holder2",
                        "executer",
                        "expirationDate",
                        "settlementDate",
                        "userTradeData1",
                        "userTradeData2",
                        "state"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "16378:268:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_memory_ptr",
                        "typeString": "struct Swaps.Trade memory"
                      }
                    },
                    "src": "16360:286:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "id": 22568,
                  "nodeType": "ExpressionStatement",
                  "src": "16360:286:71"
                }
              ]
            },
            "documentation": {
              "id": 22398,
              "nodeType": "StructuredDocumentation",
              "src": "14194:541:71",
              "text": " @dev Create a new trade request in the Swaps smart contract.\n @param holder1 Address of the first token holder.\n @param holder2 Address of the second token holder.\n @param executer Executer of the trade.\n @param expirationDate Expiration date of the trade.\n @param userTradeData1 Encoded pack of variables for token1 (address, amount, id/partition, standard, accepted, approved).\n @param userTradeData2 Encoded pack of variables for token2 (address, amount, id/partition, standard, accepted, approved)."
            },
            "id": 22570,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requestTrade",
            "nameLocation": "14747:13:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22400,
                  "mutability": "mutable",
                  "name": "holder1",
                  "nameLocation": "14774:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22570,
                  "src": "14766:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14766:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22402,
                  "mutability": "mutable",
                  "name": "holder2",
                  "nameLocation": "14795:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22570,
                  "src": "14787:15:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14787:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22404,
                  "mutability": "mutable",
                  "name": "executer",
                  "nameLocation": "14816:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22570,
                  "src": "14808:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14808:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22406,
                  "mutability": "mutable",
                  "name": "expirationDate",
                  "nameLocation": "14900:14:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22570,
                  "src": "14892:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14892:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22408,
                  "mutability": "mutable",
                  "name": "settlementDate",
                  "nameLocation": "14928:14:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22570,
                  "src": "14920:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14920:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22411,
                  "mutability": "mutable",
                  "name": "userTradeData1",
                  "nameLocation": "14969:14:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22570,
                  "src": "14948:35:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  },
                  "typeName": {
                    "id": 22410,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22409,
                      "name": "UserTradeData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21895,
                      "src": "14948:13:71"
                    },
                    "referencedDeclaration": 21895,
                    "src": "14948:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22414,
                  "mutability": "mutable",
                  "name": "userTradeData2",
                  "nameLocation": "15010:14:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22570,
                  "src": "14989:35:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  },
                  "typeName": {
                    "id": 22413,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22412,
                      "name": "UserTradeData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21895,
                      "src": "14989:13:71"
                    },
                    "referencedDeclaration": 21895,
                    "src": "14989:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14760:268:71"
            },
            "returnParameters": {
              "id": 22416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15045:0:71"
            },
            "scope": 25543,
            "src": "14738:1913:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22588,
              "nodeType": "Block",
              "src": "16853:66:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22579,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22573,
                        "src": "16872:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 22580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16879:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 22581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16879:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 22582,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16891:3:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 22583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "16891:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 22584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16902:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 22585,
                        "name": "preimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22575,
                        "src": "16905:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 22578,
                      "name": "_acceptTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22962,
                      "src": "16859:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 22586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16859:55:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22587,
                  "nodeType": "ExpressionStatement",
                  "src": "16859:55:71"
                }
              ]
            },
            "documentation": {
              "id": 22571,
              "nodeType": "StructuredDocumentation",
              "src": "16655:124:71",
              "text": " @dev Accept a given trade (+ potentially escrow tokens).\n @param index Index of the trade to be accepted."
            },
            "functionSelector": "51965a83",
            "id": 22589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptTrade",
            "nameLocation": "16791:11:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22573,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "16811:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22589,
                  "src": "16803:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16803:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22575,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "16826:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22589,
                  "src": "16818:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22574,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16818:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16802:33:71"
            },
            "returnParameters": {
              "id": 22577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16853:0:71"
            },
            "scope": 25543,
            "src": "16782:137:71",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22961,
              "nodeType": "Block",
              "src": "17326:3882:71",
              "statements": [
                {
                  "assignments": [
                    22605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22605,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "17346:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 22961,
                      "src": "17332:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 22604,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 22603,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "17332:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "17332:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22609,
                  "initialValue": {
                    "baseExpression": {
                      "id": 22606,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "17354:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 22608,
                    "indexExpression": {
                      "id": 22607,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22592,
                      "src": "17362:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17354:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17332:36:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$21819",
                          "typeString": "enum Swaps.State"
                        },
                        "id": 22615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 22611,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22605,
                            "src": "17382:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 22612,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21949,
                          "src": "17382:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 22613,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21819,
                            "src": "17397:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$21819_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 22614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21815,
                          "src": "17397:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "src": "17382:28:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "id": 22616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17412:22:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        },
                        "value": "Trade is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        }
                      ],
                      "id": 22610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17374:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17374:61:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22618,
                  "nodeType": "ExpressionStatement",
                  "src": "17374:61:71"
                },
                {
                  "assignments": [
                    22620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22620,
                      "mutability": "mutable",
                      "name": "recipientHolder",
                      "nameLocation": "17450:15:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 22961,
                      "src": "17442:23:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22619,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17442:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22621,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17442:23:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 22625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 22622,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22594,
                      "src": "17474:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 22623,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22605,
                        "src": "17484:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 22624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21932,
                      "src": "17484:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17474:23:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 22635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 22632,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22594,
                        "src": "17554:6:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 22633,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22605,
                          "src": "17564:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                            "typeString": "struct Swaps.Trade storage pointer"
                          }
                        },
                        "id": 22634,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "holder2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21934,
                        "src": "17564:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "17554:23:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 22642,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22605,
                            "src": "17634:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 22643,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holder2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21934,
                          "src": "17634:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 22646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17659:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 22645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17651:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 22644,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17651:7:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17651:10:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17634:27:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 22665,
                        "nodeType": "Block",
                        "src": "17745:67:71",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "4f6e6c79207265676973746572656420686f6c646572732063616e206163636570742061207472616465",
                                  "id": 22662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17760:44:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b87811a9660efbe433e1bf8fc747435558a7cca8d25afc47f3b0721d2694b1dd",
                                    "typeString": "literal_string \"Only registered holders can accept a trade\""
                                  },
                                  "value": "Only registered holders can accept a trade"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_b87811a9660efbe433e1bf8fc747435558a7cca8d25afc47f3b0721d2694b1dd",
                                    "typeString": "literal_string \"Only registered holders can accept a trade\""
                                  }
                                ],
                                "id": 22661,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967277,
                                  4294967277
                                ],
                                "referencedDeclaration": 4294967277,
                                "src": "17753:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 22663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17753:52:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 22664,
                            "nodeType": "ExpressionStatement",
                            "src": "17753:52:71"
                          }
                        ]
                      },
                      "id": 22666,
                      "nodeType": "IfStatement",
                      "src": "17631:181:71",
                      "trueBody": {
                        "id": 22660,
                        "nodeType": "Block",
                        "src": "17663:76:71",
                        "statements": [
                          {
                            "expression": {
                              "id": 22653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 22649,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22605,
                                  "src": "17671:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 22651,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "holder2",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21934,
                                "src": "17671:13:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 22652,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22594,
                                "src": "17687:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "17671:22:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 22654,
                            "nodeType": "ExpressionStatement",
                            "src": "17671:22:71"
                          },
                          {
                            "expression": {
                              "id": 22658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 22655,
                                "name": "recipientHolder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22620,
                                "src": "17701:15:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 22656,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22605,
                                  "src": "17719:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 22657,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "holder1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21932,
                                "src": "17719:13:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "17701:31:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 22659,
                            "nodeType": "ExpressionStatement",
                            "src": "17701:31:71"
                          }
                        ]
                      }
                    },
                    "id": 22667,
                    "nodeType": "IfStatement",
                    "src": "17551:261:71",
                    "trueBody": {
                      "id": 22641,
                      "nodeType": "Block",
                      "src": "17579:46:71",
                      "statements": [
                        {
                          "expression": {
                            "id": 22639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 22636,
                              "name": "recipientHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22620,
                              "src": "17587:15:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 22637,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22605,
                                "src": "17605:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 22638,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holder1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21932,
                              "src": "17605:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "17587:31:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 22640,
                          "nodeType": "ExpressionStatement",
                          "src": "17587:31:71"
                        }
                      ]
                    }
                  },
                  "id": 22668,
                  "nodeType": "IfStatement",
                  "src": "17471:341:71",
                  "trueBody": {
                    "id": 22631,
                    "nodeType": "Block",
                    "src": "17499:46:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 22629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 22626,
                            "name": "recipientHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22620,
                            "src": "17507:15:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 22627,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22605,
                              "src": "17525:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 22628,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "holder2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21934,
                            "src": "17525:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17507:31:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 22630,
                        "nodeType": "ExpressionStatement",
                        "src": "17507:31:71"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    22671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22671,
                      "mutability": "mutable",
                      "name": "selectedUserTradeData",
                      "nameLocation": "17839:21:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 22961,
                      "src": "17818:42:71",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData"
                      },
                      "typeName": {
                        "id": 22670,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 22669,
                          "name": "UserTradeData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21895,
                          "src": "17818:13:71"
                        },
                        "referencedDeclaration": 21895,
                        "src": "17818:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                          "typeString": "struct Swaps.UserTradeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22682,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 22675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 22672,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22594,
                            "src": "17864:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 22673,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22605,
                              "src": "17874:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 22674,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21932,
                            "src": "17874:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17864:23:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 22676,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "17863:25:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 22679,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22605,
                        "src": "17914:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 22680,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "17914:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 22681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "17863:71:71",
                    "trueExpression": {
                      "expression": {
                        "id": 22677,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22605,
                        "src": "17891:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 22678,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "17891:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17818:116:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "17949:31:71",
                        "subExpression": {
                          "expression": {
                            "id": 22684,
                            "name": "selectedUserTradeData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22671,
                            "src": "17950:21:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData memory"
                            }
                          },
                          "id": 22685,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accepted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21889,
                          "src": "17950:30:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547261646520616c72656164792061636365707465642062792074686520686f6c646572",
                        "id": 22687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17982:38:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5bb3f67205aac1ef56c0f0d2a8a3721a1e2cbbeeb73b468e67cc7251df85270",
                          "typeString": "literal_string \"Trade already accepted by the holder\""
                        },
                        "value": "Trade already accepted by the holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5bb3f67205aac1ef56c0f0d2a8a3721a1e2cbbeeb73b468e67cc7251df85270",
                          "typeString": "literal_string \"Trade already accepted by the holder\""
                        }
                      ],
                      "id": 22683,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17941:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17941:80:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22689,
                  "nodeType": "ExpressionStatement",
                  "src": "17941:80:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TradeType_$21823",
                      "typeString": "enum Swaps.TradeType"
                    },
                    "id": 22694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 22690,
                        "name": "selectedUserTradeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22671,
                        "src": "18031:21:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                          "typeString": "struct Swaps.UserTradeData memory"
                        }
                      },
                      "id": 22691,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tradeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21894,
                      "src": "18031:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 22692,
                        "name": "TradeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21823,
                        "src": "18066:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                          "typeString": "type(enum Swaps.TradeType)"
                        }
                      },
                      "id": 22693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Escrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21822,
                      "src": "18066:16:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "src": "18031:51:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      },
                      "id": 22816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 22812,
                          "name": "selectedUserTradeData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22671,
                          "src": "19239:21:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                            "typeString": "struct Swaps.UserTradeData memory"
                          }
                        },
                        "id": 22813,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tradeType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21894,
                        "src": "19239:31:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TradeType_$21823",
                          "typeString": "enum Swaps.TradeType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 22814,
                          "name": "TradeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21823,
                          "src": "19274:9:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                            "typeString": "type(enum Swaps.TradeType)"
                          }
                        },
                        "id": 22815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Hold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21821,
                        "src": "19274:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TradeType_$21823",
                          "typeString": "enum Swaps.TradeType"
                        }
                      },
                      "src": "19239:49:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 22835,
                      "nodeType": "Block",
                      "src": "19440:183:71",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 22829,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22594,
                                    "src": "19521:6:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 22830,
                                    "name": "selectedUserTradeData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22671,
                                    "src": "19529:21:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  ],
                                  "id": 22828,
                                  "name": "_allowanceIsProvided",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23128,
                                  "src": "19500:20:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_UserTradeData_$21895_memory_ptr_$returns$_t_bool_$",
                                    "typeString": "function (address,struct Swaps.UserTradeData memory) view returns (bool)"
                                  }
                                },
                                "id": 22831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19500:51:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "416c6c6f77616e6365206e6565647320746f2062652070726f766964656420696e20746f6b656e20736d61727420636f6e7472616374206669727374",
                                "id": 22832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19553:62:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_89aa5a265da805686932ae094ba24a71109e8058a4d7df537bdb317139a2f40b",
                                  "typeString": "literal_string \"Allowance needs to be provided in token smart contract first\""
                                },
                                "value": "Allowance needs to be provided in token smart contract first"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_89aa5a265da805686932ae094ba24a71109e8058a4d7df537bdb317139a2f40b",
                                  "typeString": "literal_string \"Allowance needs to be provided in token smart contract first\""
                                }
                              ],
                              "id": 22827,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "19492:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 22833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19492:124:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 22834,
                          "nodeType": "ExpressionStatement",
                          "src": "19492:124:71"
                        }
                      ]
                    },
                    "id": 22836,
                    "nodeType": "IfStatement",
                    "src": "19235:388:71",
                    "trueBody": {
                      "id": 22826,
                      "nodeType": "Block",
                      "src": "19290:144:71",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 22819,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22594,
                                    "src": "19320:6:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 22820,
                                    "name": "recipientHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22620,
                                    "src": "19328:15:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 22821,
                                    "name": "selectedUserTradeData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22671,
                                    "src": "19345:21:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                      "typeString": "struct Swaps.UserTradeData memory"
                                    }
                                  ],
                                  "id": 22818,
                                  "name": "_holdExists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24599,
                                  "src": "19308:11:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_struct$_UserTradeData_$21895_memory_ptr_$returns$_t_bool_$",
                                    "typeString": "function (address,address,struct Swaps.UserTradeData memory) view returns (bool)"
                                  }
                                },
                                "id": 22822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19308:59:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "486f6c64206e6565647320746f2062652070726f766964656420696e20746f6b656e20736d61727420636f6e7472616374206669727374",
                                "id": 22823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19369:57:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_da45f966b1666be0485ea33966a8cad21440f8e36525938af606e1c834d9b4c8",
                                  "typeString": "literal_string \"Hold needs to be provided in token smart contract first\""
                                },
                                "value": "Hold needs to be provided in token smart contract first"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_da45f966b1666be0485ea33966a8cad21440f8e36525938af606e1c834d9b4c8",
                                  "typeString": "literal_string \"Hold needs to be provided in token smart contract first\""
                                }
                              ],
                              "id": 22817,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "19300:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 22824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19300:127:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 22825,
                          "nodeType": "ExpressionStatement",
                          "src": "19300:127:71"
                        }
                      ]
                    }
                  },
                  "id": 22837,
                  "nodeType": "IfStatement",
                  "src": "18028:1595:71",
                  "trueBody": {
                    "id": 22811,
                    "nodeType": "Block",
                    "src": "18084:1145:71",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Standard_$21813",
                            "typeString": "enum Swaps.Standard"
                          },
                          "id": 22699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 22695,
                              "name": "selectedUserTradeData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22671,
                              "src": "18095:21:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            },
                            "id": 22696,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenStandard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21887,
                            "src": "18095:35:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 22697,
                              "name": "Standard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21813,
                              "src": "18134:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                "typeString": "type(enum Swaps.Standard)"
                              }
                            },
                            "id": 22698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21809,
                            "src": "18134:12:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "src": "18095:51:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            },
                            "id": 22713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 22709,
                                "name": "selectedUserTradeData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22671,
                                "src": "18261:21:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                  "typeString": "struct Swaps.UserTradeData memory"
                                }
                              },
                              "id": 22710,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenStandard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21887,
                              "src": "18261:35:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Standard_$21813",
                                "typeString": "enum Swaps.Standard"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 22711,
                                "name": "Standard",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21813,
                                "src": "18300:8:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                  "typeString": "type(enum Swaps.Standard)"
                                }
                              },
                              "id": 22712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21810,
                              "src": "18300:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Standard_$21813",
                                "typeString": "enum Swaps.Standard"
                              }
                            },
                            "src": "18261:53:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Standard_$21813",
                                "typeString": "enum Swaps.Standard"
                              },
                              "id": 22733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 22729,
                                  "name": "selectedUserTradeData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22671,
                                  "src": "18464:21:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                    "typeString": "struct Swaps.UserTradeData memory"
                                  }
                                },
                                "id": 22730,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21887,
                                "src": "18464:35:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Standard_$21813",
                                  "typeString": "enum Swaps.Standard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 22731,
                                  "name": "Standard",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21813,
                                  "src": "18503:8:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                    "typeString": "type(enum Swaps.Standard)"
                                  }
                                },
                                "id": 22732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ERC721",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21811,
                                "src": "18503:15:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Standard_$21813",
                                  "typeString": "enum Swaps.Standard"
                                }
                              },
                              "src": "18464:54:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 22761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_Standard_$21813",
                                        "typeString": "enum Swaps.Standard"
                                      },
                                      "id": 22756,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 22752,
                                          "name": "selectedUserTradeData",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 22671,
                                          "src": "18668:21:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                            "typeString": "struct Swaps.UserTradeData memory"
                                          }
                                        },
                                        "id": 22753,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "tokenStandard",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 21887,
                                        "src": "18668:35:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Standard_$21813",
                                          "typeString": "enum Swaps.Standard"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 22754,
                                          "name": "Standard",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 21813,
                                          "src": "18707:8:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                            "typeString": "type(enum Swaps.Standard)"
                                          }
                                        },
                                        "id": 22755,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "ERC1400",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 21812,
                                        "src": "18707:16:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Standard_$21813",
                                          "typeString": "enum Swaps.Standard"
                                        }
                                      },
                                      "src": "18668:55:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 22757,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "18667:57:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 22760,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 22758,
                                    "name": "erc1400TokenValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22598,
                                    "src": "18728:17:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 22759,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18749:1:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "18728:22:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "18667:83:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 22796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_Standard_$21813",
                                          "typeString": "enum Swaps.Standard"
                                        },
                                        "id": 22791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 22787,
                                            "name": "selectedUserTradeData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 22671,
                                            "src": "19016:21:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                              "typeString": "struct Swaps.UserTradeData memory"
                                            }
                                          },
                                          "id": 22788,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenStandard",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 21887,
                                          "src": "19016:35:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Standard_$21813",
                                            "typeString": "enum Swaps.Standard"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 22789,
                                            "name": "Standard",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 21813,
                                            "src": "19055:8:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                              "typeString": "type(enum Swaps.Standard)"
                                            }
                                          },
                                          "id": 22790,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "ERC1400",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 21812,
                                          "src": "19055:16:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Standard_$21813",
                                            "typeString": "enum Swaps.Standard"
                                          }
                                        },
                                        "src": "19016:55:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 22792,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "19015:57:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 22795,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 22793,
                                      "name": "erc1400TokenValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 22598,
                                      "src": "19076:17:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 22794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19097:1:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "19076:22:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "19015:83:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 22806,
                                "nodeType": "IfStatement",
                                "src": "19012:211:71",
                                "trueBody": {
                                  "id": 22805,
                                  "nodeType": "Block",
                                  "src": "19099:124:71",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 22801,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 22798,
                                              "name": "erc1400TokenValue",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 22598,
                                              "src": "19117:17:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 22799,
                                                "name": "selectedUserTradeData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 22671,
                                                "src": "19138:21:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                                  "typeString": "struct Swaps.UserTradeData memory"
                                                }
                                              },
                                              "id": 22800,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "tokenValue",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 21882,
                                              "src": "19138:32:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "19117:53:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          {
                                            "hexValue": "416d6f756e74206f66204552433134303020746f6b656e73206973206e6f7420636f7272656374",
                                            "id": 22802,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "19172:41:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_0d4b85b88b80072b90afee0107a9a29103e9d81c09bf5da6eae9a80121a9ce6b",
                                              "typeString": "literal_string \"Amount of ERC1400 tokens is not correct\""
                                            },
                                            "value": "Amount of ERC1400 tokens is not correct"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_0d4b85b88b80072b90afee0107a9a29103e9d81c09bf5da6eae9a80121a9ce6b",
                                              "typeString": "literal_string \"Amount of ERC1400 tokens is not correct\""
                                            }
                                          ],
                                          "id": 22797,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            4294967278,
                                            4294967278
                                          ],
                                          "referencedDeclaration": 4294967278,
                                          "src": "19109:7:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (bool,string memory) pure"
                                          }
                                        },
                                        "id": 22803,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19109:105:71",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 22804,
                                      "nodeType": "ExpressionStatement",
                                      "src": "19109:105:71"
                                    }
                                  ]
                                }
                              },
                              "id": 22807,
                              "nodeType": "IfStatement",
                              "src": "18664:559:71",
                              "trueBody": {
                                "id": 22786,
                                "nodeType": "Block",
                                "src": "18751:255:71",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 22767,
                                            "name": "selectedUserTradeData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 22671,
                                            "src": "18834:21:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                              "typeString": "struct Swaps.UserTradeData memory"
                                            }
                                          },
                                          "id": 22768,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenId",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 21884,
                                          "src": "18834:29:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 22769,
                                          "name": "sender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 22594,
                                          "src": "18865:6:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 22772,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967268,
                                              "src": "18881:4:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Swaps_$25543",
                                                "typeString": "contract Swaps"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_Swaps_$25543",
                                                "typeString": "contract Swaps"
                                              }
                                            ],
                                            "id": 22771,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "18873:7:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 22770,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "18873:7:71",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 22773,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18873:13:71",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 22774,
                                            "name": "selectedUserTradeData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 22671,
                                            "src": "18888:21:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                              "typeString": "struct Swaps.UserTradeData memory"
                                            }
                                          },
                                          "id": 22775,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenValue",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 21882,
                                          "src": "18888:32:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 22778,
                                              "name": "BYPASS_ACTION_FLAG",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 21804,
                                              "src": "18939:18:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "expression": {
                                              "id": 22776,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967295,
                                              "src": "18922:3:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 22777,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "18922:16:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 22779,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18922:36:71",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 22782,
                                              "name": "BYPASS_ACTION_FLAG",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 21804,
                                              "src": "18977:18:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "expression": {
                                              "id": 22780,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967295,
                                              "src": "18960:3:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 22781,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "18960:16:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 22783,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18960:36:71",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 22763,
                                                "name": "selectedUserTradeData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 22671,
                                                "src": "18770:21:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                                  "typeString": "struct Swaps.UserTradeData memory"
                                                }
                                              },
                                              "id": 22764,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "tokenAddress",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 21880,
                                              "src": "18770:34:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 22762,
                                            "name": "IERC1400",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7982,
                                            "src": "18761:8:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1400_$7982_$",
                                              "typeString": "type(contract IERC1400)"
                                            }
                                          },
                                          "id": 22765,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18761:44:71",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1400_$7982",
                                            "typeString": "contract IERC1400"
                                          }
                                        },
                                        "id": 22766,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "operatorTransferByPartition",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 7762,
                                        "src": "18761:72:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes32,address,address,uint256,bytes memory,bytes memory) external returns (bytes32)"
                                        }
                                      },
                                      "id": 22784,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18761:236:71",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 22785,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18761:236:71"
                                  }
                                ]
                              }
                            },
                            "id": 22808,
                            "nodeType": "IfStatement",
                            "src": "18461:762:71",
                            "trueBody": {
                              "id": 22751,
                              "nodeType": "Block",
                              "src": "18520:138:71",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 22739,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22594,
                                        "src": "18587:6:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 22742,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "18603:4:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Swaps_$25543",
                                              "typeString": "contract Swaps"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_Swaps_$25543",
                                              "typeString": "contract Swaps"
                                            }
                                          ],
                                          "id": 22741,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "18595:7:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 22740,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "18595:7:71",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 22743,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18595:13:71",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 22746,
                                              "name": "selectedUserTradeData",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 22671,
                                              "src": "18618:21:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                                "typeString": "struct Swaps.UserTradeData memory"
                                              }
                                            },
                                            "id": 22747,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "tokenId",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 21884,
                                            "src": "18618:29:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 22745,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "18610:7:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 22744,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "18610:7:71",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 22748,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18610:38:71",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 22735,
                                              "name": "selectedUserTradeData",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 22671,
                                              "src": "18538:21:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                                "typeString": "struct Swaps.UserTradeData memory"
                                              }
                                            },
                                            "id": 22736,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "tokenAddress",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 21880,
                                            "src": "18538:34:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 22734,
                                          "name": "IERC721",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2435,
                                          "src": "18530:7:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721_$2435_$",
                                            "typeString": "type(contract IERC721)"
                                          }
                                        },
                                        "id": 22737,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "18530:43:71",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC721_$2435",
                                          "typeString": "contract IERC721"
                                        }
                                      },
                                      "id": 22738,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2388,
                                      "src": "18530:56:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,uint256) external"
                                      }
                                    },
                                    "id": 22749,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18530:119:71",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 22750,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18530:119:71"
                                }
                              ]
                            }
                          },
                          "id": 22809,
                          "nodeType": "IfStatement",
                          "src": "18258:965:71",
                          "trueBody": {
                            "id": 22728,
                            "nodeType": "Block",
                            "src": "18316:139:71",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 22719,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 22594,
                                      "src": "18390:6:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 22722,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967268,
                                          "src": "18406:4:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Swaps_$25543",
                                            "typeString": "contract Swaps"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Swaps_$25543",
                                            "typeString": "contract Swaps"
                                          }
                                        ],
                                        "id": 22721,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "18398:7:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 22720,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "18398:7:71",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 22723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18398:13:71",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 22724,
                                        "name": "selectedUserTradeData",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22671,
                                        "src": "18413:21:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                          "typeString": "struct Swaps.UserTradeData memory"
                                        }
                                      },
                                      "id": 22725,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "tokenValue",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 21882,
                                      "src": "18413:32:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 22715,
                                            "name": "selectedUserTradeData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 22671,
                                            "src": "18341:21:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                              "typeString": "struct Swaps.UserTradeData memory"
                                            }
                                          },
                                          "id": 22716,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenAddress",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 21880,
                                          "src": "18341:34:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 22714,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1377,
                                        "src": "18334:6:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1377_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 22717,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18334:42:71",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1377",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 22718,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1358,
                                    "src": "18334:55:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 22726,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18334:112:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 22727,
                                "nodeType": "ExpressionStatement",
                                "src": "18334:112:71"
                              }
                            ]
                          }
                        },
                        "id": 22810,
                        "nodeType": "IfStatement",
                        "src": "18092:1131:71",
                        "trueBody": {
                          "id": 22708,
                          "nodeType": "Block",
                          "src": "18148:104:71",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 22704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 22701,
                                      "name": "ethValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 22596,
                                      "src": "18166:8:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 22702,
                                        "name": "selectedUserTradeData",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22671,
                                        "src": "18178:21:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                          "typeString": "struct Swaps.UserTradeData memory"
                                        }
                                      },
                                      "id": 22703,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "tokenValue",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 21882,
                                      "src": "18178:32:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "18166:44:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "416d6f756e74206f6620455448206973206e6f7420636f7272656374",
                                    "id": 22705,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18212:30:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3fdd50b576f957d76e864f96b9d0c991bd6b1f33ca019606da09db7f23167ec4",
                                      "typeString": "literal_string \"Amount of ETH is not correct\""
                                    },
                                    "value": "Amount of ETH is not correct"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3fdd50b576f957d76e864f96b9d0c991bd6b1f33ca019606da09db7f23167ec4",
                                      "typeString": "literal_string \"Amount of ETH is not correct\""
                                    }
                                  ],
                                  "id": 22700,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "18158:7:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 22706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18158:85:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 22707,
                              "nodeType": "ExpressionStatement",
                              "src": "18158:85:71"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 22841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 22838,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22594,
                      "src": "19632:6:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 22839,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22605,
                        "src": "19642:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 22840,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21932,
                      "src": "19642:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19632:23:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 22859,
                    "nodeType": "Block",
                    "src": "19714:51:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 22857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "id": 22851,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22605,
                                "src": "19722:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 22854,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21946,
                              "src": "19722:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 22855,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21889,
                            "src": "19722:29:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 22856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19754:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "19722:36:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 22858,
                        "nodeType": "ExpressionStatement",
                        "src": "19722:36:71"
                      }
                    ]
                  },
                  "id": 22860,
                  "nodeType": "IfStatement",
                  "src": "19629:136:71",
                  "trueBody": {
                    "id": 22850,
                    "nodeType": "Block",
                    "src": "19657:51:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 22848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "id": 22842,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22605,
                                "src": "19665:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 22845,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21943,
                              "src": "19665:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 22846,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "accepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21889,
                            "src": "19665:29:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 22847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19697:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "19665:36:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 22849,
                        "nodeType": "ExpressionStatement",
                        "src": "19665:36:71"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    22862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22862,
                      "mutability": "mutable",
                      "name": "settlementDatePassed",
                      "nameLocation": "19781:20:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 22961,
                      "src": "19776:25:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 22861,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19776:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22868,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 22863,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "19804:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 22864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "19804:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 22865,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22605,
                        "src": "19823:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 22866,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "settlementDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21940,
                      "src": "19823:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19804:39:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19776:67:71"
                },
                {
                  "assignments": [
                    22870
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22870,
                      "mutability": "mutable",
                      "name": "tradeApproved",
                      "nameLocation": "19854:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 22961,
                      "src": "19849:18:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 22869,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19849:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22874,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 22872,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22592,
                        "src": "19893:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22871,
                      "name": "getTradeApprovalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23300,
                      "src": "19870:22:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 22873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19870:29:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19849:50:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 22899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 22897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 22890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 22883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 22875,
                            "name": "settlementDatePassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22862,
                            "src": "20369:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 22882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 22876,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22605,
                                "src": "20393:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 22877,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21936,
                              "src": "20393:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 22880,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20419:1:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 22879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "20411:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 22878,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "20411:7:71",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 22881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20411:10:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "20393:28:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "20369:52:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_TradeType_$21823",
                            "typeString": "enum Swaps.TradeType"
                          },
                          "id": 22889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 22884,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22605,
                                "src": "20425:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 22885,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21943,
                              "src": "20425:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 22886,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21894,
                            "src": "20425:30:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 22887,
                              "name": "TradeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21823,
                              "src": "20459:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                "typeString": "type(enum Swaps.TradeType)"
                              }
                            },
                            "id": 22888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Hold",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21821,
                            "src": "20459:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "src": "20425:48:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "20369:104:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_TradeType_$21823",
                          "typeString": "enum Swaps.TradeType"
                        },
                        "id": 22896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 22891,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22605,
                              "src": "20477:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 22892,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userTradeData2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21946,
                            "src": "20477:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                              "typeString": "struct Swaps.UserTradeData storage ref"
                            }
                          },
                          "id": 22893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tradeType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21894,
                          "src": "20477:30:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TradeType_$21823",
                            "typeString": "enum Swaps.TradeType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 22894,
                            "name": "TradeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21823,
                            "src": "20511:9:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                              "typeString": "type(enum Swaps.TradeType)"
                            }
                          },
                          "id": 22895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Hold",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21821,
                          "src": "20511:14:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TradeType_$21823",
                            "typeString": "enum Swaps.TradeType"
                          }
                        },
                        "src": "20477:48:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "20369:156:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 22898,
                      "name": "tradeApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22870,
                      "src": "20529:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "20369:173:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22938,
                  "nodeType": "IfStatement",
                  "src": "20365:672:71",
                  "trueBody": {
                    "id": 22937,
                    "nodeType": "Block",
                    "src": "20544:493:71",
                    "statements": [
                      {
                        "assignments": [
                          22902
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 22902,
                            "mutability": "mutable",
                            "name": "otherUserTradeData",
                            "nameLocation": "20658:18:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 22937,
                            "src": "20637:39:71",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData"
                            },
                            "typeName": {
                              "id": 22901,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 22900,
                                "name": "UserTradeData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 21895,
                                "src": "20637:13:71"
                              },
                              "referencedDeclaration": 21895,
                              "src": "20637:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                                "typeString": "struct Swaps.UserTradeData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 22913,
                        "initialValue": {
                          "condition": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 22906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 22903,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22594,
                                  "src": "20680:6:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 22904,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22605,
                                    "src": "20690:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 22905,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "holder1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21932,
                                  "src": "20690:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "20680:23:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 22907,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "20679:25:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "id": 22910,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22605,
                              "src": "20730:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 22911,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userTradeData1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21943,
                            "src": "20730:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                              "typeString": "struct Swaps.UserTradeData storage ref"
                            }
                          },
                          "id": 22912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "20679:71:71",
                          "trueExpression": {
                            "expression": {
                              "id": 22908,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22605,
                              "src": "20707:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 22909,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userTradeData2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21946,
                            "src": "20707:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                              "typeString": "struct Swaps.UserTradeData storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                            "typeString": "struct Swaps.UserTradeData storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20637:113:71"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 22915,
                              "name": "recipientHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22620,
                              "src": "20774:15:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22916,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22594,
                              "src": "20791:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 22917,
                              "name": "otherUserTradeData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22902,
                              "src": "20799:18:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                "typeString": "struct Swaps.UserTradeData memory"
                              }
                            ],
                            "id": 22914,
                            "name": "_holdExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24599,
                            "src": "20762:11:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_struct$_UserTradeData_$21895_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,address,struct Swaps.UserTradeData memory) view returns (bool)"
                            }
                          },
                          "id": 22918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20762:56:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 22936,
                        "nodeType": "IfStatement",
                        "src": "20758:273:71",
                        "trueBody": {
                          "id": 22935,
                          "nodeType": "Block",
                          "src": "20820:211:71",
                          "statements": [
                            {
                              "expression": {
                                "id": 22925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "id": 22919,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 22605,
                                      "src": "20940:5:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 22922,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "userTradeData1",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21943,
                                    "src": "20940:20:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                      "typeString": "struct Swaps.UserTradeData storage ref"
                                    }
                                  },
                                  "id": 22923,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "accepted",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21889,
                                  "src": "20940:29:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 22924,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20972:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "20940:36:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 22926,
                              "nodeType": "ExpressionStatement",
                              "src": "20940:36:71"
                            },
                            {
                              "expression": {
                                "id": 22933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "expression": {
                                      "id": 22927,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 22605,
                                      "src": "20986:5:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 22930,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "userTradeData2",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21946,
                                    "src": "20986:20:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                      "typeString": "struct Swaps.UserTradeData storage ref"
                                    }
                                  },
                                  "id": 22931,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "accepted",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21889,
                                  "src": "20986:29:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 22932,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21018:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "20986:36:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 22934,
                              "nodeType": "ExpressionStatement",
                              "src": "20986:36:71"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 22953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 22951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 22949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 22945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 22939,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22605,
                              "src": "21053:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 22940,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "executer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21936,
                            "src": "21053:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 22943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21079:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 22942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21071:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 22941,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21071:7:71",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 22944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21071:10:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "21053:28:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 22947,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22592,
                              "src": "21110:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 22946,
                            "name": "getTradeAcceptanceStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23030,
                            "src": "21085:24:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 22948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21085:31:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "21053:63:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "id": 22950,
                        "name": "tradeApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22870,
                        "src": "21120:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "21053:80:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 22952,
                      "name": "settlementDatePassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22862,
                      "src": "21137:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "21053:104:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22960,
                  "nodeType": "IfStatement",
                  "src": "21043:161:71",
                  "trueBody": {
                    "id": 22959,
                    "nodeType": "Block",
                    "src": "21159:45:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 22955,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22592,
                              "src": "21181:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 22956,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22600,
                              "src": "21188:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 22954,
                            "name": "_executeTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23498,
                            "src": "21167:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 22957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21167:30:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22958,
                        "nodeType": "ExpressionStatement",
                        "src": "21167:30:71"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 22590,
              "nodeType": "StructuredDocumentation",
              "src": "16923:275:71",
              "text": " @dev Accept a given trade (+ potentially escrow tokens).\n @param index Index of the trade to be accepted.\n @param sender Message sender\n @param ethValue Value sent (only used for ETH)\n @param erc1400TokenValue Value sent (only used for ERC1400)"
            },
            "id": 22962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_acceptTrade",
            "nameLocation": "17210:12:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22592,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "17231:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22962,
                  "src": "17223:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17223:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22594,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "17246:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22962,
                  "src": "17238:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17238:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22596,
                  "mutability": "mutable",
                  "name": "ethValue",
                  "nameLocation": "17262:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22962,
                  "src": "17254:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17254:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22598,
                  "mutability": "mutable",
                  "name": "erc1400TokenValue",
                  "nameLocation": "17280:17:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22962,
                  "src": "17272:25:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17272:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22600,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "17307:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 22962,
                  "src": "17299:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22599,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17299:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17222:94:71"
            },
            "returnParameters": {
              "id": 22602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17326:0:71"
            },
            "scope": 25543,
            "src": "17201:4007:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23029,
              "nodeType": "Block",
              "src": "21522:486:71",
              "statements": [
                {
                  "assignments": [
                    22972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22972,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "21542:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23029,
                      "src": "21528:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 22971,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 22970,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "21528:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "21528:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22976,
                  "initialValue": {
                    "baseExpression": {
                      "id": 22973,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "21550:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 22975,
                    "indexExpression": {
                      "id": 22974,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22965,
                      "src": "21558:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21550:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21528:36:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$21819",
                      "typeString": "enum Swaps.State"
                    },
                    "id": 22981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 22977,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22972,
                        "src": "21574:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 22978,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21949,
                      "src": "21574:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$21819",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 22979,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21819,
                        "src": "21589:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$21819_$",
                          "typeString": "type(enum Swaps.State)"
                        }
                      },
                      "id": 22980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Pending",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21815,
                      "src": "21589:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$21819",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "src": "21574:28:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23019,
                  "nodeType": "IfStatement",
                  "src": "21571:356:71",
                  "trueBody": {
                    "id": 23018,
                    "nodeType": "Block",
                    "src": "21604:323:71",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 22995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            },
                            "id": 22987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 22982,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22972,
                                  "src": "21615:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 22983,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "userTradeData1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21943,
                                "src": "21615:20:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                  "typeString": "struct Swaps.UserTradeData storage ref"
                                }
                              },
                              "id": 22984,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tradeType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21894,
                              "src": "21615:30:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 22985,
                                "name": "TradeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21823,
                                "src": "21649:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                  "typeString": "type(enum Swaps.TradeType)"
                                }
                              },
                              "id": 22986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21820,
                              "src": "21649:19:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "src": "21615:53:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 22994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "21672:58:71",
                            "subExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 22989,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22972,
                                    "src": "21694:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 22990,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "holder1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21932,
                                  "src": "21694:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 22991,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22972,
                                    "src": "21709:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 22992,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "userTradeData1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21943,
                                  "src": "21709:20:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                    "typeString": "struct Swaps.UserTradeData storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                    "typeString": "struct Swaps.UserTradeData storage ref"
                                  }
                                ],
                                "id": 22988,
                                "name": "_allowanceIsProvided",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23128,
                                "src": "21673:20:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_UserTradeData_$21895_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,struct Swaps.UserTradeData memory) view returns (bool)"
                                }
                              },
                              "id": 22993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21673:57:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "21615:115:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 22999,
                        "nodeType": "IfStatement",
                        "src": "21612:151:71",
                        "trueBody": {
                          "id": 22998,
                          "nodeType": "Block",
                          "src": "21732:31:71",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 22996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21749:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 22969,
                              "id": 22997,
                              "nodeType": "Return",
                              "src": "21742:12:71"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 23013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            },
                            "id": 23005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 23000,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22972,
                                  "src": "21773:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 23001,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "userTradeData2",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21946,
                                "src": "21773:20:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                  "typeString": "struct Swaps.UserTradeData storage ref"
                                }
                              },
                              "id": 23002,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tradeType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21894,
                              "src": "21773:30:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 23003,
                                "name": "TradeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21823,
                                "src": "21807:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                  "typeString": "type(enum Swaps.TradeType)"
                                }
                              },
                              "id": 23004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21820,
                              "src": "21807:19:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "src": "21773:53:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 23012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "21830:58:71",
                            "subExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 23007,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22972,
                                    "src": "21852:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 23008,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "holder2",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21934,
                                  "src": "21852:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 23009,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22972,
                                    "src": "21867:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 23010,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "userTradeData2",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21946,
                                  "src": "21867:20:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                    "typeString": "struct Swaps.UserTradeData storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                    "typeString": "struct Swaps.UserTradeData storage ref"
                                  }
                                ],
                                "id": 23006,
                                "name": "_allowanceIsProvided",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23128,
                                "src": "21831:20:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_UserTradeData_$21895_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,struct Swaps.UserTradeData memory) view returns (bool)"
                                }
                              },
                              "id": 23011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21831:57:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "21773:115:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23017,
                        "nodeType": "IfStatement",
                        "src": "21770:151:71",
                        "trueBody": {
                          "id": 23016,
                          "nodeType": "Block",
                          "src": "21890:31:71",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 23014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21907:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 22969,
                              "id": 23015,
                              "nodeType": "Return",
                              "src": "21900:12:71"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 23026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 23020,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22972,
                              "src": "21940:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 23021,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userTradeData1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21943,
                            "src": "21940:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                              "typeString": "struct Swaps.UserTradeData storage ref"
                            }
                          },
                          "id": 23022,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accepted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21889,
                          "src": "21940:29:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 23023,
                              "name": "trade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22972,
                              "src": "21973:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                "typeString": "struct Swaps.Trade storage pointer"
                              }
                            },
                            "id": 23024,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "userTradeData2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21946,
                            "src": "21973:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                              "typeString": "struct Swaps.UserTradeData storage ref"
                            }
                          },
                          "id": 23025,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accepted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21889,
                          "src": "21973:29:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "21940:62:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 23027,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "21939:64:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 22969,
                  "id": 23028,
                  "nodeType": "Return",
                  "src": "21933:70:71"
                }
              ]
            },
            "documentation": {
              "id": 22963,
              "nodeType": "StructuredDocumentation",
              "src": "21211:233:71",
              "text": " @dev Verify if a trade has been accepted by the token holders.\n The trade needs to be accepted by both parties (token holders) before it gets executed.\n @param index Index of the trade to be accepted."
            },
            "functionSelector": "35341464",
            "id": 23030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradeAcceptanceStatus",
            "nameLocation": "21456:24:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22965,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "21489:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23030,
                  "src": "21481:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21481:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21480:15:71"
            },
            "returnParameters": {
              "id": 22969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23030,
                  "src": "21516:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22967,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21516:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21515:6:71"
            },
            "scope": 25543,
            "src": "21447:561:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23127,
              "nodeType": "Block",
              "src": "22391:661:71",
              "statements": [
                {
                  "assignments": [
                    23042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23042,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "22405:12:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23127,
                      "src": "22397:20:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23041,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "22397:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23045,
                  "initialValue": {
                    "expression": {
                      "id": 23043,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23036,
                      "src": "22420:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 23044,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21880,
                    "src": "22420:26:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22397:49:71"
                },
                {
                  "assignments": [
                    23047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23047,
                      "mutability": "mutable",
                      "name": "tokenValue",
                      "nameLocation": "22460:10:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23127,
                      "src": "22452:18:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23046,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22452:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23050,
                  "initialValue": {
                    "expression": {
                      "id": 23048,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23036,
                      "src": "22473:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 23049,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21882,
                    "src": "22473:24:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22452:45:71"
                },
                {
                  "assignments": [
                    23052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23052,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "22511:7:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23127,
                      "src": "22503:15:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 23051,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "22503:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23055,
                  "initialValue": {
                    "expression": {
                      "id": 23053,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23036,
                      "src": "22521:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 23054,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21884,
                    "src": "22521:21:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22503:39:71"
                },
                {
                  "assignments": [
                    23058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23058,
                      "mutability": "mutable",
                      "name": "tokenStandard",
                      "nameLocation": "22557:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23127,
                      "src": "22548:22:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      },
                      "typeName": {
                        "id": 23057,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23056,
                          "name": "Standard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21813,
                          "src": "22548:8:71"
                        },
                        "referencedDeclaration": 21813,
                        "src": "22548:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23061,
                  "initialValue": {
                    "expression": {
                      "id": 23059,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23036,
                      "src": "22573:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 23060,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenStandard",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21887,
                    "src": "22573:27:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22548:52:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 23065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23062,
                      "name": "tokenStandard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23058,
                      "src": "22610:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 23063,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21813,
                        "src": "22627:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 23064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21810,
                      "src": "22627:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "22610:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      },
                      "id": 23084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 23081,
                        "name": "tokenStandard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23058,
                        "src": "22750:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 23082,
                          "name": "Standard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21813,
                          "src": "22767:8:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                            "typeString": "type(enum Swaps.Standard)"
                          }
                        },
                        "id": 23083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ERC721",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21811,
                        "src": "22767:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "src": "22750:32:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        },
                        "id": 23105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23102,
                          "name": "tokenStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23058,
                          "src": "22884:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Standard_$21813",
                            "typeString": "enum Swaps.Standard"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 23103,
                            "name": "Standard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21813,
                            "src": "22901:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                              "typeString": "type(enum Swaps.Standard)"
                            }
                          },
                          "id": 23104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ERC1400",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21812,
                          "src": "22901:16:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Standard_$21813",
                            "typeString": "enum Swaps.Standard"
                          }
                        },
                        "src": "22884:33:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 23122,
                      "nodeType": "IfStatement",
                      "src": "22881:149:71",
                      "trueBody": {
                        "id": 23121,
                        "nodeType": "Block",
                        "src": "22918:112:71",
                        "statements": [
                          {
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 23118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 23110,
                                        "name": "tokenId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23052,
                                        "src": "22977:7:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "id": 23111,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23033,
                                        "src": "22986:6:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 23114,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967268,
                                            "src": "23002:4:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Swaps_$25543",
                                              "typeString": "contract Swaps"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_Swaps_$25543",
                                              "typeString": "contract Swaps"
                                            }
                                          ],
                                          "id": 23113,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "22994:7:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 23112,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "22994:7:71",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 23115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "22994:13:71",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 23107,
                                            "name": "tokenAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 23042,
                                            "src": "22942:12:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 23106,
                                          "name": "IERC1400",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7982,
                                          "src": "22933:8:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1400_$7982_$",
                                            "typeString": "type(contract IERC1400)"
                                          }
                                        },
                                        "id": 23108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "22933:22:71",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC1400_$7982",
                                          "typeString": "contract IERC1400"
                                        }
                                      },
                                      "id": 23109,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "allowanceByPartition",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7773,
                                      "src": "22933:43:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (bytes32,address,address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 23116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22933:75:71",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "id": 23117,
                                    "name": "tokenValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23047,
                                    "src": "23012:10:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "22933:89:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 23119,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "22932:91:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 23040,
                            "id": 23120,
                            "nodeType": "Return",
                            "src": "22926:97:71"
                          }
                        ]
                      }
                    },
                    "id": 23123,
                    "nodeType": "IfStatement",
                    "src": "22747:283:71",
                    "trueBody": {
                      "id": 23101,
                      "nodeType": "Block",
                      "src": "22784:91:71",
                      "statements": [
                        {
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 23098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 23091,
                                          "name": "tokenId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23052,
                                          "src": "22841:7:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 23090,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "22833:7:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 23089,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "22833:7:71",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 23092,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22833:16:71",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 23086,
                                          "name": "tokenAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23042,
                                          "src": "22807:12:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 23085,
                                        "name": "IERC721",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2435,
                                        "src": "22799:7:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC721_$2435_$",
                                          "typeString": "type(contract IERC721)"
                                        }
                                      },
                                      "id": 23087,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22799:21:71",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC721_$2435",
                                        "typeString": "contract IERC721"
                                      }
                                    },
                                    "id": 23088,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getApproved",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2404,
                                    "src": "22799:33:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                      "typeString": "function (uint256) view external returns (address)"
                                    }
                                  },
                                  "id": 23093,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22799:51:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 23096,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "22862:4:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Swaps_$25543",
                                        "typeString": "contract Swaps"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Swaps_$25543",
                                        "typeString": "contract Swaps"
                                      }
                                    ],
                                    "id": 23095,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22854:7:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 23094,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22854:7:71",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 23097,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22854:13:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "22799:68:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 23099,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "22798:70:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 23040,
                          "id": 23100,
                          "nodeType": "Return",
                          "src": "22792:76:71"
                        }
                      ]
                    }
                  },
                  "id": 23124,
                  "nodeType": "IfStatement",
                  "src": "22607:423:71",
                  "trueBody": {
                    "id": 23080,
                    "nodeType": "Block",
                    "src": "22643:98:71",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 23077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 23070,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23033,
                                    "src": "22697:6:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 23073,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "22713:4:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Swaps_$25543",
                                          "typeString": "contract Swaps"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Swaps_$25543",
                                          "typeString": "contract Swaps"
                                        }
                                      ],
                                      "id": 23072,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "22705:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 23071,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "22705:7:71",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 23074,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22705:13:71",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 23067,
                                        "name": "tokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23042,
                                        "src": "22673:12:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 23066,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1377,
                                      "src": "22666:6:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1377_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 23068,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22666:20:71",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1377",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 23069,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1336,
                                  "src": "22666:30:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 23075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22666:53:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 23076,
                                "name": "tokenValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23047,
                                "src": "22723:10:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "22666:67:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 23078,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "22665:69:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 23040,
                        "id": 23079,
                        "nodeType": "Return",
                        "src": "22659:75:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 23125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "23043:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 23040,
                  "id": 23126,
                  "nodeType": "Return",
                  "src": "23036:11:71"
                }
              ]
            },
            "documentation": {
              "id": 23031,
              "nodeType": "StructuredDocumentation",
              "src": "22012:266:71",
              "text": " @dev Verify if a token allowance has been provided in token smart contract.\n @param sender Address of the sender.\n @param userTradeData Encoded pack of variables for the token (address, amount, id/partition, standard, accepted, approved)."
            },
            "id": 23128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_allowanceIsProvided",
            "nameLocation": "22290:20:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23033,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "22319:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23128,
                  "src": "22311:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22311:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23036,
                  "mutability": "mutable",
                  "name": "userTradeData",
                  "nameLocation": "22348:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23128,
                  "src": "22327:34:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  },
                  "typeName": {
                    "id": 23035,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23034,
                      "name": "UserTradeData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21895,
                      "src": "22327:13:71"
                    },
                    "referencedDeclaration": 21895,
                    "src": "22327:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22310:52:71"
            },
            "returnParameters": {
              "id": 23040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23128,
                  "src": "22385:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22385:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22384:6:71"
            },
            "scope": 25543,
            "src": "22281:771:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23141,
              "nodeType": "Block",
              "src": "23117:55:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23136,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23130,
                        "src": "23148:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23137,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23132,
                        "src": "23155:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23165:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23135,
                      "name": "approveTradeWithPreimage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23248,
                      "src": "23123:24:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bool,bytes32)"
                      }
                    },
                    "id": 23139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23123:44:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23140,
                  "nodeType": "ExpressionStatement",
                  "src": "23123:44:71"
                }
              ]
            },
            "functionSelector": "6775ce04",
            "id": 23142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveTrade",
            "nameLocation": "23065:12:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23130,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "23086:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23142,
                  "src": "23078:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23078:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23132,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "23098:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23142,
                  "src": "23093:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23131,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23093:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23077:30:71"
            },
            "returnParameters": {
              "id": 23134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23117:0:71"
            },
            "scope": 25543,
            "src": "23056:116:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23247,
              "nodeType": "Block",
              "src": "23887:747:71",
              "statements": [
                {
                  "assignments": [
                    23154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23154,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "23907:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23247,
                      "src": "23893:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 23153,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23152,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "23893:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "23893:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23158,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23155,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "23915:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 23157,
                    "indexExpression": {
                      "id": 23156,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23145,
                      "src": "23923:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23915:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23893:36:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$21819",
                          "typeString": "enum Swaps.State"
                        },
                        "id": 23164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23160,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23154,
                            "src": "23943:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 23161,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21949,
                          "src": "23943:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 23162,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21819,
                            "src": "23958:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$21819_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 23163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21815,
                          "src": "23958:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "src": "23943:28:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "id": 23165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23973:22:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        },
                        "value": "Trade is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        }
                      ],
                      "id": 23159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "23935:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23935:61:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23167,
                  "nodeType": "ExpressionStatement",
                  "src": "23935:61:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 23185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 23169,
                              "name": "_isTokenController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22004,
                              "src": "24011:18:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 23173,
                            "indexExpression": {
                              "expression": {
                                "expression": {
                                  "id": 23170,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23154,
                                  "src": "24030:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 23171,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "userTradeData1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21943,
                                "src": "24030:20:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                  "typeString": "struct Swaps.UserTradeData storage ref"
                                }
                              },
                              "id": 23172,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21880,
                              "src": "24030:33:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24011:53:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 23176,
                          "indexExpression": {
                            "expression": {
                              "id": 23174,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "24065:3:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 23175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "24065:10:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24011:65:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 23177,
                              "name": "_isTokenController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22004,
                              "src": "24080:18:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 23181,
                            "indexExpression": {
                              "expression": {
                                "expression": {
                                  "id": 23178,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23154,
                                  "src": "24099:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 23179,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "userTradeData2",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21946,
                                "src": "24099:20:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                  "typeString": "struct Swaps.UserTradeData storage ref"
                                }
                              },
                              "id": 23180,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21880,
                              "src": "24099:33:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24080:53:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 23184,
                          "indexExpression": {
                            "expression": {
                              "id": 23182,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "24134:3:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 23183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "24134:10:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24080:65:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "24011:134:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746f6b656e20636f6e74726f6c6c657273206f6620696e766f6c76656420746f6b656e732063616e20617070726f76652061207472616465",
                        "id": 23186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24147:63:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_373863ced32ac2eb9784d689aa574556050019791cd28b1e2777baf5ec9163da",
                          "typeString": "literal_string \"Only token controllers of involved tokens can approve a trade\""
                        },
                        "value": "Only token controllers of involved tokens can approve a trade"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_373863ced32ac2eb9784d689aa574556050019791cd28b1e2777baf5ec9163da",
                          "typeString": "literal_string \"Only token controllers of involved tokens can approve a trade\""
                        }
                      ],
                      "id": 23168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "24003:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24003:208:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23188,
                  "nodeType": "ExpressionStatement",
                  "src": "24003:208:71"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 23189,
                        "name": "_isTokenController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22004,
                        "src": "24221:18:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 23193,
                      "indexExpression": {
                        "expression": {
                          "expression": {
                            "id": 23190,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23154,
                            "src": "24240:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 23191,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userTradeData1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21943,
                          "src": "24240:20:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                            "typeString": "struct Swaps.UserTradeData storage ref"
                          }
                        },
                        "id": 23192,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21880,
                        "src": "24240:33:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24221:53:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 23196,
                    "indexExpression": {
                      "expression": {
                        "id": 23194,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "24275:3:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 23195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "24275:10:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24221:65:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23206,
                  "nodeType": "IfStatement",
                  "src": "24218:125:71",
                  "trueBody": {
                    "id": 23205,
                    "nodeType": "Block",
                    "src": "24288:55:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 23203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "id": 23197,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23154,
                                "src": "24296:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 23200,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21943,
                              "src": "24296:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 23201,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21891,
                            "src": "24296:29:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 23202,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23147,
                            "src": "24328:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "24296:40:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23204,
                        "nodeType": "ExpressionStatement",
                        "src": "24296:40:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 23207,
                        "name": "_isTokenController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22004,
                        "src": "24356:18:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 23211,
                      "indexExpression": {
                        "expression": {
                          "expression": {
                            "id": 23208,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23154,
                            "src": "24375:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 23209,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userTradeData2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21946,
                          "src": "24375:20:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                            "typeString": "struct Swaps.UserTradeData storage ref"
                          }
                        },
                        "id": 23210,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21880,
                        "src": "24375:33:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24356:53:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 23214,
                    "indexExpression": {
                      "expression": {
                        "id": 23212,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "24410:3:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 23213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "24410:10:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24356:65:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23224,
                  "nodeType": "IfStatement",
                  "src": "24353:125:71",
                  "trueBody": {
                    "id": 23223,
                    "nodeType": "Block",
                    "src": "24423:55:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 23221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "expression": {
                                "id": 23215,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23154,
                                "src": "24431:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 23218,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21946,
                              "src": "24431:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 23219,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21891,
                            "src": "24431:29:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 23220,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23147,
                            "src": "24463:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "24431:40:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23222,
                        "nodeType": "ExpressionStatement",
                        "src": "24431:40:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 23239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 23235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23225,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23154,
                            "src": "24487:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 23226,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21936,
                          "src": "24487:14:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24513:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "24505:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23227,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "24505:7:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24505:10:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "24487:28:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 23233,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23145,
                            "src": "24544:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 23232,
                          "name": "getTradeAcceptanceStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23030,
                          "src": "24519:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 23234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24519:31:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "24487:63:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 23237,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23145,
                          "src": "24577:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 23236,
                        "name": "getTradeApprovalStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23300,
                        "src": "24554:22:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 23238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24554:29:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "24487:96:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23246,
                  "nodeType": "IfStatement",
                  "src": "24484:146:71",
                  "trueBody": {
                    "id": 23245,
                    "nodeType": "Block",
                    "src": "24585:45:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23241,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23145,
                              "src": "24607:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 23242,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23149,
                              "src": "24614:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23240,
                            "name": "_executeTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23498,
                            "src": "24593:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,bytes32)"
                            }
                          },
                          "id": 23243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24593:30:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23244,
                        "nodeType": "ExpressionStatement",
                        "src": "24593:30:71"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 23143,
              "nodeType": "StructuredDocumentation",
              "src": "23176:619:71",
              "text": " @dev Approve a trade (if the tokens involved in the trade are controlled)\n This function can only be called by a token controller of one of the tokens involved in the trade.\n Indeed, when a token smart contract is controlled by an owner, the owner can decide to open the\n secondary market by:\n  - Allowlisting the Swaps smart contract\n  - Setting \"token controllers\" in the Swaps smart contract, in order to approve all the trades made with his token\n @param index Index of the trade to be executed.\n @param approved 'true' if trade is approved, 'false' if not."
            },
            "functionSelector": "2cb437d8",
            "id": 23248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveTradeWithPreimage",
            "nameLocation": "23807:24:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23145,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "23840:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23248,
                  "src": "23832:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23832:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23147,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "23852:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23248,
                  "src": "23847:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23146,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23847:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23149,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "23870:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23248,
                  "src": "23862:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23148,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23862:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23831:48:71"
            },
            "returnParameters": {
              "id": 23151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23887:0:71"
            },
            "scope": 25543,
            "src": "23798:836:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23299,
              "nodeType": "Block",
              "src": "24966:337:71",
              "statements": [
                {
                  "assignments": [
                    23258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23258,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "24986:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23299,
                      "src": "24972:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 23257,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23256,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "24972:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "24972:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23262,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23259,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "24994:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 23261,
                    "indexExpression": {
                      "id": 23260,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23251,
                      "src": "25002:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24994:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24972:36:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 23275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 23270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 23263,
                            "name": "_tokenControllers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21998,
                            "src": "25018:17:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(address => address[] storage ref)"
                            }
                          },
                          "id": 23267,
                          "indexExpression": {
                            "expression": {
                              "expression": {
                                "id": 23264,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23258,
                                "src": "25036:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 23265,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21943,
                              "src": "25036:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 23266,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21880,
                            "src": "25036:33:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25018:52:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 23268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "25018:59:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 23269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25081:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "25018:64:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 23274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "25086:30:71",
                      "subExpression": {
                        "expression": {
                          "expression": {
                            "id": 23271,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23258,
                            "src": "25087:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 23272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userTradeData1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21943,
                          "src": "25087:20:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                            "typeString": "struct Swaps.UserTradeData storage ref"
                          }
                        },
                        "id": 23273,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21891,
                        "src": "25087:29:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25018:98:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23279,
                  "nodeType": "IfStatement",
                  "src": "25015:130:71",
                  "trueBody": {
                    "id": 23278,
                    "nodeType": "Block",
                    "src": "25118:27:71",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 23276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25133:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 23255,
                        "id": 23277,
                        "nodeType": "Return",
                        "src": "25126:12:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 23292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 23287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 23280,
                            "name": "_tokenControllers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21998,
                            "src": "25154:17:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(address => address[] storage ref)"
                            }
                          },
                          "id": 23284,
                          "indexExpression": {
                            "expression": {
                              "expression": {
                                "id": 23281,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23258,
                                "src": "25172:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 23282,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21946,
                              "src": "25172:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 23283,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21880,
                            "src": "25172:33:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25154:52:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 23285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "25154:59:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 23286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25217:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "25154:64:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 23291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "25222:30:71",
                      "subExpression": {
                        "expression": {
                          "expression": {
                            "id": 23288,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23258,
                            "src": "25223:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 23289,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userTradeData2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21946,
                          "src": "25223:20:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                            "typeString": "struct Swaps.UserTradeData storage ref"
                          }
                        },
                        "id": 23290,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21891,
                        "src": "25223:29:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25154:98:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23296,
                  "nodeType": "IfStatement",
                  "src": "25151:130:71",
                  "trueBody": {
                    "id": 23295,
                    "nodeType": "Block",
                    "src": "25254:27:71",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 23293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25269:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 23255,
                        "id": 23294,
                        "nodeType": "Return",
                        "src": "25262:12:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 23297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "25294:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 23255,
                  "id": 23298,
                  "nodeType": "Return",
                  "src": "25287:11:71"
                }
              ]
            },
            "documentation": {
              "id": 23249,
              "nodeType": "StructuredDocumentation",
              "src": "24638:252:71",
              "text": " @dev Verify if a trade has been approved by the token controllers.\n In case a given token has token controllers, those need to validate the trade before it gets executed.\n @param index Index of the trade to be approved."
            },
            "functionSelector": "935259a8",
            "id": 23300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradeApprovalStatus",
            "nameLocation": "24902:22:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23251,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "24933:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23300,
                  "src": "24925:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24925:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24924:15:71"
            },
            "returnParameters": {
              "id": 23255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23300,
                  "src": "24960:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23253,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24960:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24959:6:71"
            },
            "scope": 25543,
            "src": "24893:410:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23310,
              "nodeType": "Block",
              "src": "25353:45:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23306,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23302,
                        "src": "25384:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25391:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23305,
                      "name": "executeTradeWithPreimage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23382,
                      "src": "25359:24:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 23308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25359:34:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23309,
                  "nodeType": "ExpressionStatement",
                  "src": "25359:34:71"
                }
              ]
            },
            "functionSelector": "02d2838b",
            "id": 23311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeTrade",
            "nameLocation": "25316:12:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23302,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "25337:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23311,
                  "src": "25329:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25329:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25328:15:71"
            },
            "returnParameters": {
              "id": 23304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25353:0:71"
            },
            "scope": 25543,
            "src": "25307:91:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23381,
              "nodeType": "Block",
              "src": "25827:635:71",
              "statements": [
                {
                  "assignments": [
                    23321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23321,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "25847:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23381,
                      "src": "25833:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 23320,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23319,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "25833:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "25833:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23325,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23322,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "25855:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 23324,
                    "indexExpression": {
                      "id": 23323,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23314,
                      "src": "25863:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25855:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25833:36:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$21819",
                          "typeString": "enum Swaps.State"
                        },
                        "id": 23331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23327,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23321,
                            "src": "25883:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 23328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21949,
                          "src": "25883:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 23329,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21819,
                            "src": "25898:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$21819_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 23330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21815,
                          "src": "25898:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "src": "25883:28:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "id": 23332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25913:22:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        },
                        "value": "Trade is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        }
                      ],
                      "id": 23326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "25875:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25875:61:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23334,
                  "nodeType": "ExpressionStatement",
                  "src": "25875:61:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 23341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 23335,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23321,
                        "src": "25946:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23336,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21936,
                      "src": "25946:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 23339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25972:1:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "25964:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 23337,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25964:7:71",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25964:10:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25946:28:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23352,
                  "nodeType": "IfStatement",
                  "src": "25943:153:71",
                  "trueBody": {
                    "id": 23351,
                    "nodeType": "Block",
                    "src": "25976:120:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 23347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 23343,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "25992:3:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 23344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "25992:10:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 23345,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23321,
                                  "src": "26006:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 23346,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "executer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21936,
                                "src": "26006:14:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "25992:28:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54726164652063616e206f6e6c7920626520657865637574656420627920657865637574657220646566696e6564206174207472616465206372656174696f6e",
                              "id": 23348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26022:66:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_05373b993917885459831a325920a48a75caf468c1ee77a796e72e930bff1b08",
                                "typeString": "literal_string \"Trade can only be executed by executer defined at trade creation\""
                              },
                              "value": "Trade can only be executed by executer defined at trade creation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_05373b993917885459831a325920a48a75caf468c1ee77a796e72e930bff1b08",
                                "typeString": "literal_string \"Trade can only be executed by executer defined at trade creation\""
                              }
                            ],
                            "id": 23342,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "25984:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 23349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25984:105:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23350,
                        "nodeType": "ExpressionStatement",
                        "src": "25984:105:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23354,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "26110:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 23355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "26110:15:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 23356,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23321,
                            "src": "26129:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 23357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "settlementDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21940,
                          "src": "26129:20:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26110:39:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206f6e6c79206265206578656375746564206f6e206f7220616674657220736574746c656d656e742064617465",
                        "id": 23359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26151:56:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc7a1d4adabd6d310d870246894e2ed12129fc57e2852560b268c1d1b670f52f",
                          "typeString": "literal_string \"Trade can only be executed on or after settlement date\""
                        },
                        "value": "Trade can only be executed on or after settlement date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc7a1d4adabd6d310d870246894e2ed12129fc57e2852560b268c1d1b670f52f",
                          "typeString": "literal_string \"Trade can only be executed on or after settlement date\""
                        }
                      ],
                      "id": 23353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "26102:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26102:106:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23361,
                  "nodeType": "ExpressionStatement",
                  "src": "26102:106:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23364,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23314,
                            "src": "26248:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 23363,
                          "name": "getTradeAcceptanceStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23030,
                          "src": "26223:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 23365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26223:31:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547261646520686173206e6f74206265656e20616363657074656420627920616c6c20746f6b656e20686f6c6465727320796574",
                        "id": 23366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26256:54:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b556a5d77d5a92d99d2da30cbb6be3fd94832b2e3e5f440b20345d863b04042",
                          "typeString": "literal_string \"Trade has not been accepted by all token holders yet\""
                        },
                        "value": "Trade has not been accepted by all token holders yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b556a5d77d5a92d99d2da30cbb6be3fd94832b2e3e5f440b20345d863b04042",
                          "typeString": "literal_string \"Trade has not been accepted by all token holders yet\""
                        }
                      ],
                      "id": 23362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "26215:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26215:96:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23368,
                  "nodeType": "ExpressionStatement",
                  "src": "26215:96:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23371,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23314,
                            "src": "26353:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 23370,
                          "name": "getTradeApprovalStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23300,
                          "src": "26330:22:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 23372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26330:29:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547261646520686173206e6f74206265656e20617070726f76656420627920616c6c20746f6b656e20636f6e74726f6c6c65727320796574",
                        "id": 23373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26361:58:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20db3929816dba2a8275bb33ef449b4b1729f4b33bc79b910811933ea2508b0c",
                          "typeString": "literal_string \"Trade has not been approved by all token controllers yet\""
                        },
                        "value": "Trade has not been approved by all token controllers yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20db3929816dba2a8275bb33ef449b4b1729f4b33bc79b910811933ea2508b0c",
                          "typeString": "literal_string \"Trade has not been approved by all token controllers yet\""
                        }
                      ],
                      "id": 23369,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "26322:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26322:98:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23375,
                  "nodeType": "ExpressionStatement",
                  "src": "26322:98:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23377,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23314,
                        "src": "26441:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23378,
                        "name": "preimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23316,
                        "src": "26448:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 23376,
                      "name": "_executeTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23498,
                      "src": "26427:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 23379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26427:30:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23380,
                  "nodeType": "ExpressionStatement",
                  "src": "26427:30:71"
                }
              ]
            },
            "documentation": {
              "id": 23312,
              "nodeType": "StructuredDocumentation",
              "src": "25402:348:71",
              "text": " @dev Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required).\n This function can only be called by the executer specified at trade creation.\n If no executer is specified, the trade can be launched by anyone.\n @param index Index of the trade to be executed."
            },
            "functionSelector": "582dcd13",
            "id": 23382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeTradeWithPreimage",
            "nameLocation": "25762:24:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23314,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "25795:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23382,
                  "src": "25787:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25787:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23316,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "25810:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23382,
                  "src": "25802:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23315,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25802:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25786:33:71"
            },
            "returnParameters": {
              "id": 23318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25827:0:71"
            },
            "scope": 25543,
            "src": "25753:709:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23497,
              "nodeType": "Block",
              "src": "26718:1066:71",
              "statements": [
                {
                  "assignments": [
                    23392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23392,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "26738:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23497,
                      "src": "26724:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 23391,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23390,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "26724:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "26724:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23396,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23393,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "26746:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 23395,
                    "indexExpression": {
                      "id": 23394,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23385,
                      "src": "26754:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26746:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26724:36:71"
                },
                {
                  "assignments": [
                    23398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23398,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "26775:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23497,
                      "src": "26767:13:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23397,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26767:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23402,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 23400,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23385,
                        "src": "26792:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23399,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25514,
                      "src": "26783:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 23401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26783:15:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26767:31:71"
                },
                {
                  "assignments": [
                    23404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23404,
                      "mutability": "mutable",
                      "name": "tokenValue1",
                      "nameLocation": "26813:11:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23497,
                      "src": "26805:19:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23403,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26805:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23408,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23405,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23392,
                        "src": "26827:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "26827:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23407,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21882,
                    "src": "26827:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26805:53:71"
                },
                {
                  "assignments": [
                    23410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23410,
                      "mutability": "mutable",
                      "name": "tokenValue2",
                      "nameLocation": "26872:11:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23497,
                      "src": "26864:19:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23409,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26864:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23414,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23411,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23392,
                        "src": "26886:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23412,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "26886:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23413,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21882,
                    "src": "26886:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26864:53:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23415,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23398,
                      "src": "26927:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 23416,
                      "name": "tokenValue2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23410,
                      "src": "26936:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26927:20:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 23488,
                    "nodeType": "Block",
                    "src": "27124:621:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 23447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 23440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 23438,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23398,
                                  "src": "27297:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 23439,
                                  "name": "tokenValue2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23410,
                                  "src": "27306:11:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27297:20:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_TradeType_$21823",
                                  "typeString": "enum Swaps.TradeType"
                                },
                                "id": 23446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 23441,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23392,
                                      "src": "27321:5:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 23442,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "userTradeData2",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21946,
                                    "src": "27321:20:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                      "typeString": "struct Swaps.UserTradeData storage ref"
                                    }
                                  },
                                  "id": 23443,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tradeType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21894,
                                  "src": "27321:30:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_TradeType_$21823",
                                    "typeString": "enum Swaps.TradeType"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 23444,
                                    "name": "TradeType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21823,
                                    "src": "27355:9:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                      "typeString": "type(enum Swaps.TradeType)"
                                    }
                                  },
                                  "id": 23445,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Hold",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21821,
                                  "src": "27355:14:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_TradeType_$21823",
                                    "typeString": "enum Swaps.TradeType"
                                  }
                                },
                                "src": "27321:48:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "27297:72:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "507269636520697320686967686572207468616e20616d6f756e7420657363726f7765642f617574686f72697a6564",
                              "id": 23448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27371:49:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cb1a1c99e78d317001cb18e0e43982675e357ca53b7a61f1a60755ef796f773",
                                "typeString": "literal_string \"Price is higher than amount escrowed/authorized\""
                              },
                              "value": "Price is higher than amount escrowed/authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cb1a1c99e78d317001cb18e0e43982675e357ca53b7a61f1a60755ef796f773",
                                "typeString": "literal_string \"Price is higher than amount escrowed/authorized\""
                              }
                            ],
                            "id": 23437,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "27289:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 23449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27289:132:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23450,
                        "nodeType": "ExpressionStatement",
                        "src": "27289:132:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23452,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23385,
                              "src": "27450:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 23453,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21826,
                                "src": "27457:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 23454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21824,
                              "src": "27457:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 23455,
                              "name": "tokenValue1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23404,
                              "src": "27473:11:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 23456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27486:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 23457,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23387,
                              "src": "27493:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23451,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23978,
                            "src": "27429:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 23458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27429:73:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23459,
                        "nodeType": "ExpressionStatement",
                        "src": "27429:73:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23461,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23385,
                              "src": "27531:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 23462,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21826,
                                "src": "27538:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 23463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21825,
                              "src": "27538:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 23464,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23398,
                              "src": "27554:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 23465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27561:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 23466,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23387,
                              "src": "27568:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23460,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23978,
                            "src": "27510:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 23467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27510:67:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23468,
                        "nodeType": "ExpressionStatement",
                        "src": "27510:67:71"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_TradeType_$21823",
                            "typeString": "enum Swaps.TradeType"
                          },
                          "id": 23474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 23469,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23392,
                                "src": "27588:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 23470,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21946,
                              "src": "27588:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 23471,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21894,
                            "src": "27588:30:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 23472,
                              "name": "TradeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21823,
                              "src": "27622:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                "typeString": "type(enum Swaps.TradeType)"
                              }
                            },
                            "id": 23473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Escrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21822,
                            "src": "27622:16:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "src": "27588:50:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23487,
                        "nodeType": "IfStatement",
                        "src": "27585:154:71",
                        "trueBody": {
                          "id": 23486,
                          "nodeType": "Block",
                          "src": "27640:99:71",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 23476,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23385,
                                    "src": "27671:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 23477,
                                      "name": "Holder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21826,
                                      "src": "27678:6:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                        "typeString": "type(enum Swaps.Holder)"
                                      }
                                    },
                                    "id": 23478,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Holder2",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21825,
                                    "src": "27678:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Holder_$21826",
                                      "typeString": "enum Swaps.Holder"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 23481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 23479,
                                      "name": "tokenValue2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23410,
                                      "src": "27694:11:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 23480,
                                      "name": "price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23398,
                                      "src": "27708:5:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "27694:19:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 23482,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "27715:4:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "id": 23483,
                                    "name": "preimage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23387,
                                    "src": "27721:8:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Holder_$21826",
                                      "typeString": "enum Swaps.Holder"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 23475,
                                  "name": "_transferUsersTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23978,
                                  "src": "27650:20:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                                    "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                                  }
                                },
                                "id": 23484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "27650:80:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 23485,
                              "nodeType": "ExpressionStatement",
                              "src": "27650:80:71"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 23489,
                  "nodeType": "IfStatement",
                  "src": "26924:821:71",
                  "trueBody": {
                    "id": 23436,
                    "nodeType": "Block",
                    "src": "26949:169:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23419,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23385,
                              "src": "26978:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 23420,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21826,
                                "src": "26985:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 23421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21824,
                              "src": "26985:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 23422,
                              "name": "tokenValue1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23404,
                              "src": "27001:11:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 23423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27014:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 23424,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23387,
                              "src": "27021:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23418,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23978,
                            "src": "26957:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 23425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26957:73:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23426,
                        "nodeType": "ExpressionStatement",
                        "src": "26957:73:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23428,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23385,
                              "src": "27059:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 23429,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21826,
                                "src": "27066:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 23430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21825,
                              "src": "27066:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 23431,
                              "name": "tokenValue2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23410,
                              "src": "27082:11:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 23432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27095:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 23433,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23387,
                              "src": "27102:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23427,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23978,
                            "src": "27038:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 23434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27038:73:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23435,
                        "nodeType": "ExpressionStatement",
                        "src": "27038:73:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 23495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23490,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23392,
                        "src": "27750:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23492,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21949,
                      "src": "27750:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$21819",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 23493,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21819,
                        "src": "27764:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$21819_$",
                          "typeString": "type(enum Swaps.State)"
                        }
                      },
                      "id": 23494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Executed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21816,
                      "src": "27764:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$21819",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "src": "27750:28:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$21819",
                      "typeString": "enum Swaps.State"
                    }
                  },
                  "id": 23496,
                  "nodeType": "ExpressionStatement",
                  "src": "27750:28:71"
                }
              ]
            },
            "documentation": {
              "id": 23383,
              "nodeType": "StructuredDocumentation",
              "src": "26466:184:71",
              "text": " @dev Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required).\n @param index Index of the trade to be executed."
            },
            "id": 23498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeTrade",
            "nameLocation": "26662:13:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23385,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "26684:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23498,
                  "src": "26676:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26676:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23387,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "26699:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23498,
                  "src": "26691:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23386,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26691:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26675:33:71"
            },
            "returnParameters": {
              "id": 23389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26718:0:71"
            },
            "scope": 25543,
            "src": "26653:1131:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23508,
              "nodeType": "Block",
              "src": "27832:43:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23504,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23500,
                        "src": "27861:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27868:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23503,
                      "name": "forceTradeWithPreimage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23674,
                      "src": "27838:22:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 23506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27838:32:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23507,
                  "nodeType": "ExpressionStatement",
                  "src": "27838:32:71"
                }
              ]
            },
            "functionSelector": "61108c06",
            "id": 23509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forceTrade",
            "nameLocation": "27797:10:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23500,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "27816:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23509,
                  "src": "27808:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27808:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27807:15:71"
            },
            "returnParameters": {
              "id": 23502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27832:0:71"
            },
            "scope": 25543,
            "src": "27788:87:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23673,
              "nodeType": "Block",
              "src": "28126:1401:71",
              "statements": [
                {
                  "assignments": [
                    23519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23519,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "28146:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23673,
                      "src": "28132:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 23518,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23517,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "28132:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "28132:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23523,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23520,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "28154:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 23522,
                    "indexExpression": {
                      "id": 23521,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23512,
                      "src": "28162:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28154:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28132:36:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$21819",
                          "typeString": "enum Swaps.State"
                        },
                        "id": 23529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23525,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23519,
                            "src": "28182:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 23526,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21949,
                          "src": "28182:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 23527,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21819,
                            "src": "28197:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$21819_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 23528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21815,
                          "src": "28197:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "src": "28182:28:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "id": 23530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28212:22:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        },
                        "value": "Trade is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        }
                      ],
                      "id": 23524,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "28174:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28174:61:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23532,
                  "nodeType": "ExpressionStatement",
                  "src": "28174:61:71"
                },
                {
                  "assignments": [
                    23534
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23534,
                      "mutability": "mutable",
                      "name": "tokenAddress1",
                      "nameLocation": "28254:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23673,
                      "src": "28246:21:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23533,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28246:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23538,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23535,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23519,
                        "src": "28270:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23536,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "28270:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23537,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21880,
                    "src": "28270:33:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28246:57:71"
                },
                {
                  "assignments": [
                    23540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23540,
                      "mutability": "mutable",
                      "name": "tokenValue1",
                      "nameLocation": "28317:11:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23673,
                      "src": "28309:19:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23539,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28309:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23544,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23541,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23519,
                        "src": "28331:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23542,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "28331:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23543,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21882,
                    "src": "28331:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28309:53:71"
                },
                {
                  "assignments": [
                    23546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23546,
                      "mutability": "mutable",
                      "name": "accepted1",
                      "nameLocation": "28373:9:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23673,
                      "src": "28368:14:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23545,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "28368:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23550,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23547,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23519,
                        "src": "28385:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23548,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "28385:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23549,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21889,
                    "src": "28385:29:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28368:46:71"
                },
                {
                  "assignments": [
                    23552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23552,
                      "mutability": "mutable",
                      "name": "tokenAddress2",
                      "nameLocation": "28429:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23673,
                      "src": "28421:21:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23551,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "28421:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23556,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23553,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23519,
                        "src": "28445:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23554,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "28445:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23555,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21880,
                    "src": "28445:33:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28421:57:71"
                },
                {
                  "assignments": [
                    23558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23558,
                      "mutability": "mutable",
                      "name": "tokenValue2",
                      "nameLocation": "28492:11:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23673,
                      "src": "28484:19:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23557,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28484:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23562,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23559,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23519,
                        "src": "28506:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23560,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "28506:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23561,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21882,
                    "src": "28506:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28484:53:71"
                },
                {
                  "assignments": [
                    23564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23564,
                      "mutability": "mutable",
                      "name": "accepted2",
                      "nameLocation": "28548:9:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23673,
                      "src": "28543:14:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23563,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "28543:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23568,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23565,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23519,
                        "src": "28560:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23566,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "28560:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23567,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21889,
                    "src": "28560:29:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28543:46:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "28604:25:71",
                        "subExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 23572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 23570,
                                "name": "accepted1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23546,
                                "src": "28606:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 23571,
                                "name": "accepted2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23564,
                                "src": "28619:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "28606:22:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 23573,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "28605:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6578656375746554726164652063616e2062652063616c6c6564",
                        "id": 23575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28631:28:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a65d6f43237034d44b2b9bea23e2173099b9a2624f45373df43a0b386609eb3c",
                          "typeString": "literal_string \"executeTrade can be called\""
                        },
                        "value": "executeTrade can be called"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a65d6f43237034d44b2b9bea23e2173099b9a2624f45373df43a0b386609eb3c",
                          "typeString": "literal_string \"executeTrade can be called\""
                        }
                      ],
                      "id": 23569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "28596:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28596:64:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23577,
                  "nodeType": "ExpressionStatement",
                  "src": "28596:64:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 23591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 23579,
                                "name": "_tokenControllers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21998,
                                "src": "28674:17:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 23581,
                              "indexExpression": {
                                "id": 23580,
                                "name": "tokenAddress1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23534,
                                "src": "28692:13:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28674:32:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 23582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "28674:39:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 23583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28717:1:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "28674:44:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 23585,
                                "name": "_tokenControllers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21998,
                                "src": "28722:17:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 23587,
                              "indexExpression": {
                                "id": 23586,
                                "name": "tokenAddress2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23552,
                                "src": "28740:13:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28722:32:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 23588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "28722:39:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 23589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28765:1:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "28722:44:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "28674:92:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206e6f7420626520666f7263656420696620746f6b656e73206861766520636f6e74726f6c6c657273",
                        "id": 23592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28768:52:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e59e007c4647d712b65f3ed438ec2af5656c5aa20116da30235e14fc2c290a3",
                          "typeString": "literal_string \"Trade can not be forced if tokens have controllers\""
                        },
                        "value": "Trade can not be forced if tokens have controllers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e59e007c4647d712b65f3ed438ec2af5656c5aa20116da30235e14fc2c290a3",
                          "typeString": "literal_string \"Trade can not be forced if tokens have controllers\""
                        }
                      ],
                      "id": 23578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "28666:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28666:155:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23594,
                  "nodeType": "ExpressionStatement",
                  "src": "28666:155:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 23601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 23595,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23519,
                        "src": "28831:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23596,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21936,
                      "src": "28831:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 23599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28857:1:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "28849:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 23597,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28849:7:71",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28849:10:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "28831:28:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "id": 23612,
                      "name": "accepted1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23546,
                      "src": "28966:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "id": 23623,
                        "name": "accepted2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23564,
                        "src": "29081:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 23638,
                        "nodeType": "Block",
                        "src": "29193:81:71",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "54726164652063616e277420626520666f7263656420617320746f6b656e7320617265206e6f7420617661696c61626c6520736f20666172",
                                  "id": 23635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "29208:58:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_cfd41566fc83253424c692dd5977dabc40d4800a378b116731c43ead1d396f63",
                                    "typeString": "literal_string \"Trade can't be forced as tokens are not available so far\""
                                  },
                                  "value": "Trade can't be forced as tokens are not available so far"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_cfd41566fc83253424c692dd5977dabc40d4800a378b116731c43ead1d396f63",
                                    "typeString": "literal_string \"Trade can't be forced as tokens are not available so far\""
                                  }
                                ],
                                "id": 23634,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967277,
                                  4294967277
                                ],
                                "referencedDeclaration": 4294967277,
                                "src": "29201:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 23636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29201:66:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 23637,
                            "nodeType": "ExpressionStatement",
                            "src": "29201:66:71"
                          }
                        ]
                      },
                      "id": 23639,
                      "nodeType": "IfStatement",
                      "src": "29078:196:71",
                      "trueBody": {
                        "id": 23633,
                        "nodeType": "Block",
                        "src": "29092:95:71",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 23629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 23625,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "29108:3:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 23626,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "29108:10:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 23627,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23519,
                                      "src": "29122:5:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 23628,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "holder2",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21934,
                                    "src": "29122:13:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "29108:27:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f72636520747261646520283229",
                                  "id": 23630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "29137:42:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f3ffbbdcd6ee2ecafc39ed8a1215a00ab98c19e6f204edac1d401983b57656b8",
                                    "typeString": "literal_string \"Sender is not allowed to force trade (2)\""
                                  },
                                  "value": "Sender is not allowed to force trade (2)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_f3ffbbdcd6ee2ecafc39ed8a1215a00ab98c19e6f204edac1d401983b57656b8",
                                    "typeString": "literal_string \"Sender is not allowed to force trade (2)\""
                                  }
                                ],
                                "id": 23624,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "29100:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 23631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "29100:80:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 23632,
                            "nodeType": "ExpressionStatement",
                            "src": "29100:80:71"
                          }
                        ]
                      }
                    },
                    "id": 23640,
                    "nodeType": "IfStatement",
                    "src": "28963:311:71",
                    "trueBody": {
                      "id": 23622,
                      "nodeType": "Block",
                      "src": "28977:95:71",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 23618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 23614,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "28993:3:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 23615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "28993:10:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 23616,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23519,
                                    "src": "29007:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 23617,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "holder1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21932,
                                  "src": "29007:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "28993:27:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f72636520747261646520283129",
                                "id": 23619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29022:42:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_255ed6eb6f30d1485f3dcafc169da0ede71d63ed3f663207dcd881f82aecfb81",
                                  "typeString": "literal_string \"Sender is not allowed to force trade (1)\""
                                },
                                "value": "Sender is not allowed to force trade (1)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_255ed6eb6f30d1485f3dcafc169da0ede71d63ed3f663207dcd881f82aecfb81",
                                  "typeString": "literal_string \"Sender is not allowed to force trade (1)\""
                                }
                              ],
                              "id": 23613,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "28985:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 23620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28985:80:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 23621,
                          "nodeType": "ExpressionStatement",
                          "src": "28985:80:71"
                        }
                      ]
                    }
                  },
                  "id": 23641,
                  "nodeType": "IfStatement",
                  "src": "28828:446:71",
                  "trueBody": {
                    "id": 23611,
                    "nodeType": "Block",
                    "src": "28861:96:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 23607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 23603,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "28877:3:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 23604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "28877:10:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 23605,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23519,
                                  "src": "28891:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 23606,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "executer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21936,
                                "src": "28891:14:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "28877:28:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f20666f72636520747261646520283029",
                              "id": 23608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28907:42:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d5872adc53feb1228a23992569f03c41f99efcc8573122308ea2220b7a8481b5",
                                "typeString": "literal_string \"Sender is not allowed to force trade (0)\""
                              },
                              "value": "Sender is not allowed to force trade (0)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d5872adc53feb1228a23992569f03c41f99efcc8573122308ea2220b7a8481b5",
                                "typeString": "literal_string \"Sender is not allowed to force trade (0)\""
                              }
                            ],
                            "id": 23602,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "28869:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 23609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28869:81:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23610,
                        "nodeType": "ExpressionStatement",
                        "src": "28869:81:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 23642,
                    "name": "accepted1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23546,
                    "src": "29283:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23653,
                  "nodeType": "IfStatement",
                  "src": "29280:102:71",
                  "trueBody": {
                    "id": 23652,
                    "nodeType": "Block",
                    "src": "29294:88:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23644,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23512,
                              "src": "29323:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 23645,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21826,
                                "src": "29330:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 23646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21824,
                              "src": "29330:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 23647,
                              "name": "tokenValue1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23540,
                              "src": "29346:11:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 23648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29359:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 23649,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23514,
                              "src": "29366:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23643,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23978,
                            "src": "29302:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 23650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29302:73:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23651,
                        "nodeType": "ExpressionStatement",
                        "src": "29302:73:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 23654,
                    "name": "accepted2",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23564,
                    "src": "29391:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23665,
                  "nodeType": "IfStatement",
                  "src": "29388:102:71",
                  "trueBody": {
                    "id": 23664,
                    "nodeType": "Block",
                    "src": "29402:88:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23656,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23512,
                              "src": "29431:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 23657,
                                "name": "Holder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21826,
                                "src": "29438:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                  "typeString": "type(enum Swaps.Holder)"
                                }
                              },
                              "id": 23658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Holder2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21825,
                              "src": "29438:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 23659,
                              "name": "tokenValue2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23558,
                              "src": "29454:11:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 23660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29467:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "id": 23661,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23514,
                              "src": "29474:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23655,
                            "name": "_transferUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23978,
                            "src": "29410:20:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 23662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29410:73:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23663,
                        "nodeType": "ExpressionStatement",
                        "src": "29410:73:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 23671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23666,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23519,
                        "src": "29496:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23668,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21949,
                      "src": "29496:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$21819",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 23669,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21819,
                        "src": "29510:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$21819_$",
                          "typeString": "type(enum Swaps.State)"
                        }
                      },
                      "id": 23670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Forced",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21817,
                      "src": "29510:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$21819",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "src": "29496:26:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$21819",
                      "typeString": "enum Swaps.State"
                    }
                  },
                  "id": 23672,
                  "nodeType": "ExpressionStatement",
                  "src": "29496:26:71"
                }
              ]
            },
            "documentation": {
              "id": 23510,
              "nodeType": "StructuredDocumentation",
              "src": "27879:172:71",
              "text": " @dev Force a trade execution in the Swaps contract by transferring tokens back to their target recipients.\n @param index Index of the trade to be forced."
            },
            "functionSelector": "d95b585e",
            "id": 23674,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forceTradeWithPreimage",
            "nameLocation": "28063:22:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23512,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "28094:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23674,
                  "src": "28086:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28086:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23514,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "28109:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23674,
                  "src": "28101:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23513,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "28101:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28085:33:71"
            },
            "returnParameters": {
              "id": 23516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28126:0:71"
            },
            "scope": 25543,
            "src": "28054:1473:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23913,
              "nodeType": "Block",
              "src": "29752:1785:71",
              "statements": [
                {
                  "assignments": [
                    23682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23682,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "29772:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23913,
                      "src": "29758:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 23681,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23680,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "29758:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "29758:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23686,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23683,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "29780:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 23685,
                    "indexExpression": {
                      "id": 23684,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23677,
                      "src": "29788:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "29780:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29758:36:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$21819",
                          "typeString": "enum Swaps.State"
                        },
                        "id": 23692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23688,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23682,
                            "src": "29808:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 23689,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21949,
                          "src": "29808:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 23690,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21819,
                            "src": "29823:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$21819_$",
                              "typeString": "type(enum Swaps.State)"
                            }
                          },
                          "id": 23691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21815,
                          "src": "29823:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$21819",
                            "typeString": "enum Swaps.State"
                          }
                        },
                        "src": "29808:28:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f742070656e64696e67",
                        "id": 23693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29838:22:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        },
                        "value": "Trade is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e231b6203d554050a3d3199e807f8cbd9f29dd790d2450a81df72ae0c3a2c875",
                          "typeString": "literal_string \"Trade is not pending\""
                        }
                      ],
                      "id": 23687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "29800:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29800:61:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23695,
                  "nodeType": "ExpressionStatement",
                  "src": "29800:61:71"
                },
                {
                  "assignments": [
                    23697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23697,
                      "mutability": "mutable",
                      "name": "tokenValue1",
                      "nameLocation": "29876:11:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23913,
                      "src": "29868:19:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23696,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "29868:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23701,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23698,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23682,
                        "src": "29890:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23699,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "29890:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23700,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21882,
                    "src": "29890:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29868:53:71"
                },
                {
                  "assignments": [
                    23703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23703,
                      "mutability": "mutable",
                      "name": "accepted1",
                      "nameLocation": "29932:9:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23913,
                      "src": "29927:14:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23702,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "29927:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23707,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23704,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23682,
                        "src": "29944:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23705,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "29944:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23706,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21889,
                    "src": "29944:29:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29927:46:71"
                },
                {
                  "assignments": [
                    23709
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23709,
                      "mutability": "mutable",
                      "name": "tokenValue2",
                      "nameLocation": "29988:11:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23913,
                      "src": "29980:19:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23708,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "29980:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23713,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23710,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23682,
                        "src": "30002:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23711,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "30002:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23712,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21882,
                    "src": "30002:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29980:53:71"
                },
                {
                  "assignments": [
                    23715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23715,
                      "mutability": "mutable",
                      "name": "accepted2",
                      "nameLocation": "30044:9:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23913,
                      "src": "30039:14:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23714,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "30039:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23719,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 23716,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23682,
                        "src": "30056:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23717,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "30056:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23718,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21889,
                    "src": "30056:29:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30039:46:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 23722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23720,
                      "name": "accepted1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23703,
                      "src": "30095:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 23721,
                      "name": "accepted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23715,
                      "src": "30108:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "30095:22:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "id": 23793,
                      "name": "accepted1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23703,
                      "src": "30645:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "id": 23837,
                        "name": "accepted2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23715,
                        "src": "30993:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 23902,
                        "nodeType": "Block",
                        "src": "31338:159:71",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 23898,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 23892,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 23886,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 23882,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "31354:3:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 23883,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "31354:10:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 23884,
                                          "name": "trade",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23682,
                                          "src": "31368:5:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                            "typeString": "struct Swaps.Trade storage pointer"
                                          }
                                        },
                                        "id": 23885,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "executer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 21936,
                                        "src": "31368:14:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "31354:28:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 23891,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 23887,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "31386:3:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 23888,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "31386:10:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 23889,
                                          "name": "trade",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23682,
                                          "src": "31400:5:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                            "typeString": "struct Swaps.Trade storage pointer"
                                          }
                                        },
                                        "id": 23890,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "holder1",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 21932,
                                        "src": "31400:13:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "31386:27:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "31354:59:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 23897,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 23893,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "31417:3:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 23894,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "31417:10:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 23895,
                                        "name": "trade",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23682,
                                        "src": "31431:5:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                          "typeString": "struct Swaps.Trade storage pointer"
                                        }
                                      },
                                      "id": 23896,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "holder2",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 21934,
                                      "src": "31431:13:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "31417:27:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "31354:90:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20747261646520283329",
                                  "id": 23899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "31446:43:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_62915fc4bdc23f948b008ac5bb93785842503d33f35707b31a531df5ef8b008f",
                                    "typeString": "literal_string \"Sender is not allowed to cancel trade (3)\""
                                  },
                                  "value": "Sender is not allowed to cancel trade (3)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_62915fc4bdc23f948b008ac5bb93785842503d33f35707b31a531df5ef8b008f",
                                    "typeString": "literal_string \"Sender is not allowed to cancel trade (3)\""
                                  }
                                ],
                                "id": 23881,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "31346:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 23900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31346:144:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 23901,
                            "nodeType": "ExpressionStatement",
                            "src": "31346:144:71"
                          }
                        ]
                      },
                      "id": 23903,
                      "nodeType": "IfStatement",
                      "src": "30990:507:71",
                      "trueBody": {
                        "id": 23880,
                        "nodeType": "Block",
                        "src": "31004:328:71",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 23856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 23843,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 23839,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "31020:3:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 23840,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "31020:10:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 23841,
                                        "name": "trade",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23682,
                                        "src": "31034:5:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                          "typeString": "struct Swaps.Trade storage pointer"
                                        }
                                      },
                                      "id": 23842,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "executer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 21936,
                                      "src": "31034:14:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "31020:28:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 23854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 23848,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 23844,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967292,
                                              "src": "31053:5:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 23845,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "31053:15:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": ">=",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 23846,
                                              "name": "trade",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 23682,
                                              "src": "31072:5:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                                "typeString": "struct Swaps.Trade storage pointer"
                                              }
                                            },
                                            "id": 23847,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "expirationDate",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 21938,
                                            "src": "31072:20:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "31053:39:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "&&",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 23853,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 23849,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967281,
                                              "src": "31096:3:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 23850,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "31096:10:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "id": 23851,
                                              "name": "trade",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 23682,
                                              "src": "31110:5:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                                "typeString": "struct Swaps.Trade storage pointer"
                                              }
                                            },
                                            "id": 23852,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "holder2",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 21934,
                                            "src": "31110:13:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "31096:27:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "31053:70:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 23855,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "31052:72:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "31020:104:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20747261646520283229",
                                  "id": 23857,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "31126:43:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ddc0ea0a3c16467f3e90962bae7c77db78af2e3817b9cf66cef0d9bf75e269eb",
                                    "typeString": "literal_string \"Sender is not allowed to cancel trade (2)\""
                                  },
                                  "value": "Sender is not allowed to cancel trade (2)"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ddc0ea0a3c16467f3e90962bae7c77db78af2e3817b9cf66cef0d9bf75e269eb",
                                    "typeString": "literal_string \"Sender is not allowed to cancel trade (2)\""
                                  }
                                ],
                                "id": 23838,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "31012:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 23858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31012:158:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 23859,
                            "nodeType": "ExpressionStatement",
                            "src": "31012:158:71"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              },
                              "id": 23865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 23860,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23682,
                                    "src": "31181:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 23861,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "userTradeData2",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21946,
                                  "src": "31181:20:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                    "typeString": "struct Swaps.UserTradeData storage ref"
                                  }
                                },
                                "id": 23862,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tradeType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21894,
                                "src": "31181:30:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$21823",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 23863,
                                  "name": "TradeType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21823,
                                  "src": "31215:9:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                    "typeString": "type(enum Swaps.TradeType)"
                                  }
                                },
                                "id": 23864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Escrow",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21822,
                                "src": "31215:16:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TradeType_$21823",
                                  "typeString": "enum Swaps.TradeType"
                                }
                              },
                              "src": "31181:50:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 23879,
                            "nodeType": "IfStatement",
                            "src": "31178:148:71",
                            "trueBody": {
                              "id": 23878,
                              "nodeType": "Block",
                              "src": "31233:93:71",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 23867,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23677,
                                        "src": "31264:5:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 23868,
                                          "name": "Holder",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 21826,
                                          "src": "31271:6:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                            "typeString": "type(enum Swaps.Holder)"
                                          }
                                        },
                                        "id": 23869,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "Holder2",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 21825,
                                        "src": "31271:14:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Holder_$21826",
                                          "typeString": "enum Swaps.Holder"
                                        }
                                      },
                                      {
                                        "id": 23870,
                                        "name": "tokenValue2",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23709,
                                        "src": "31287:11:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "74727565",
                                        "id": 23871,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "31300:4:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 23874,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "31314:1:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 23873,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "31306:7:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes32_$",
                                            "typeString": "type(bytes32)"
                                          },
                                          "typeName": {
                                            "id": 23872,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "31306:7:71",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 23875,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "31306:10:71",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_enum$_Holder_$21826",
                                          "typeString": "enum Swaps.Holder"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 23866,
                                      "name": "_transferUsersTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23978,
                                      "src": "31243:20:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                                        "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                                      }
                                    },
                                    "id": 23876,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "31243:74:71",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 23877,
                                  "nodeType": "ExpressionStatement",
                                  "src": "31243:74:71"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "id": 23904,
                    "nodeType": "IfStatement",
                    "src": "30642:855:71",
                    "trueBody": {
                      "id": 23836,
                      "nodeType": "Block",
                      "src": "30656:328:71",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 23812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 23799,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 23795,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "30672:3:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 23796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "30672:10:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 23797,
                                      "name": "trade",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23682,
                                      "src": "30686:5:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                        "typeString": "struct Swaps.Trade storage pointer"
                                      }
                                    },
                                    "id": 23798,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "executer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21936,
                                    "src": "30686:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "30672:28:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 23810,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 23804,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 23800,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967292,
                                            "src": "30705:5:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 23801,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "30705:15:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">=",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 23802,
                                            "name": "trade",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 23682,
                                            "src": "30724:5:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                              "typeString": "struct Swaps.Trade storage pointer"
                                            }
                                          },
                                          "id": 23803,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "expirationDate",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 21938,
                                          "src": "30724:20:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "30705:39:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "id": 23809,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 23805,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "30748:3:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 23806,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "30748:10:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 23807,
                                            "name": "trade",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 23682,
                                            "src": "30762:5:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                              "typeString": "struct Swaps.Trade storage pointer"
                                            }
                                          },
                                          "id": 23808,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "holder1",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 21932,
                                          "src": "30762:13:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "30748:27:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "30705:70:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 23811,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "30704:72:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "30672:104:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20747261646520283129",
                                "id": 23813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30778:43:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_13a62c55f76587a2dd941a7afaba21d8be7cba385c183c78ab02aae0f038fccf",
                                  "typeString": "literal_string \"Sender is not allowed to cancel trade (1)\""
                                },
                                "value": "Sender is not allowed to cancel trade (1)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_13a62c55f76587a2dd941a7afaba21d8be7cba385c183c78ab02aae0f038fccf",
                                  "typeString": "literal_string \"Sender is not allowed to cancel trade (1)\""
                                }
                              ],
                              "id": 23794,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "30664:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 23814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30664:158:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 23815,
                          "nodeType": "ExpressionStatement",
                          "src": "30664:158:71"
                        },
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            },
                            "id": 23821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 23816,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23682,
                                  "src": "30833:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 23817,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "userTradeData1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21943,
                                "src": "30833:20:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                  "typeString": "struct Swaps.UserTradeData storage ref"
                                }
                              },
                              "id": 23818,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tradeType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21894,
                              "src": "30833:30:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 23819,
                                "name": "TradeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21823,
                                "src": "30867:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                  "typeString": "type(enum Swaps.TradeType)"
                                }
                              },
                              "id": 23820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Escrow",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21822,
                              "src": "30867:16:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TradeType_$21823",
                                "typeString": "enum Swaps.TradeType"
                              }
                            },
                            "src": "30833:50:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 23835,
                          "nodeType": "IfStatement",
                          "src": "30830:148:71",
                          "trueBody": {
                            "id": 23834,
                            "nodeType": "Block",
                            "src": "30885:93:71",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 23823,
                                      "name": "index",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23677,
                                      "src": "30916:5:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 23824,
                                        "name": "Holder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 21826,
                                        "src": "30923:6:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                          "typeString": "type(enum Swaps.Holder)"
                                        }
                                      },
                                      "id": 23825,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "Holder1",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 21824,
                                      "src": "30923:14:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Holder_$21826",
                                        "typeString": "enum Swaps.Holder"
                                      }
                                    },
                                    {
                                      "id": 23826,
                                      "name": "tokenValue1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23697,
                                      "src": "30939:11:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "hexValue": "74727565",
                                      "id": 23827,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "30952:4:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 23830,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "30966:1:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 23829,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "30958:7:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes32_$",
                                          "typeString": "type(bytes32)"
                                        },
                                        "typeName": {
                                          "id": 23828,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "30958:7:71",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 23831,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "30958:10:71",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_enum$_Holder_$21826",
                                        "typeString": "enum Swaps.Holder"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 23822,
                                    "name": "_transferUsersTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23978,
                                    "src": "30895:20:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                                      "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                                    }
                                  },
                                  "id": 23832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "30895:74:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 23833,
                                "nodeType": "ExpressionStatement",
                                "src": "30895:74:71"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 23905,
                  "nodeType": "IfStatement",
                  "src": "30092:1405:71",
                  "trueBody": {
                    "id": 23792,
                    "nodeType": "Block",
                    "src": "30119:517:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 23748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 23728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 23724,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "30135:3:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 23725,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "30135:10:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 23726,
                                    "name": "trade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23682,
                                    "src": "30149:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                      "typeString": "struct Swaps.Trade storage pointer"
                                    }
                                  },
                                  "id": 23727,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "executer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 21936,
                                  "src": "30149:14:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "30135:28:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 23746,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 23733,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 23729,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "30168:5:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 23730,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "30168:15:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 23731,
                                          "name": "trade",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23682,
                                          "src": "30187:5:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                            "typeString": "struct Swaps.Trade storage pointer"
                                          }
                                        },
                                        "id": 23732,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "expirationDate",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 21938,
                                        "src": "30187:20:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "30168:39:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 23744,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 23738,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 23734,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "30212:3:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 23735,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "30212:10:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 23736,
                                                "name": "trade",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 23682,
                                                "src": "30226:5:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                                  "typeString": "struct Swaps.Trade storage pointer"
                                                }
                                              },
                                              "id": 23737,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "holder1",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 21932,
                                              "src": "30226:13:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "30212:27:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "id": 23743,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 23739,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "30243:3:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 23740,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "30243:10:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 23741,
                                                "name": "trade",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 23682,
                                                "src": "30257:5:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                                  "typeString": "struct Swaps.Trade storage pointer"
                                                }
                                              },
                                              "id": 23742,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "holder2",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 21934,
                                              "src": "30257:13:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "src": "30243:27:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "30212:58:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "id": 23745,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "30211:60:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "30168:103:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 23747,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "30167:106:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "30135:138:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53656e646572206973206e6f7420616c6c6f77656420746f2063616e63656c20747261646520283029",
                              "id": 23749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "30275:43:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5d6836f0c0e087667fc172041236feaf9634db8287593900fb516b3a15e093e3",
                                "typeString": "literal_string \"Sender is not allowed to cancel trade (0)\""
                              },
                              "value": "Sender is not allowed to cancel trade (0)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5d6836f0c0e087667fc172041236feaf9634db8287593900fb516b3a15e093e3",
                                "typeString": "literal_string \"Sender is not allowed to cancel trade (0)\""
                              }
                            ],
                            "id": 23723,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "30127:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 23750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30127:192:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23751,
                        "nodeType": "ExpressionStatement",
                        "src": "30127:192:71"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_TradeType_$21823",
                            "typeString": "enum Swaps.TradeType"
                          },
                          "id": 23757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 23752,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23682,
                                "src": "30330:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 23753,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21943,
                              "src": "30330:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 23754,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21894,
                            "src": "30330:30:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 23755,
                              "name": "TradeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21823,
                              "src": "30364:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                "typeString": "type(enum Swaps.TradeType)"
                              }
                            },
                            "id": 23756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Escrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21822,
                            "src": "30364:16:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "src": "30330:50:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23771,
                        "nodeType": "IfStatement",
                        "src": "30327:148:71",
                        "trueBody": {
                          "id": 23770,
                          "nodeType": "Block",
                          "src": "30382:93:71",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 23759,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23677,
                                    "src": "30413:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 23760,
                                      "name": "Holder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21826,
                                      "src": "30420:6:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                        "typeString": "type(enum Swaps.Holder)"
                                      }
                                    },
                                    "id": 23761,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Holder1",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21824,
                                    "src": "30420:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Holder_$21826",
                                      "typeString": "enum Swaps.Holder"
                                    }
                                  },
                                  {
                                    "id": 23762,
                                    "name": "tokenValue1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23697,
                                    "src": "30436:11:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 23763,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "30449:4:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 23766,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "30463:1:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 23765,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "30455:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 23764,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "30455:7:71",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 23767,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "30455:10:71",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Holder_$21826",
                                      "typeString": "enum Swaps.Holder"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 23758,
                                  "name": "_transferUsersTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23978,
                                  "src": "30392:20:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                                    "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                                  }
                                },
                                "id": 23768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30392:74:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 23769,
                              "nodeType": "ExpressionStatement",
                              "src": "30392:74:71"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_TradeType_$21823",
                            "typeString": "enum Swaps.TradeType"
                          },
                          "id": 23777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 23772,
                                "name": "trade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23682,
                                "src": "30485:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                  "typeString": "struct Swaps.Trade storage pointer"
                                }
                              },
                              "id": 23773,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "userTradeData2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21946,
                              "src": "30485:20:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                                "typeString": "struct Swaps.UserTradeData storage ref"
                              }
                            },
                            "id": 23774,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tradeType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21894,
                            "src": "30485:30:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 23775,
                              "name": "TradeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21823,
                              "src": "30519:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                                "typeString": "type(enum Swaps.TradeType)"
                              }
                            },
                            "id": 23776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Escrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21822,
                            "src": "30519:16:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TradeType_$21823",
                              "typeString": "enum Swaps.TradeType"
                            }
                          },
                          "src": "30485:50:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23791,
                        "nodeType": "IfStatement",
                        "src": "30482:148:71",
                        "trueBody": {
                          "id": 23790,
                          "nodeType": "Block",
                          "src": "30537:93:71",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 23779,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23677,
                                    "src": "30568:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 23780,
                                      "name": "Holder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21826,
                                      "src": "30575:6:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                        "typeString": "type(enum Swaps.Holder)"
                                      }
                                    },
                                    "id": 23781,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Holder2",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21825,
                                    "src": "30575:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Holder_$21826",
                                      "typeString": "enum Swaps.Holder"
                                    }
                                  },
                                  {
                                    "id": 23782,
                                    "name": "tokenValue2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23709,
                                    "src": "30591:11:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 23783,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "30604:4:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 23786,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "30618:1:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 23785,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "30610:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 23784,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "30610:7:71",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 23787,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "30610:10:71",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Holder_$21826",
                                      "typeString": "enum Swaps.Holder"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 23778,
                                  "name": "_transferUsersTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23978,
                                  "src": "30547:20:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                                    "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                                  }
                                },
                                "id": 23788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30547:74:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 23789,
                              "nodeType": "ExpressionStatement",
                              "src": "30547:74:71"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 23911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23906,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23682,
                        "src": "31503:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23908,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21949,
                      "src": "31503:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$21819",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 23909,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21819,
                        "src": "31517:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$21819_$",
                          "typeString": "type(enum Swaps.State)"
                        }
                      },
                      "id": 23910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21818,
                      "src": "31517:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$21819",
                        "typeString": "enum Swaps.State"
                      }
                    },
                    "src": "31503:29:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$21819",
                      "typeString": "enum Swaps.State"
                    }
                  },
                  "id": 23912,
                  "nodeType": "ExpressionStatement",
                  "src": "31503:29:71"
                }
              ]
            },
            "documentation": {
              "id": 23675,
              "nodeType": "StructuredDocumentation",
              "src": "29531:173:71",
              "text": " @dev Cancel a trade execution in the Swaps contract by transferring tokens back to their initial owners.\n @param index Index of the trade to be cancelled."
            },
            "functionSelector": "09ec6cc7",
            "id": 23914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTrade",
            "nameLocation": "29716:11:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23677,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "29736:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23914,
                  "src": "29728:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29728:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29727:15:71"
            },
            "returnParameters": {
              "id": 23679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29752:0:71"
            },
            "scope": 25543,
            "src": "29707:1830:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23977,
              "nodeType": "Block",
              "src": "31664:453:71",
              "statements": [
                {
                  "assignments": [
                    23930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23930,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "31685:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23977,
                      "src": "31671:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 23929,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23928,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "31671:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "31671:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23934,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23931,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "31693:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 23933,
                    "indexExpression": {
                      "id": 23932,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23916,
                      "src": "31701:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "31693:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31671:36:71"
                },
                {
                  "assignments": [
                    23937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23937,
                      "mutability": "mutable",
                      "name": "senderUserTradeData",
                      "nameLocation": "31735:19:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23977,
                      "src": "31714:40:71",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData"
                      },
                      "typeName": {
                        "id": 23936,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23935,
                          "name": "UserTradeData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21895,
                          "src": "31714:13:71"
                        },
                        "referencedDeclaration": 21895,
                        "src": "31714:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                          "typeString": "struct Swaps.UserTradeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23948,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$21826",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 23941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23938,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23919,
                            "src": "31758:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 23939,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21826,
                              "src": "31768:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 23940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21824,
                            "src": "31768:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "31758:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 23942,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "31757:26:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 23945,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23930,
                        "src": "31809:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23946,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "31809:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 23947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "31757:72:71",
                    "trueExpression": {
                      "expression": {
                        "id": 23943,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23930,
                        "src": "31786:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 23944,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "31786:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31714:115:71"
                },
                {
                  "assignments": [
                    23951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23951,
                      "mutability": "mutable",
                      "name": "tokenTradeType",
                      "nameLocation": "31846:14:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 23977,
                      "src": "31836:24:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      },
                      "typeName": {
                        "id": 23950,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23949,
                          "name": "TradeType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21823,
                          "src": "31836:9:71"
                        },
                        "referencedDeclaration": 21823,
                        "src": "31836:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TradeType_$21823",
                          "typeString": "enum Swaps.TradeType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23954,
                  "initialValue": {
                    "expression": {
                      "id": 23952,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23937,
                      "src": "31863:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 23953,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tradeType",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21894,
                    "src": "31863:29:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_TradeType_$21823",
                      "typeString": "enum Swaps.TradeType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31836:56:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TradeType_$21823",
                      "typeString": "enum Swaps.TradeType"
                    },
                    "id": 23958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23955,
                      "name": "tokenTradeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23951,
                      "src": "31903:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 23956,
                        "name": "TradeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21823,
                        "src": "31921:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                          "typeString": "type(enum Swaps.TradeType)"
                        }
                      },
                      "id": 23957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Hold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21821,
                      "src": "31921:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "src": "31903:32:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 23975,
                    "nodeType": "Block",
                    "src": "32031:82:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23969,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23916,
                              "src": "32069:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 23970,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23919,
                              "src": "32076:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 23971,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23921,
                              "src": "32084:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 23972,
                              "name": "revertTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23923,
                              "src": "32091:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 23968,
                            "name": "_executeTransferOnUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24294,
                            "src": "32039:29:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool)"
                            }
                          },
                          "id": 23973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32039:67:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23974,
                        "nodeType": "ExpressionStatement",
                        "src": "32039:67:71"
                      }
                    ]
                  },
                  "id": 23976,
                  "nodeType": "IfStatement",
                  "src": "31899:214:71",
                  "trueBody": {
                    "id": 23967,
                    "nodeType": "Block",
                    "src": "31937:88:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 23960,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23916,
                              "src": "31971:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 23961,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23919,
                              "src": "31978:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              }
                            },
                            {
                              "id": 23962,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23921,
                              "src": "31986:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 23963,
                              "name": "revertTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23923,
                              "src": "31993:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 23964,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23925,
                              "src": "32009:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Holder_$21826",
                                "typeString": "enum Swaps.Holder"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 23959,
                            "name": "_executeHoldOnUsersTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24095,
                            "src": "31945:25:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_Holder_$21826_$_t_uint256_$_t_bool_$_t_bytes32_$returns$__$",
                              "typeString": "function (uint256,enum Swaps.Holder,uint256,bool,bytes32)"
                            }
                          },
                          "id": 23965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31945:73:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23966,
                        "nodeType": "ExpressionStatement",
                        "src": "31945:73:71"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 23978,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferUsersTokens",
            "nameLocation": "31550:20:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23916,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "31579:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23978,
                  "src": "31571:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31571:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23919,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "31593:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23978,
                  "src": "31586:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Holder_$21826",
                    "typeString": "enum Swaps.Holder"
                  },
                  "typeName": {
                    "id": 23918,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23917,
                      "name": "Holder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21826,
                      "src": "31586:6:71"
                    },
                    "referencedDeclaration": 21826,
                    "src": "31586:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Holder_$21826",
                      "typeString": "enum Swaps.Holder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23921,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "31609:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23978,
                  "src": "31601:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31601:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23923,
                  "mutability": "mutable",
                  "name": "revertTransfer",
                  "nameLocation": "31621:14:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23978,
                  "src": "31616:19:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23922,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "31616:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23925,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "31645:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 23978,
                  "src": "31637:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23924,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "31637:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31570:84:71"
            },
            "returnParameters": {
              "id": 23927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31664:0:71"
            },
            "scope": 25543,
            "src": "31541:576:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24094,
              "nodeType": "Block",
              "src": "32228:877:71",
              "statements": [
                {
                  "assignments": [
                    23994
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23994,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "32249:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24094,
                      "src": "32235:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 23993,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23992,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "32235:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "32235:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23998,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23995,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "32257:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 23997,
                    "indexExpression": {
                      "id": 23996,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23980,
                      "src": "32265:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "32257:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32235:36:71"
                },
                {
                  "assignments": [
                    24000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24000,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "32286:6:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24094,
                      "src": "32278:14:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23999,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "32278:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24011,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$21826",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 24004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24001,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23983,
                            "src": "32296:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 24002,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21826,
                              "src": "32306:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 24003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21824,
                            "src": "32306:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "32296:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 24005,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "32295:26:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 24008,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23994,
                        "src": "32340:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24009,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21934,
                      "src": "32340:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "32295:58:71",
                    "trueExpression": {
                      "expression": {
                        "id": 24006,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23994,
                        "src": "32324:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24007,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21932,
                      "src": "32324:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32278:75:71"
                },
                {
                  "assignments": [
                    24013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24013,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "32367:9:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24094,
                      "src": "32359:17:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24012,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "32359:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24024,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$21826",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 24017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24014,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23983,
                            "src": "32380:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 24015,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21826,
                              "src": "32390:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 24016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21824,
                            "src": "32390:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "32380:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 24018,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "32379:26:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 24021,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23994,
                        "src": "32424:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21932,
                      "src": "32424:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "32379:58:71",
                    "trueExpression": {
                      "expression": {
                        "id": 24019,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23994,
                        "src": "32408:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24020,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21934,
                      "src": "32408:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32359:78:71"
                },
                {
                  "assignments": [
                    24027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24027,
                      "mutability": "mutable",
                      "name": "senderUserTradeData",
                      "nameLocation": "32464:19:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24094,
                      "src": "32443:40:71",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData"
                      },
                      "typeName": {
                        "id": 24026,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24025,
                          "name": "UserTradeData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21895,
                          "src": "32443:13:71"
                        },
                        "referencedDeclaration": 21895,
                        "src": "32443:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                          "typeString": "struct Swaps.UserTradeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24038,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$21826",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 24031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24028,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23983,
                            "src": "32487:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 24029,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21826,
                              "src": "32497:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 24030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21824,
                            "src": "32497:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "32487:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 24032,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "32486:26:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 24035,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23994,
                        "src": "32538:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24036,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "32538:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 24037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "32486:72:71",
                    "trueExpression": {
                      "expression": {
                        "id": 24033,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23994,
                        "src": "32515:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24034,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "32515:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32443:115:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24040,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "32573:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 24041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "32573:15:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 24042,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23994,
                            "src": "32592:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                              "typeString": "struct Swaps.Trade storage pointer"
                            }
                          },
                          "id": 24043,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expirationDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21938,
                          "src": "32592:20:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "32573:39:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45787069726174696f6e20646174652069732070617374",
                        "id": 24045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32614:25:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b",
                          "typeString": "literal_string \"Expiration date is past\""
                        },
                        "value": "Expiration date is past"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b",
                          "typeString": "literal_string \"Expiration date is past\""
                        }
                      ],
                      "id": 24039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "32565:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32565:75:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24047,
                  "nodeType": "ExpressionStatement",
                  "src": "32565:75:71"
                },
                {
                  "assignments": [
                    24049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24049,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "32655:12:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24094,
                      "src": "32647:20:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24048,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "32647:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24052,
                  "initialValue": {
                    "expression": {
                      "id": 24050,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24027,
                      "src": "32670:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 24051,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21880,
                    "src": "32670:32:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32647:55:71"
                },
                {
                  "assignments": [
                    24054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24054,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "32716:7:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24094,
                      "src": "32708:15:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24053,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "32708:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24057,
                  "initialValue": {
                    "expression": {
                      "id": 24055,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24027,
                      "src": "32726:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 24056,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21884,
                    "src": "32726:27:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32708:45:71"
                },
                {
                  "assignments": [
                    24060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24060,
                      "mutability": "mutable",
                      "name": "tokenStandard",
                      "nameLocation": "32768:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24094,
                      "src": "32759:22:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      },
                      "typeName": {
                        "id": 24059,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24058,
                          "name": "Standard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21813,
                          "src": "32759:8:71"
                        },
                        "referencedDeclaration": 21813,
                        "src": "32759:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24063,
                  "initialValue": {
                    "expression": {
                      "id": 24061,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24027,
                      "src": "32784:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 24062,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenStandard",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21887,
                    "src": "32784:33:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32759:58:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 24073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Standard_$21813",
                            "typeString": "enum Swaps.Standard"
                          },
                          "id": 24068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24065,
                            "name": "tokenStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24060,
                            "src": "32832:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 24066,
                              "name": "Standard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21813,
                              "src": "32849:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                "typeString": "type(enum Swaps.Standard)"
                              }
                            },
                            "id": 24067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21810,
                            "src": "32849:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "src": "32832:31:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Standard_$21813",
                            "typeString": "enum Swaps.Standard"
                          },
                          "id": 24072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24069,
                            "name": "tokenStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24060,
                            "src": "32867:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 24070,
                              "name": "Standard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21813,
                              "src": "32884:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                "typeString": "type(enum Swaps.Standard)"
                              }
                            },
                            "id": 24071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC1400",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21812,
                            "src": "32884:16:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "src": "32867:33:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "32832:68:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207374616e64617264206d75737420626520686f6c6461626c65",
                        "id": 24074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32902:33:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f3fb3eca663334b08617a28f5e55e2698b004ee0a964aa2bc92825ec7c73641",
                          "typeString": "literal_string \"Token standard must be holdable\""
                        },
                        "value": "Token standard must be holdable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f3fb3eca663334b08617a28f5e55e2698b004ee0a964aa2bc92825ec7c73641",
                          "typeString": "literal_string \"Token standard must be holdable\""
                        }
                      ],
                      "id": 24064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "32824:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32824:112:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24076,
                  "nodeType": "ExpressionStatement",
                  "src": "32824:112:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24079,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24000,
                            "src": "32963:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24080,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24013,
                            "src": "32971:9:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24081,
                            "name": "senderUserTradeData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24027,
                            "src": "32982:19:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                              "typeString": "struct Swaps.UserTradeData memory"
                            }
                          ],
                          "id": 24078,
                          "name": "_holdExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24599,
                          "src": "32951:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_struct$_UserTradeData_$21895_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,struct Swaps.UserTradeData memory) view returns (bool)"
                          }
                        },
                        "id": 24082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32951:51:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486f6c64206d757374206578697374",
                        "id": 24083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33004:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e67fb1929d4780c273d05979a1e9884927127ac457215fefeddd8d222ee5b83",
                          "typeString": "literal_string \"Hold must exist\""
                        },
                        "value": "Hold must exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e67fb1929d4780c273d05979a1e9884927127ac457215fefeddd8d222ee5b83",
                          "typeString": "literal_string \"Hold must exist\""
                        }
                      ],
                      "id": 24077,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "32943:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32943:79:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24085,
                  "nodeType": "ExpressionStatement",
                  "src": "32943:79:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24087,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24049,
                        "src": "33042:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24088,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24054,
                        "src": "33056:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 24089,
                        "name": "tokenStandard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24060,
                        "src": "33065:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      {
                        "id": 24090,
                        "name": "preimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23989,
                        "src": "33080:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 24091,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24013,
                        "src": "33090:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24086,
                      "name": "_executeHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24402,
                      "src": "33029:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_enum$_Standard_$21813_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,enum Swaps.Standard,bytes32,address)"
                      }
                    },
                    "id": 24092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33029:71:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24093,
                  "nodeType": "ExpressionStatement",
                  "src": "33029:71:71"
                }
              ]
            },
            "id": 24095,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeHoldOnUsersTokens",
            "nameLocation": "32130:25:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23980,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "32164:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24095,
                  "src": "32156:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32156:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23983,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "32178:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24095,
                  "src": "32171:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Holder_$21826",
                    "typeString": "enum Swaps.Holder"
                  },
                  "typeName": {
                    "id": 23982,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23981,
                      "name": "Holder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21826,
                      "src": "32171:6:71"
                    },
                    "referencedDeclaration": 21826,
                    "src": "32171:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Holder_$21826",
                      "typeString": "enum Swaps.Holder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23985,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24095,
                  "src": "32186:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32186:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23987,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24095,
                  "src": "32195:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23986,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "32195:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23989,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "32209:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24095,
                  "src": "32201:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23988,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "32201:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32155:63:71"
            },
            "returnParameters": {
              "id": 23991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32228:0:71"
            },
            "scope": 25543,
            "src": "32121:984:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24293,
              "nodeType": "Block",
              "src": "33695:1498:71",
              "statements": [
                {
                  "assignments": [
                    24110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24110,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "33715:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24293,
                      "src": "33701:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 24109,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24108,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "33701:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "33701:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24114,
                  "initialValue": {
                    "baseExpression": {
                      "id": 24111,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "33723:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 24113,
                    "indexExpression": {
                      "id": 24112,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24098,
                      "src": "33731:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "33723:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33701:36:71"
                },
                {
                  "assignments": [
                    24116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24116,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "33752:6:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24293,
                      "src": "33744:14:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24115,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "33744:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24127,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$21826",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 24120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24117,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24101,
                            "src": "33762:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 24118,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21826,
                              "src": "33772:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 24119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21824,
                            "src": "33772:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "33762:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 24121,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "33761:26:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 24124,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24110,
                        "src": "33806:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24125,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21934,
                      "src": "33806:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "33761:58:71",
                    "trueExpression": {
                      "expression": {
                        "id": 24122,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24110,
                        "src": "33790:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21932,
                      "src": "33790:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33744:75:71"
                },
                {
                  "assignments": [
                    24129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24129,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "33833:9:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24293,
                      "src": "33825:17:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24128,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "33825:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24140,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$21826",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 24133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24130,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24101,
                            "src": "33846:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 24131,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21826,
                              "src": "33856:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 24132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21824,
                            "src": "33856:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "33846:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 24134,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "33845:26:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 24137,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24110,
                        "src": "33890:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24138,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21932,
                      "src": "33890:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "33845:58:71",
                    "trueExpression": {
                      "expression": {
                        "id": 24135,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24110,
                        "src": "33874:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "holder2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21934,
                      "src": "33874:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33825:78:71"
                },
                {
                  "assignments": [
                    24143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24143,
                      "mutability": "mutable",
                      "name": "senderUserTradeData",
                      "nameLocation": "33931:19:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24293,
                      "src": "33909:41:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                        "typeString": "struct Swaps.UserTradeData"
                      },
                      "typeName": {
                        "id": 24142,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24141,
                          "name": "UserTradeData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21895,
                          "src": "33909:13:71"
                        },
                        "referencedDeclaration": 21895,
                        "src": "33909:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                          "typeString": "struct Swaps.UserTradeData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24154,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Holder_$21826",
                            "typeString": "enum Swaps.Holder"
                          },
                          "id": 24147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24144,
                            "name": "holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24101,
                            "src": "33954:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 24145,
                              "name": "Holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21826,
                              "src": "33964:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Holder_$21826_$",
                                "typeString": "type(enum Swaps.Holder)"
                              }
                            },
                            "id": 24146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Holder1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21824,
                            "src": "33964:14:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Holder_$21826",
                              "typeString": "enum Swaps.Holder"
                            }
                          },
                          "src": "33954:24:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 24148,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "33953:26:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 24151,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24110,
                        "src": "34005:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24152,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "34005:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 24153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "33953:72:71",
                    "trueExpression": {
                      "expression": {
                        "id": 24149,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24110,
                        "src": "33982:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 24150,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "33982:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33909:116:71"
                },
                {
                  "assignments": [
                    24156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24156,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "34040:12:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24293,
                      "src": "34032:20:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24155,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "34032:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24159,
                  "initialValue": {
                    "expression": {
                      "id": 24157,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24143,
                      "src": "34055:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                        "typeString": "struct Swaps.UserTradeData storage pointer"
                      }
                    },
                    "id": 24158,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21880,
                    "src": "34055:32:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34032:55:71"
                },
                {
                  "assignments": [
                    24161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24161,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "34101:7:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24293,
                      "src": "34093:15:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24160,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "34093:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24164,
                  "initialValue": {
                    "expression": {
                      "id": 24162,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24143,
                      "src": "34111:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                        "typeString": "struct Swaps.UserTradeData storage pointer"
                      }
                    },
                    "id": 24163,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21884,
                    "src": "34111:27:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34093:45:71"
                },
                {
                  "assignments": [
                    24167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24167,
                      "mutability": "mutable",
                      "name": "tokenStandard",
                      "nameLocation": "34153:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24293,
                      "src": "34144:22:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      },
                      "typeName": {
                        "id": 24166,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24165,
                          "name": "Standard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21813,
                          "src": "34144:8:71"
                        },
                        "referencedDeclaration": 21813,
                        "src": "34144:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24170,
                  "initialValue": {
                    "expression": {
                      "id": 24168,
                      "name": "senderUserTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24143,
                      "src": "34169:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                        "typeString": "struct Swaps.UserTradeData storage pointer"
                      }
                    },
                    "id": 24169,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenStandard",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21887,
                    "src": "34169:33:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34144:58:71"
                },
                {
                  "assignments": [
                    24172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24172,
                      "mutability": "mutable",
                      "name": "currentHolder",
                      "nameLocation": "34217:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24293,
                      "src": "34209:21:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "34209:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24174,
                  "initialValue": {
                    "id": 24173,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24116,
                    "src": "34233:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34209:30:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_TradeType_$21823",
                      "typeString": "enum Swaps.TradeType"
                    },
                    "id": 24179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 24175,
                        "name": "senderUserTradeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24143,
                        "src": "34248:19:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                          "typeString": "struct Swaps.UserTradeData storage pointer"
                        }
                      },
                      "id": 24176,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tradeType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21894,
                      "src": "34248:29:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 24177,
                        "name": "TradeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21823,
                        "src": "34281:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_TradeType_$21823_$",
                          "typeString": "type(enum Swaps.TradeType)"
                        }
                      },
                      "id": 24178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Escrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21822,
                      "src": "34281:16:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      }
                    },
                    "src": "34248:49:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24188,
                  "nodeType": "IfStatement",
                  "src": "34245:98:71",
                  "trueBody": {
                    "id": 24187,
                    "nodeType": "Block",
                    "src": "34299:44:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 24185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 24180,
                            "name": "currentHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24172,
                            "src": "34307:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 24183,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "34331:4:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Swaps_$25543",
                                  "typeString": "contract Swaps"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Swaps_$25543",
                                  "typeString": "contract Swaps"
                                }
                              ],
                              "id": 24182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "34323:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24181,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "34323:7:71",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "34323:13:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "34307:29:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 24186,
                        "nodeType": "ExpressionStatement",
                        "src": "34307:29:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 24189,
                    "name": "revertTransfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24105,
                    "src": "34352:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24204,
                    "nodeType": "Block",
                    "src": "34407:90:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 24200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 24196,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "34423:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 24197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "34423:15:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 24198,
                                  "name": "trade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24110,
                                  "src": "34442:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                                    "typeString": "struct Swaps.Trade storage pointer"
                                  }
                                },
                                "id": 24199,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "expirationDate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21938,
                                "src": "34442:20:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "34423:39:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45787069726174696f6e20646174652069732070617374",
                              "id": 24201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "34464:25:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b",
                                "typeString": "literal_string \"Expiration date is past\""
                              },
                              "value": "Expiration date is past"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7ec5e5b6d8986751e9975433d52bdbaec91cf6fa3fa30d8651373347427b1a8b",
                                "typeString": "literal_string \"Expiration date is past\""
                              }
                            ],
                            "id": 24195,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "34415:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34415:75:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24203,
                        "nodeType": "ExpressionStatement",
                        "src": "34415:75:71"
                      }
                    ]
                  },
                  "id": 24205,
                  "nodeType": "IfStatement",
                  "src": "34349:148:71",
                  "trueBody": {
                    "id": 24194,
                    "nodeType": "Block",
                    "src": "34368:33:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 24192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 24190,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24129,
                            "src": "34376:9:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 24191,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24116,
                            "src": "34388:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "34376:18:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 24193,
                        "nodeType": "ExpressionStatement",
                        "src": "34376:18:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 24209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24206,
                      "name": "tokenStandard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24167,
                      "src": "34506:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 24207,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21813,
                        "src": "34523:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 24208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21809,
                      "src": "34523:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "34506:29:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      },
                      "id": 24227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 24224,
                        "name": "tokenStandard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24167,
                        "src": "34654:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 24225,
                          "name": "Standard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21813,
                          "src": "34671:8:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                            "typeString": "type(enum Swaps.Standard)"
                          }
                        },
                        "id": 24226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21810,
                        "src": "34671:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "src": "34654:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        },
                        "id": 24258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24255,
                          "name": "tokenStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24167,
                          "src": "34902:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Standard_$21813",
                            "typeString": "enum Swaps.Standard"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 24256,
                            "name": "Standard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21813,
                            "src": "34919:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                              "typeString": "type(enum Swaps.Standard)"
                            }
                          },
                          "id": 24257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ERC721",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21811,
                          "src": "34919:15:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Standard_$21813",
                            "typeString": "enum Swaps.Standard"
                          }
                        },
                        "src": "34902:32:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Standard_$21813",
                            "typeString": "enum Swaps.Standard"
                          },
                          "id": 24275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24272,
                            "name": "tokenStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24167,
                            "src": "35038:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 24273,
                              "name": "Standard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21813,
                              "src": "35055:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                                "typeString": "type(enum Swaps.Standard)"
                              }
                            },
                            "id": 24274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC1400",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21812,
                            "src": "35055:16:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Standard_$21813",
                              "typeString": "enum Swaps.Standard"
                            }
                          },
                          "src": "35038:33:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24289,
                        "nodeType": "IfStatement",
                        "src": "35035:153:71",
                        "trueBody": {
                          "id": 24288,
                          "nodeType": "Block",
                          "src": "35073:115:71",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 24280,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24161,
                                    "src": "35132:7:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 24281,
                                    "name": "currentHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24172,
                                    "src": "35141:13:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 24282,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24129,
                                    "src": "35156:9:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 24283,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24103,
                                    "src": "35167:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 24284,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "35174:2:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 24285,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "35178:2:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 24277,
                                        "name": "tokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24156,
                                        "src": "35090:12:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 24276,
                                      "name": "IERC1400",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7982,
                                      "src": "35081:8:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC1400_$7982_$",
                                        "typeString": "type(contract IERC1400)"
                                      }
                                    },
                                    "id": 24278,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "35081:22:71",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1400_$7982",
                                      "typeString": "contract IERC1400"
                                    }
                                  },
                                  "id": 24279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "operatorTransferByPartition",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7762,
                                  "src": "35081:50:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes32,address,address,uint256,bytes memory,bytes memory) external returns (bytes32)"
                                  }
                                },
                                "id": 24286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "35081:100:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 24287,
                              "nodeType": "ExpressionStatement",
                              "src": "35081:100:71"
                            }
                          ]
                        }
                      },
                      "id": 24290,
                      "nodeType": "IfStatement",
                      "src": "34899:289:71",
                      "trueBody": {
                        "id": 24271,
                        "nodeType": "Block",
                        "src": "34936:93:71",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 24263,
                                  "name": "currentHolder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24172,
                                  "src": "34979:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 24264,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24129,
                                  "src": "34994:9:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 24267,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24161,
                                      "src": "35013:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 24266,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "35005:7:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 24265,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "35005:7:71",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 24268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "35005:16:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 24260,
                                      "name": "tokenAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24156,
                                      "src": "34952:12:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 24259,
                                    "name": "IERC721",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2435,
                                    "src": "34944:7:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC721_$2435_$",
                                      "typeString": "type(contract IERC721)"
                                    }
                                  },
                                  "id": 24261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "34944:21:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721_$2435",
                                    "typeString": "contract IERC721"
                                  }
                                },
                                "id": 24262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2388,
                                "src": "34944:34:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256) external"
                                }
                              },
                              "id": 24269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "34944:78:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 24270,
                            "nodeType": "ExpressionStatement",
                            "src": "34944:78:71"
                          }
                        ]
                      }
                    },
                    "id": 24291,
                    "nodeType": "IfStatement",
                    "src": "34651:537:71",
                    "trueBody": {
                      "id": 24254,
                      "nodeType": "Block",
                      "src": "34687:206:71",
                      "statements": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 24233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 24228,
                              "name": "currentHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24172,
                              "src": "34698:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 24231,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "34723:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Swaps_$25543",
                                    "typeString": "contract Swaps"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Swaps_$25543",
                                    "typeString": "contract Swaps"
                                  }
                                ],
                                "id": 24230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "34715:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24229,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "34715:7:71",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "34715:13:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "34698:30:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 24252,
                            "nodeType": "Block",
                            "src": "34802:85:71",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 24247,
                                      "name": "currentHolder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24172,
                                      "src": "34846:13:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 24248,
                                      "name": "recipient",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24129,
                                      "src": "34861:9:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 24249,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24103,
                                      "src": "34872:5:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 24244,
                                          "name": "tokenAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24156,
                                          "src": "34819:12:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 24243,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1377,
                                        "src": "34812:6:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1377_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 24245,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "34812:20:71",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1377",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 24246,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1358,
                                    "src": "34812:33:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 24250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "34812:66:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 24251,
                                "nodeType": "ExpressionStatement",
                                "src": "34812:66:71"
                              }
                            ]
                          },
                          "id": 24253,
                          "nodeType": "IfStatement",
                          "src": "34695:192:71",
                          "trueBody": {
                            "id": 24242,
                            "nodeType": "Block",
                            "src": "34730:66:71",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 24238,
                                      "name": "recipient",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24129,
                                      "src": "34770:9:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 24239,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24103,
                                      "src": "34781:5:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 24235,
                                          "name": "tokenAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24156,
                                          "src": "34747:12:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 24234,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1377,
                                        "src": "34740:6:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1377_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 24236,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "34740:20:71",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1377",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 24237,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1326,
                                    "src": "34740:29:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 24240,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "34740:47:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 24241,
                                "nodeType": "ExpressionStatement",
                                "src": "34740:47:71"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 24292,
                  "nodeType": "IfStatement",
                  "src": "34503:685:71",
                  "trueBody": {
                    "id": 24223,
                    "nodeType": "Block",
                    "src": "34537:108:71",
                    "statements": [
                      {
                        "assignments": [
                          24211
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24211,
                            "mutability": "mutable",
                            "name": "payableRecipient",
                            "nameLocation": "34561:16:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 24223,
                            "src": "34545:32:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 24210,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "34545:15:71",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24216,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 24214,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24129,
                              "src": "34588:9:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "34580:8:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 24212,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "34580:8:71",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34580:18:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "34545:53:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24220,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24103,
                              "src": "34632:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 24217,
                              "name": "payableRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24211,
                              "src": "34606:16:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 24219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "34606:25:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 24221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34606:32:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24222,
                        "nodeType": "ExpressionStatement",
                        "src": "34606:32:71"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 24096,
              "nodeType": "StructuredDocumentation",
              "src": "33109:469:71",
              "text": " @dev Internal function to transfer tokens to their recipient by taking the token standard into account.\n @param index Index of the trade the token transfer is execcuted for.\n @param holder Sender of the tokens (currently owning the tokens).\n @param value Amount of tokens to send.\n @param revertTransfer If set to true + trade has been accepted, tokens need to be sent back to their initial owners instead of sent to the target recipient."
            },
            "id": 24294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeTransferOnUsersTokens",
            "nameLocation": "33590:29:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24098,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "33628:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24294,
                  "src": "33620:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33620:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24101,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "33642:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24294,
                  "src": "33635:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Holder_$21826",
                    "typeString": "enum Swaps.Holder"
                  },
                  "typeName": {
                    "id": 24100,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24099,
                      "name": "Holder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21826,
                      "src": "33635:6:71"
                    },
                    "referencedDeclaration": 21826,
                    "src": "33635:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Holder_$21826",
                      "typeString": "enum Swaps.Holder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24103,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "33658:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24294,
                  "src": "33650:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33650:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24105,
                  "mutability": "mutable",
                  "name": "revertTransfer",
                  "nameLocation": "33670:14:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24294,
                  "src": "33665:19:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24104,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "33665:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33619:66:71"
            },
            "returnParameters": {
              "id": 24107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33695:0:71"
            },
            "scope": 25543,
            "src": "33581:1612:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24401,
              "nodeType": "Block",
              "src": "35354:985:71",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 24311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24308,
                      "name": "tokenStandard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24301,
                      "src": "35379:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 24309,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21813,
                        "src": "35396:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 24310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21810,
                      "src": "35396:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "35379:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      },
                      "id": 24334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 24331,
                        "name": "tokenStandard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24301,
                        "src": "35570:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 24332,
                          "name": "Standard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21813,
                          "src": "35587:8:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                            "typeString": "type(enum Swaps.Standard)"
                          }
                        },
                        "id": 24333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ERC1400",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21812,
                        "src": "35587:16:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "src": "35570:33:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 24391,
                      "nodeType": "Block",
                      "src": "36178:49:71",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "696e76616c696420746f6b656e207374616e64617264",
                                "id": 24388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "36195:24:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f0620a46efe8affa820fbd852dcc28a8e648b503387395bca694e0a29fc04b28",
                                  "typeString": "literal_string \"invalid token standard\""
                                },
                                "value": "invalid token standard"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f0620a46efe8affa820fbd852dcc28a8e648b503387395bca694e0a29fc04b28",
                                  "typeString": "literal_string \"invalid token standard\""
                                }
                              ],
                              "id": 24387,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "36188:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 24389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "36188:32:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 24390,
                          "nodeType": "ExpressionStatement",
                          "src": "36188:32:71"
                        }
                      ]
                    },
                    "id": 24392,
                    "nodeType": "IfStatement",
                    "src": "35566:661:71",
                    "trueBody": {
                      "id": 24386,
                      "nodeType": "Block",
                      "src": "35605:567:71",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 24341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 24336,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24296,
                                  "src": "35621:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 24339,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "35638:1:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 24338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "35630:7:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 24337,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "35630:7:71",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 24340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "35630:10:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "35621:19:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "746f6b656e2063616e206e6f742062652061207a65726f2061646472657373",
                                "id": 24342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "35642:33:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18",
                                  "typeString": "literal_string \"token can not be a zero address\""
                                },
                                "value": "token can not be a zero address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18",
                                  "typeString": "literal_string \"token can not be a zero address\""
                                }
                              ],
                              "id": 24335,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "35613:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 24343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35613:63:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 24344,
                          "nodeType": "ExpressionStatement",
                          "src": "35613:63:71"
                        },
                        {
                          "assignments": [
                            24346
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 24346,
                              "mutability": "mutable",
                              "name": "tokenExtension",
                              "nameLocation": "35693:14:71",
                              "nodeType": "VariableDeclaration",
                              "scope": 24386,
                              "src": "35685:22:71",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "typeName": {
                                "id": 24345,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "35685:7:71",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 24351,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 24348,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24296,
                                "src": "35724:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 24349,
                                "name": "ERC1400_TOKENS_VALIDATOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21829,
                                "src": "35731:24:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 24347,
                              "name": "interfaceAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18501,
                              "src": "35710:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (address,string memory) view returns (address)"
                              }
                            },
                            "id": 24350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35710:46:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "35685:71:71"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 24358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 24353,
                                  "name": "tokenExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24346,
                                  "src": "35783:14:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 24356,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "35809:1:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 24355,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "35801:7:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 24354,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "35801:7:71",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 24357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "35801:10:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "35783:28:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "746f6b656e20686173206e6f20686f6c6461626c6520746f6b656e20657874656e73696f6e",
                                "id": 24359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "35823:39:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073",
                                  "typeString": "literal_string \"token has no holdable token extension\""
                                },
                                "value": "token has no holdable token extension"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073",
                                  "typeString": "literal_string \"token has no holdable token extension\""
                                }
                              ],
                              "id": 24352,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "35764:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 24360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35764:106:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 24361,
                          "nodeType": "ExpressionStatement",
                          "src": "35764:106:71"
                        },
                        {
                          "assignments": [
                            24363
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 24363,
                              "mutability": "mutable",
                              "name": "holdValue",
                              "nameLocation": "35887:9:71",
                              "nodeType": "VariableDeclaration",
                              "scope": 24386,
                              "src": "35879:17:71",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 24362,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "35879:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 24364,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "35879:17:71"
                        },
                        {
                          "expression": {
                            "id": 24374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                null,
                                null,
                                null,
                                null,
                                {
                                  "id": 24365,
                                  "name": "holdValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24363,
                                  "src": "35909:9:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                null,
                                null,
                                null,
                                null
                              ],
                              "id": 24366,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "35904:19:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$__$__$__$_t_uint256_$__$__$__$__$",
                                "typeString": "tuple(,,,,uint256,,,,)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 24371,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24296,
                                  "src": "35990:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 24372,
                                  "name": "tokenHoldId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24298,
                                  "src": "35997:11:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 24368,
                                      "name": "tokenExtension",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24346,
                                      "src": "35957:14:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 24367,
                                    "name": "IHoldableERC1400TokenExtension",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12589,
                                    "src": "35926:30:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IHoldableERC1400TokenExtension_$12589_$",
                                      "typeString": "type(contract IHoldableERC1400TokenExtension)"
                                    }
                                  },
                                  "id": 24369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "35926:46:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IHoldableERC1400TokenExtension_$12589",
                                    "typeString": "contract IHoldableERC1400TokenExtension"
                                  }
                                },
                                "id": 24370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "retrieveHoldData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12588,
                                "src": "35926:63:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_enum$_HoldStatusCode_$12361_$",
                                  "typeString": "function (address,bytes32) view external returns (bytes32,address,address,address,uint256,uint256,bytes32,bytes32,enum HoldStatusCode)"
                                }
                              },
                              "id": 24373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "35926:83:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_enum$_HoldStatusCode_$12361_$",
                                "typeString": "tuple(bytes32,address,address,address,uint256,uint256,bytes32,bytes32,enum HoldStatusCode)"
                              }
                            },
                            "src": "35904:105:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 24375,
                          "nodeType": "ExpressionStatement",
                          "src": "35904:105:71"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 24380,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24296,
                                "src": "36088:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 24381,
                                "name": "tokenHoldId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24298,
                                "src": "36105:11:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 24382,
                                "name": "holdValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24363,
                                "src": "36128:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 24383,
                                "name": "preimage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24303,
                                "src": "36149:8:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 24377,
                                    "name": "tokenExtension",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24346,
                                    "src": "36049:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 24376,
                                  "name": "IHoldableERC1400TokenExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12589,
                                  "src": "36018:30:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IHoldableERC1400TokenExtension_$12589_$",
                                    "typeString": "type(contract IHoldableERC1400TokenExtension)"
                                  }
                                },
                                "id": 24378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36018:46:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHoldableERC1400TokenExtension_$12589",
                                  "typeString": "contract IHoldableERC1400TokenExtension"
                                }
                              },
                              "id": 24379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executeHold",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12562,
                              "src": "36018:58:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes32_$returns$__$",
                                "typeString": "function (address,bytes32,uint256,bytes32) external"
                              }
                            },
                            "id": 24384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "36018:147:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 24385,
                          "nodeType": "ExpressionStatement",
                          "src": "36018:147:71"
                        }
                      ]
                    }
                  },
                  "id": 24393,
                  "nodeType": "IfStatement",
                  "src": "35375:852:71",
                  "trueBody": {
                    "id": 24330,
                    "nodeType": "Block",
                    "src": "35412:148:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 24318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 24313,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24296,
                                "src": "35428:5:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 24316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "35445:1:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 24315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "35437:7:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 24314,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "35437:7:71",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 24317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "35437:10:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "35428:19:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "746f6b656e2063616e206e6f742062652061207a65726f2061646472657373",
                              "id": 24319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "35449:33:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18",
                                "typeString": "literal_string \"token can not be a zero address\""
                              },
                              "value": "token can not be a zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9bca14e5cc753f0d9d21c7a81c2e4a61f9edd91f8ff260da709d961518ab2f18",
                                "typeString": "literal_string \"token can not be a zero address\""
                              }
                            ],
                            "id": 24312,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "35420:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35420:63:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24321,
                        "nodeType": "ExpressionStatement",
                        "src": "35420:63:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24326,
                              "name": "tokenHoldId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24298,
                              "src": "35531:11:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 24327,
                              "name": "preimage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24303,
                              "src": "35544:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 24323,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24296,
                                  "src": "35512:5:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 24322,
                                "name": "IERC20HoldableToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12548,
                                "src": "35492:19:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20HoldableToken_$12548_$",
                                  "typeString": "type(contract IERC20HoldableToken)"
                                }
                              },
                              "id": 24324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "35492:26:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20HoldableToken_$12548",
                                "typeString": "contract IERC20HoldableToken"
                              }
                            },
                            "id": 24325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "executeHold",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12501,
                            "src": "35492:38:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32) external"
                            }
                          },
                          "id": 24328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35492:61:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24329,
                        "nodeType": "ExpressionStatement",
                        "src": "35492:61:71"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24395,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24296,
                        "src": "36260:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24396,
                        "name": "tokenHoldId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24298,
                        "src": "36275:11:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 24397,
                        "name": "preimage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24303,
                        "src": "36296:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 24398,
                        "name": "tokenRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24305,
                        "src": "36314:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24394,
                      "name": "ExecutedHold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21840,
                      "src": "36238:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,bytes32,address)"
                      }
                    },
                    "id": 24399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36238:96:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24400,
                  "nodeType": "EmitStatement",
                  "src": "36233:101:71"
                }
              ]
            },
            "id": 24402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_executeHold",
            "nameLocation": "35206:12:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24296,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "35232:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24402,
                  "src": "35224:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35224:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24298,
                  "mutability": "mutable",
                  "name": "tokenHoldId",
                  "nameLocation": "35251:11:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24402,
                  "src": "35243:19:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24297,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35243:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24301,
                  "mutability": "mutable",
                  "name": "tokenStandard",
                  "nameLocation": "35277:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24402,
                  "src": "35268:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Standard_$21813",
                    "typeString": "enum Swaps.Standard"
                  },
                  "typeName": {
                    "id": 24300,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24299,
                      "name": "Standard",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21813,
                      "src": "35268:8:71"
                    },
                    "referencedDeclaration": 21813,
                    "src": "35268:8:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24303,
                  "mutability": "mutable",
                  "name": "preimage",
                  "nameLocation": "35304:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24402,
                  "src": "35296:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24302,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "35296:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24305,
                  "mutability": "mutable",
                  "name": "tokenRecipient",
                  "nameLocation": "35326:14:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24402,
                  "src": "35318:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35318:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35218:126:71"
            },
            "returnParameters": {
              "id": 24307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35354:0:71"
            },
            "scope": 25543,
            "src": "35197:1142:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24598,
              "nodeType": "Block",
              "src": "36463:1430:71",
              "statements": [
                {
                  "assignments": [
                    24415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24415,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "36477:12:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24598,
                      "src": "36469:20:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24414,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "36469:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24418,
                  "initialValue": {
                    "expression": {
                      "id": 24416,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24409,
                      "src": "36492:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 24417,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21880,
                    "src": "36492:26:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36469:49:71"
                },
                {
                  "assignments": [
                    24420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24420,
                      "mutability": "mutable",
                      "name": "holdId",
                      "nameLocation": "36532:6:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24598,
                      "src": "36524:14:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24419,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "36524:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24423,
                  "initialValue": {
                    "expression": {
                      "id": 24421,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24409,
                      "src": "36541:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 24422,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21884,
                    "src": "36541:21:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36524:38:71"
                },
                {
                  "assignments": [
                    24426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24426,
                      "mutability": "mutable",
                      "name": "tokenStandard",
                      "nameLocation": "36577:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24598,
                      "src": "36568:22:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      },
                      "typeName": {
                        "id": 24425,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24424,
                          "name": "Standard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21813,
                          "src": "36568:8:71"
                        },
                        "referencedDeclaration": 21813,
                        "src": "36568:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24429,
                  "initialValue": {
                    "expression": {
                      "id": 24427,
                      "name": "userTradeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24409,
                      "src": "36593:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "id": 24428,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenStandard",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21887,
                    "src": "36593:27:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "36568:52:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Standard_$21813",
                      "typeString": "enum Swaps.Standard"
                    },
                    "id": 24433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24430,
                      "name": "tokenStandard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24426,
                      "src": "36634:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 24431,
                        "name": "Standard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21813,
                        "src": "36651:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                          "typeString": "type(enum Swaps.Standard)"
                        }
                      },
                      "id": 24432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC1400",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21812,
                      "src": "36651:16:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      }
                    },
                    "src": "36634:33:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      },
                      "id": 24531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 24528,
                        "name": "tokenStandard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24426,
                        "src": "37445:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 24529,
                          "name": "Standard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21813,
                          "src": "37462:8:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Standard_$21813_$",
                            "typeString": "type(enum Swaps.Standard)"
                          }
                        },
                        "id": 24530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21810,
                        "src": "37462:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "src": "37445:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 24595,
                      "nodeType": "Block",
                      "src": "37834:55:71",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "496e76616c696420746f6b656e5374616e646172642070726f7669646564",
                                "id": 24592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "37849:32:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c877a4103bc121fd41358537bbacb20b7d369de62eb7417357dd35bafcfe9e8b",
                                  "typeString": "literal_string \"Invalid tokenStandard provided\""
                                },
                                "value": "Invalid tokenStandard provided"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c877a4103bc121fd41358537bbacb20b7d369de62eb7417357dd35bafcfe9e8b",
                                  "typeString": "literal_string \"Invalid tokenStandard provided\""
                                }
                              ],
                              "id": 24591,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "37842:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 24593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37842:40:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 24594,
                          "nodeType": "ExpressionStatement",
                          "src": "37842:40:71"
                        }
                      ]
                    },
                    "id": 24596,
                    "nodeType": "IfStatement",
                    "src": "37441:448:71",
                    "trueBody": {
                      "id": 24590,
                      "nodeType": "Block",
                      "src": "37478:350:71",
                      "statements": [
                        {
                          "assignments": [
                            24534
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 24534,
                              "mutability": "mutable",
                              "name": "data",
                              "nameLocation": "37507:4:71",
                              "nodeType": "VariableDeclaration",
                              "scope": 24590,
                              "src": "37486:25:71",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                                "typeString": "struct ERC20HoldData"
                              },
                              "typeName": {
                                "id": 24533,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 24532,
                                  "name": "ERC20HoldData",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 12432,
                                  "src": "37486:13:71"
                                },
                                "referencedDeclaration": 12432,
                                "src": "37486:13:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20HoldData_$12432_storage_ptr",
                                  "typeString": "struct ERC20HoldData"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 24541,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 24539,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24420,
                                "src": "37565:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 24536,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24415,
                                    "src": "37534:12:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 24535,
                                  "name": "IERC20HoldableToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12548,
                                  "src": "37514:19:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20HoldableToken_$12548_$",
                                    "typeString": "type(contract IERC20HoldableToken)"
                                  }
                                },
                                "id": 24537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37514:33:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20HoldableToken_$12548",
                                  "typeString": "contract IERC20HoldableToken"
                                }
                              },
                              "id": 24538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "retrieveHoldData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12487,
                              "src": "37514:50:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_ERC20HoldData_$12432_memory_ptr_$",
                                "typeString": "function (bytes32) view external returns (struct ERC20HoldData memory)"
                              }
                            },
                            "id": 24540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37514:58:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                              "typeString": "struct ERC20HoldData memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "37486:86:71"
                        },
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 24588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 24571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 24565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 24559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 24553,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 24545,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 24542,
                                              "name": "data",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 24534,
                                              "src": "37588:4:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                                                "typeString": "struct ERC20HoldData memory"
                                              }
                                            },
                                            "id": 24543,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 12418,
                                            "src": "37588:11:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "id": 24544,
                                            "name": "sender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24404,
                                            "src": "37603:6:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "37588:21:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "id": 24552,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 24546,
                                              "name": "data",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 24534,
                                              "src": "37613:4:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                                                "typeString": "struct ERC20HoldData memory"
                                              }
                                            },
                                            "id": 24547,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 12418,
                                            "src": "37613:11:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "arguments": [
                                              {
                                                "hexValue": "30",
                                                "id": 24550,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "37636:1:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "id": 24549,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "37628:7:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 24548,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "37628:7:71",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 24551,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "37628:10:71",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "37613:25:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "37588:50:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "id": 24554,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "37587:52:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 24558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 24555,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24534,
                                        "src": "37643:4:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                                          "typeString": "struct ERC20HoldData memory"
                                        }
                                      },
                                      "id": 24556,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "recipient",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12420,
                                      "src": "37643:14:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 24557,
                                      "name": "recipient",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24406,
                                      "src": "37661:9:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "37643:27:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "37587:83:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 24564,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 24560,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24534,
                                      "src": "37674:4:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                                        "typeString": "struct ERC20HoldData memory"
                                      }
                                    },
                                    "id": 24561,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12424,
                                    "src": "37674:11:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 24562,
                                      "name": "userTradeData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24409,
                                      "src": "37689:13:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                        "typeString": "struct Swaps.UserTradeData memory"
                                      }
                                    },
                                    "id": 24563,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21882,
                                    "src": "37689:24:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "37674:39:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "37587:126:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                                  "typeString": "enum HoldStatusCode"
                                },
                                "id": 24570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 24566,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24534,
                                    "src": "37717:4:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                                      "typeString": "struct ERC20HoldData memory"
                                    }
                                  },
                                  "id": 24567,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12431,
                                  "src": "37717:11:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                                    "typeString": "enum HoldStatusCode"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 24568,
                                    "name": "HoldStatusCode",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12361,
                                    "src": "37732:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$12361_$",
                                      "typeString": "type(enum HoldStatusCode)"
                                    }
                                  },
                                  "id": 24569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Ordered",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12355,
                                  "src": "37732:22:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                                    "typeString": "enum HoldStatusCode"
                                  }
                                },
                                "src": "37717:37:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "37587:167:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 24586,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "id": 24578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 24572,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24534,
                                        "src": "37759:4:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                                          "typeString": "struct ERC20HoldData memory"
                                        }
                                      },
                                      "id": 24573,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "secretHash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12428,
                                      "src": "37759:15:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 24576,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "37786:1:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 24575,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "37778:7:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes32_$",
                                          "typeString": "type(bytes32)"
                                        },
                                        "typeName": {
                                          "id": 24574,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "37778:7:71",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 24577,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "37778:10:71",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "src": "37759:29:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 24585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 24579,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24534,
                                        "src": "37792:4:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ERC20HoldData_$12432_memory_ptr",
                                          "typeString": "struct ERC20HoldData memory"
                                        }
                                      },
                                      "id": 24580,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "notary",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12422,
                                      "src": "37792:11:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 24583,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967268,
                                          "src": "37815:4:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Swaps_$25543",
                                            "typeString": "contract Swaps"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Swaps_$25543",
                                            "typeString": "contract Swaps"
                                          }
                                        ],
                                        "id": 24582,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "37807:7:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 24581,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "37807:7:71",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 24584,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "37807:13:71",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "37792:28:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "37759:61:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 24587,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "37758:63:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "37587:234:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 24413,
                          "id": 24589,
                          "nodeType": "Return",
                          "src": "37580:241:71"
                        }
                      ]
                    }
                  },
                  "id": 24597,
                  "nodeType": "IfStatement",
                  "src": "36631:1258:71",
                  "trueBody": {
                    "id": 24527,
                    "nodeType": "Block",
                    "src": "36669:766:71",
                    "statements": [
                      {
                        "assignments": [
                          24435
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24435,
                            "mutability": "mutable",
                            "name": "tokenExtension",
                            "nameLocation": "36685:14:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 24527,
                            "src": "36677:22:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 24434,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "36677:7:71",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24440,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 24437,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24415,
                              "src": "36716:12:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 24438,
                              "name": "ERC1400_TOKENS_VALIDATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21829,
                              "src": "36730:24:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 24436,
                            "name": "interfaceAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18501,
                            "src": "36702:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (address,string memory) view returns (address)"
                            }
                          },
                          "id": 24439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36702:53:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36677:78:71"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 24447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 24442,
                                "name": "tokenExtension",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24435,
                                "src": "36782:14:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 24445,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "36808:1:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 24444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "36800:7:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 24443,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "36800:7:71",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 24446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36800:10:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "36782:28:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "746f6b656e20686173206e6f20686f6c6461626c6520746f6b656e20657874656e73696f6e",
                              "id": 24448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36822:39:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073",
                                "typeString": "literal_string \"token has no holdable token extension\""
                              },
                              "value": "token has no holdable token extension"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_edd347b7968327b3600dcce7aedea7605cef236b6faa053fefe641b69cc9f073",
                                "typeString": "literal_string \"token has no holdable token extension\""
                              }
                            ],
                            "id": 24441,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "36763:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36763:106:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24450,
                        "nodeType": "ExpressionStatement",
                        "src": "36763:106:71"
                      },
                      {
                        "assignments": [
                          24453
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24453,
                            "mutability": "mutable",
                            "name": "holdStatus",
                            "nameLocation": "36893:10:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 24527,
                            "src": "36878:25:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                              "typeString": "enum HoldStatusCode"
                            },
                            "typeName": {
                              "id": 24452,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24451,
                                "name": "HoldStatusCode",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 12361,
                                "src": "36878:14:71"
                              },
                              "referencedDeclaration": 12361,
                              "src": "36878:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                                "typeString": "enum HoldStatusCode"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24454,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36878:25:71"
                      },
                      {
                        "assignments": [
                          24456
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24456,
                            "mutability": "mutable",
                            "name": "holdSender",
                            "nameLocation": "36919:10:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 24527,
                            "src": "36911:18:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 24455,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "36911:7:71",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24457,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36911:18:71"
                      },
                      {
                        "assignments": [
                          24459
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24459,
                            "mutability": "mutable",
                            "name": "holdRecipient",
                            "nameLocation": "36945:13:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 24527,
                            "src": "36937:21:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 24458,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "36937:7:71",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24460,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36937:21:71"
                      },
                      {
                        "assignments": [
                          24462
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24462,
                            "mutability": "mutable",
                            "name": "holdValue",
                            "nameLocation": "36974:9:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 24527,
                            "src": "36966:17:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 24461,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "36966:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24463,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36966:17:71"
                      },
                      {
                        "assignments": [
                          24465
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24465,
                            "mutability": "mutable",
                            "name": "notary",
                            "nameLocation": "36999:6:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 24527,
                            "src": "36991:14:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 24464,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "36991:7:71",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24466,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36991:14:71"
                      },
                      {
                        "assignments": [
                          24468
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24468,
                            "mutability": "mutable",
                            "name": "secretHash",
                            "nameLocation": "37021:10:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 24527,
                            "src": "37013:18:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 24467,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "37013:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24469,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "37013:18:71"
                      },
                      {
                        "expression": {
                          "id": 24484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              null,
                              {
                                "id": 24470,
                                "name": "holdSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24456,
                                "src": "37041:10:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 24471,
                                "name": "holdRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24459,
                                "src": "37052:13:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 24472,
                                "name": "notary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24465,
                                "src": "37066:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 24473,
                                "name": "holdValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24462,
                                "src": "37073:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              null,
                              {
                                "id": 24474,
                                "name": "secretHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24468,
                                "src": "37084:10:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              null,
                              {
                                "id": 24475,
                                "name": "holdStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24453,
                                "src": "37096:10:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                                  "typeString": "enum HoldStatusCode"
                                }
                              }
                            ],
                            "id": 24476,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "37039:68:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$_t_address_$_t_address_$_t_address_$_t_uint256_$__$_t_bytes32_$__$_t_enum$_HoldStatusCode_$12361_$",
                              "typeString": "tuple(,address,address,address,uint256,,bytes32,,enum HoldStatusCode)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 24481,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24415,
                                "src": "37174:12:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 24482,
                                "name": "holdId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24420,
                                "src": "37188:6:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 24478,
                                    "name": "tokenExtension",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24435,
                                    "src": "37141:14:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 24477,
                                  "name": "IHoldableERC1400TokenExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12589,
                                  "src": "37110:30:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IHoldableERC1400TokenExtension_$12589_$",
                                    "typeString": "type(contract IHoldableERC1400TokenExtension)"
                                  }
                                },
                                "id": 24479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "37110:46:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHoldableERC1400TokenExtension_$12589",
                                  "typeString": "contract IHoldableERC1400TokenExtension"
                                }
                              },
                              "id": 24480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "retrieveHoldData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12588,
                              "src": "37110:63:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_enum$_HoldStatusCode_$12361_$",
                                "typeString": "function (address,bytes32) view external returns (bytes32,address,address,address,uint256,uint256,bytes32,bytes32,enum HoldStatusCode)"
                              }
                            },
                            "id": 24483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "37110:85:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_enum$_HoldStatusCode_$12361_$",
                              "typeString": "tuple(bytes32,address,address,address,uint256,uint256,bytes32,bytes32,enum HoldStatusCode)"
                            }
                          },
                          "src": "37039:156:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24485,
                        "nodeType": "ExpressionStatement",
                        "src": "37039:156:71"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 24525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 24510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 24506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 24494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                                    "typeString": "enum HoldStatusCode"
                                  },
                                  "id": 24489,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 24486,
                                    "name": "holdStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24453,
                                    "src": "37210:10:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                                      "typeString": "enum HoldStatusCode"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 24487,
                                      "name": "HoldStatusCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12361,
                                      "src": "37224:14:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_HoldStatusCode_$12361_$",
                                        "typeString": "type(enum HoldStatusCode)"
                                      }
                                    },
                                    "id": 24488,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Ordered",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12355,
                                    "src": "37224:22:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_HoldStatusCode_$12361",
                                      "typeString": "enum HoldStatusCode"
                                    }
                                  },
                                  "src": "37210:36:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 24493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 24490,
                                    "name": "holdValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24462,
                                    "src": "37250:9:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 24491,
                                      "name": "userTradeData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24409,
                                      "src": "37263:13:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                                        "typeString": "struct Swaps.UserTradeData memory"
                                      }
                                    },
                                    "id": 24492,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenValue",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21882,
                                    "src": "37263:24:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "37250:37:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "37210:77:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 24504,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 24497,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 24495,
                                        "name": "holdSender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24456,
                                        "src": "37292:10:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "id": 24496,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24404,
                                        "src": "37306:6:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "37292:20:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 24503,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 24498,
                                        "name": "holdSender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24456,
                                        "src": "37316:10:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 24501,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "37338:1:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "id": 24500,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "37330:7:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 24499,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "37330:7:71",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 24502,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "37330:10:71",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "37316:24:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "37292:48:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 24505,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "37291:50:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "37210:131:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 24509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 24507,
                                "name": "holdRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24459,
                                "src": "37345:13:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 24508,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24406,
                                "src": "37362:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "37345:26:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "37210:161:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 24523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "id": 24516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 24511,
                                    "name": "secretHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24468,
                                    "src": "37376:10:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 24514,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "37398:1:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 24513,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "37390:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 24512,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "37390:7:71",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 24515,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "37390:10:71",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "src": "37376:24:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 24522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 24517,
                                    "name": "notary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24465,
                                    "src": "37404:6:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 24520,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "37422:4:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Swaps_$25543",
                                          "typeString": "contract Swaps"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Swaps_$25543",
                                          "typeString": "contract Swaps"
                                        }
                                      ],
                                      "id": 24519,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "37414:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 24518,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "37414:7:71",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 24521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "37414:13:71",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "37404:23:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "37376:51:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 24524,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "37375:53:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "37210:218:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 24413,
                        "id": 24526,
                        "nodeType": "Return",
                        "src": "37203:225:71"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 24599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_holdExists",
            "nameLocation": "36352:11:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24404,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "36372:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24599,
                  "src": "36364:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36364:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24406,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "36388:9:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24599,
                  "src": "36380:17:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36380:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24409,
                  "mutability": "mutable",
                  "name": "userTradeData",
                  "nameLocation": "36420:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24599,
                  "src": "36399:34:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  },
                  "typeName": {
                    "id": 24408,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24407,
                      "name": "UserTradeData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21895,
                      "src": "36399:13:71"
                    },
                    "referencedDeclaration": 21895,
                    "src": "36399:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36363:71:71"
            },
            "returnParameters": {
              "id": 24413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24599,
                  "src": "36457:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24411,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "36457:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36456:6:71"
            },
            "scope": 25543,
            "src": "36343:1550:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24668,
              "nodeType": "Block",
              "src": "39288:518:71",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 24609,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24604,
                        "src": "39297:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 24610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "39297:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 24611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "39320:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "39297:24:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24616,
                  "nodeType": "IfStatement",
                  "src": "39294:149:71",
                  "trueBody": {
                    "id": 24615,
                    "nodeType": "Block",
                    "src": "39323:120:71",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 24613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "39431:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 24608,
                        "id": 24614,
                        "nodeType": "Return",
                        "src": "39424:12:71"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    24618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24618,
                      "mutability": "mutable",
                      "name": "flag",
                      "nameLocation": "39461:4:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24668,
                      "src": "39453:12:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24617,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "39453:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24622,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24620,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24602,
                        "src": "39482:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 24619,
                      "name": "_getTradeFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24679,
                      "src": "39468:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 24621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39468:19:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39453:34:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 24630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 24626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 24623,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24602,
                          "src": "39496:4:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 24624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "39496:11:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "333230",
                        "id": 24625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39511:3:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_320_by_1",
                          "typeString": "int_const 320"
                        },
                        "value": "320"
                      },
                      "src": "39496:18:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 24629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 24627,
                        "name": "flag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24618,
                        "src": "39518:4:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 24628,
                        "name": "TRADE_PROPOSAL_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21798,
                        "src": "39526:19:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "39518:27:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "39496:49:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 24647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 24642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 24637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 24634,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24602,
                                  "src": "39584:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 24635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "39584:11:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "3634",
                                "id": 24636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "39599:2:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_64_by_1",
                                  "typeString": "int_const 64"
                                },
                                "value": "64"
                              },
                              "src": "39584:17:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 24641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 24638,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24602,
                                  "src": "39605:4:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 24639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "39605:11:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "3936",
                                "id": 24640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "39620:2:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_96_by_1",
                                  "typeString": "int_const 96"
                                },
                                "value": "96"
                              },
                              "src": "39605:17:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "39584:38:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 24643,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "39583:40:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 24646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24644,
                          "name": "flag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24618,
                          "src": "39627:4:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24645,
                          "name": "TRADE_ACCEPTANCE_FLAG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21801,
                          "src": "39635:21:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "39627:29:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "39583:73:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 24658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 24654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 24651,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24602,
                              "src": "39694:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 24652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "39694:11:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 24653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39709:2:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "39694:17:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 24657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24655,
                            "name": "flag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24618,
                            "src": "39715:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 24656,
                            "name": "BYPASS_ACTION_FLAG",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21804,
                            "src": "39723:18:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "39715:26:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "39694:47:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 24664,
                        "nodeType": "Block",
                        "src": "39775:27:71",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "66616c7365",
                              "id": 24662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39790:5:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 24608,
                            "id": 24663,
                            "nodeType": "Return",
                            "src": "39783:12:71"
                          }
                        ]
                      },
                      "id": 24665,
                      "nodeType": "IfStatement",
                      "src": "39690:112:71",
                      "trueBody": {
                        "id": 24661,
                        "nodeType": "Block",
                        "src": "39743:26:71",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "74727565",
                              "id": 24659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39758:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "functionReturnParameters": 24608,
                            "id": 24660,
                            "nodeType": "Return",
                            "src": "39751:11:71"
                          }
                        ]
                      }
                    },
                    "id": 24666,
                    "nodeType": "IfStatement",
                    "src": "39579:223:71",
                    "trueBody": {
                      "id": 24650,
                      "nodeType": "Block",
                      "src": "39658:26:71",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "74727565",
                            "id": 24648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39673:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 24608,
                          "id": 24649,
                          "nodeType": "Return",
                          "src": "39666:11:71"
                        }
                      ]
                    }
                  },
                  "id": 24667,
                  "nodeType": "IfStatement",
                  "src": "39493:309:71",
                  "trueBody": {
                    "id": 24633,
                    "nodeType": "Block",
                    "src": "39547:26:71",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 24631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "39562:4:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 24608,
                        "id": 24632,
                        "nodeType": "Return",
                        "src": "39555:11:71"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 24600,
              "nodeType": "StructuredDocumentation",
              "src": "37897:1293:71",
              "text": " @dev Indicate whether or not the Swaps contract can receive the tokens or not.\n By convention, the 32 first bytes of a token transfer to the Swaps smart contract contain a flag.\n  - When tokens are transferred to Swaps contract to propose a new trade. The 'data' field starts with the\n  following flag: 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n  In this case the data structure is the the following:\n  <tradeFlag (32 bytes)><recipient address (32 bytes)><executer address (32 bytes)><expiration date (32 bytes)><requested token data (4 * 32 bytes)>\n  - When tokens are transferred to Swaps contract to accept an existing trade. The 'data' field starts with the\n  following flag: 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n  In this case the data structure is the the following:\n  <tradeFlag (32 bytes)><request index (32 bytes)>\n If the 'data' doesn't start with one of those flags, the Swaps contract won't accept the token transfer.\n @param data Information attached to the Swaps transfer.\n @param operatorData Information attached to the Swaps transfer, by the operator.\n @return 'true' if the Swaps contract can receive the tokens, 'false' if not."
            },
            "id": 24669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canReceive",
            "nameLocation": "39202:11:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24602,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "39227:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24669,
                  "src": "39214:17:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24601,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "39214:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24604,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "39246:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24669,
                  "src": "39233:25:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24603,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "39233:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39213:46:71"
            },
            "returnParameters": {
              "id": 24608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24607,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24669,
                  "src": "39282:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24606,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "39282:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39281:6:71"
            },
            "scope": 25543,
            "src": "39193:613:71",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24678,
              "nodeType": "Block",
              "src": "40575:60:71",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "40590:41:71",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "40598:27:71",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "40615:4:71"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "40621:2:71",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "40611:3:71"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "40611:13:71"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "40605:5:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "40605:20:71"
                        },
                        "variableNames": [
                          {
                            "name": "flag",
                            "nodeType": "YulIdentifier",
                            "src": "40598:4:71"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 24672,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "40615:4:71",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24675,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "40598:4:71",
                      "valueSize": 1
                    }
                  ],
                  "id": 24677,
                  "nodeType": "InlineAssembly",
                  "src": "40581:50:71"
                }
              ]
            },
            "documentation": {
              "id": 24670,
              "nodeType": "StructuredDocumentation",
              "src": "39812:682:71",
              "text": " @dev Retrieve the trade flag from the 'data' field.\n By convention, the 32 first bytes of a token transfer to the Swaps smart contract contain a flag.\n  - When tokens are transferred to Swaps contract to propose a new trade. The 'data' field starts with the\n  following flag: 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n  - When tokens are transferred to Swaps contract to accept an existing trade. The 'data' field starts with the\n  following flag: 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n @param data Concatenated information about the trade proposal.\n @return flag Trade flag."
            },
            "id": 24679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTradeFlag",
            "nameLocation": "40506:13:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24672,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "40533:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24679,
                  "src": "40520:17:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24671,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "40520:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40519:19:71"
            },
            "returnParameters": {
              "id": 24676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24675,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "40569:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24679,
                  "src": "40561:12:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24674,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "40561:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40560:14:71"
            },
            "scope": 25543,
            "src": "40497:138:71",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24718,
              "nodeType": "Block",
              "src": "43471:513:71",
              "statements": [
                {
                  "assignments": [
                    24689
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24689,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "43485:12:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24718,
                      "src": "43477:20:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24688,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "43477:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24690,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43477:20:71"
                },
                {
                  "assignments": [
                    24692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24692,
                      "mutability": "mutable",
                      "name": "tokenAmount",
                      "nameLocation": "43511:11:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24718,
                      "src": "43503:19:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24691,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "43503:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24693,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43503:19:71"
                },
                {
                  "assignments": [
                    24695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24695,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "43536:7:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24718,
                      "src": "43528:15:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24694,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "43528:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24696,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43528:15:71"
                },
                {
                  "assignments": [
                    24699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24699,
                      "mutability": "mutable",
                      "name": "tokenStandard",
                      "nameLocation": "43558:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24718,
                      "src": "43549:22:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Standard_$21813",
                        "typeString": "enum Swaps.Standard"
                      },
                      "typeName": {
                        "id": 24698,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24697,
                          "name": "Standard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21813,
                          "src": "43549:8:71"
                        },
                        "referencedDeclaration": 21813,
                        "src": "43549:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Standard_$21813",
                          "typeString": "enum Swaps.Standard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24700,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43549:22:71"
                },
                {
                  "assignments": [
                    24703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24703,
                      "mutability": "mutable",
                      "name": "tradeType",
                      "nameLocation": "43587:9:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 24718,
                      "src": "43577:19:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_TradeType_$21823",
                        "typeString": "enum Swaps.TradeType"
                      },
                      "typeName": {
                        "id": 24702,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24701,
                          "name": "TradeType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21823,
                          "src": "43577:9:71"
                        },
                        "referencedDeclaration": 21823,
                        "src": "43577:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_TradeType_$21823",
                          "typeString": "enum Swaps.TradeType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24704,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43577:19:71"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "43611:214:71",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "43619:36:71",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "43644:4:71"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "43650:3:71",
                                  "type": "",
                                  "value": "192"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "43640:3:71"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "43640:14:71"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "43634:5:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43634:21:71"
                        },
                        "variableNames": [
                          {
                            "name": "tokenAddress",
                            "nodeType": "YulIdentifier",
                            "src": "43619:12:71"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "43662:35:71",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "43686:4:71"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "43692:3:71",
                                  "type": "",
                                  "value": "224"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "43682:3:71"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "43682:14:71"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "43676:5:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43676:21:71"
                        },
                        "variableNames": [
                          {
                            "name": "tokenAmount",
                            "nodeType": "YulIdentifier",
                            "src": "43662:11:71"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "43704:31:71",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "43724:4:71"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "43730:3:71",
                                  "type": "",
                                  "value": "256"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "43720:3:71"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "43720:14:71"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "43714:5:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43714:21:71"
                        },
                        "variableNames": [
                          {
                            "name": "tokenId",
                            "nodeType": "YulIdentifier",
                            "src": "43704:7:71"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "43742:37:71",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "43768:4:71"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "43774:3:71",
                                  "type": "",
                                  "value": "288"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "43764:3:71"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "43764:14:71"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "43758:5:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43758:21:71"
                        },
                        "variableNames": [
                          {
                            "name": "tokenStandard",
                            "nodeType": "YulIdentifier",
                            "src": "43742:13:71"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "43786:33:71",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "43808:4:71"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "43814:3:71",
                                  "type": "",
                                  "value": "320"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "43804:3:71"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "43804:14:71"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "43798:5:71"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "43798:21:71"
                        },
                        "variableNames": [
                          {
                            "name": "tradeType",
                            "nodeType": "YulIdentifier",
                            "src": "43786:9:71"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 24682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43644:4:71",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43686:4:71",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43724:4:71",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43768:4:71",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24682,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43808:4:71",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24689,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43619:12:71",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24692,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43662:11:71",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24695,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43704:7:71",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24699,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43742:13:71",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24703,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "43786:9:71",
                      "valueSize": 1
                    }
                  ],
                  "id": 24705,
                  "nodeType": "InlineAssembly",
                  "src": "43602:223:71"
                },
                {
                  "expression": {
                    "id": 24716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24706,
                      "name": "tokenData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24686,
                      "src": "43830:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24708,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24689,
                          "src": "43863:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 24709,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24692,
                          "src": "43883:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 24710,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24695,
                          "src": "43902:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 24711,
                          "name": "tokenStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24699,
                          "src": "43917:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Standard_$21813",
                            "typeString": "enum Swaps.Standard"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 24712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "43938:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 24713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "43951:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "id": 24714,
                          "name": "tradeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24703,
                          "src": "43964:9:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TradeType_$21823",
                            "typeString": "enum Swaps.TradeType"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_enum$_Standard_$21813",
                            "typeString": "enum Swaps.Standard"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_enum$_TradeType_$21823",
                            "typeString": "enum Swaps.TradeType"
                          }
                        ],
                        "id": 24707,
                        "name": "UserTradeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21895,
                        "src": "43842:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_UserTradeData_$21895_storage_ptr_$",
                          "typeString": "type(struct Swaps.UserTradeData storage pointer)"
                        }
                      },
                      "id": 24715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "43842:137:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                        "typeString": "struct Swaps.UserTradeData memory"
                      }
                    },
                    "src": "43830:149:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                      "typeString": "struct Swaps.UserTradeData memory"
                    }
                  },
                  "id": 24717,
                  "nodeType": "ExpressionStatement",
                  "src": "43830:149:71"
                }
              ]
            },
            "documentation": {
              "id": 24680,
              "nodeType": "StructuredDocumentation",
              "src": "43091:276:71",
              "text": " @dev Retrieve the tokenData from the 'data' field.\n @param data Concatenated information about the trade proposal.\n @return tokenData Trade token data < 1: address > < 2: amount > < 3: id/partition > < 4: standard > < 5: accepted > < 6: approved >."
            },
            "id": 24719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTradeTokenData",
            "nameLocation": "43379:18:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24682,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "43411:4:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24719,
                  "src": "43398:17:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24681,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "43398:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43397:19:71"
            },
            "returnParameters": {
              "id": 24687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24686,
                  "mutability": "mutable",
                  "name": "tokenData",
                  "nameLocation": "43460:9:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24719,
                  "src": "43439:30:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserTradeData_$21895_memory_ptr",
                    "typeString": "struct Swaps.UserTradeData"
                  },
                  "typeName": {
                    "id": 24685,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24684,
                      "name": "UserTradeData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21895,
                      "src": "43439:13:71"
                    },
                    "referencedDeclaration": 21895,
                    "src": "43439:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserTradeData_$21895_storage_ptr",
                      "typeString": "struct Swaps.UserTradeData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43438:32:71"
            },
            "scope": 25543,
            "src": "43370:614:71",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              618
            ],
            "body": {
              "id": 24735,
              "nodeType": "Block",
              "src": "44921:66:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 24726,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 661,
                        "src": "44927:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$661_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 24728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "renounceOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 618,
                      "src": "44927:25:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 24729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44927:27:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24730,
                  "nodeType": "ExpressionStatement",
                  "src": "44927:27:71"
                },
                {
                  "expression": {
                    "id": 24733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24731,
                      "name": "_ownedContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21986,
                      "src": "44960:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 24732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "44977:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "44960:22:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24734,
                  "nodeType": "ExpressionStatement",
                  "src": "44960:22:71"
                }
              ]
            },
            "documentation": {
              "id": 24720,
              "nodeType": "StructuredDocumentation",
              "src": "44808:55:71",
              "text": " @dev Renounce ownership of the contract."
            },
            "functionSelector": "715018a6",
            "id": 24736,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24724,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24723,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 604,
                  "src": "44911:9:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "44911:9:71"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "44875:17:71",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24722,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "44902:8:71"
            },
            "parameters": {
              "id": 24721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "44892:2:71"
            },
            "returnParameters": {
              "id": 24725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "44921:0:71"
            },
            "scope": 25543,
            "src": "44866:121:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24745,
              "nodeType": "Block",
              "src": "45205:33:71",
              "statements": [
                {
                  "expression": {
                    "id": 24743,
                    "name": "_tradeExecuters",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21989,
                    "src": "45218:15:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 24742,
                  "id": 24744,
                  "nodeType": "Return",
                  "src": "45211:22:71"
                }
              ]
            },
            "documentation": {
              "id": 24737,
              "nodeType": "StructuredDocumentation",
              "src": "44991:144:71",
              "text": " @dev Get the list of trade executers as defined by the Swaps contract.\n @return List of addresses of all the trade executers."
            },
            "functionSelector": "45a06cb2",
            "id": 24746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tradeExecuters",
            "nameLocation": "45147:14:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45161:2:71"
            },
            "returnParameters": {
              "id": 24742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24741,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24746,
                  "src": "45187:16:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24739,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "45187:7:71",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24740,
                    "nodeType": "ArrayTypeName",
                    "src": "45187:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45186:18:71"
            },
            "scope": 25543,
            "src": "45138:100:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24764,
              "nodeType": "Block",
              "src": "45441:100:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24756,
                        "name": "_ownedContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21986,
                        "src": "45455:14:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537761707320636f6e7472616374206973206e6f74206f776e6564",
                        "id": 24757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "45471:29:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c96902dc6641465bcb47d51e789da6011d4ef6e7cace86feca178d31470e323a",
                          "typeString": "literal_string \"Swaps contract is not owned\""
                        },
                        "value": "Swaps contract is not owned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c96902dc6641465bcb47d51e789da6011d4ef6e7cace86feca178d31470e323a",
                          "typeString": "literal_string \"Swaps contract is not owned\""
                        }
                      ],
                      "id": 24755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "45447:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "45447:54:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24759,
                  "nodeType": "ExpressionStatement",
                  "src": "45447:54:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24761,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24750,
                        "src": "45526:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      ],
                      "id": 24760,
                      "name": "_setTradeExecuters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24819,
                      "src": "45507:18:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 24762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "45507:29:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24763,
                  "nodeType": "ExpressionStatement",
                  "src": "45507:29:71"
                }
              ]
            },
            "documentation": {
              "id": 24747,
              "nodeType": "StructuredDocumentation",
              "src": "45242:120:71",
              "text": " @dev Set list of trade executers for the Swaps contract.\n @param operators Trade executers addresses."
            },
            "functionSelector": "a22ae631",
            "id": 24765,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24753,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24752,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 604,
                  "src": "45431:9:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "45431:9:71"
              }
            ],
            "name": "setTradeExecuters",
            "nameLocation": "45374:17:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24750,
                  "mutability": "mutable",
                  "name": "operators",
                  "nameLocation": "45411:9:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24765,
                  "src": "45392:28:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24748,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "45392:7:71",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24749,
                    "nodeType": "ArrayTypeName",
                    "src": "45392:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45391:30:71"
            },
            "returnParameters": {
              "id": 24754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45441:0:71"
            },
            "scope": 25543,
            "src": "45365:176:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24818,
              "nodeType": "Block",
              "src": "45733:248:71",
              "statements": [
                {
                  "body": {
                    "id": 24791,
                    "nodeType": "Block",
                    "src": "45787:59:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 24789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 24783,
                              "name": "_isTradeExecuter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21993,
                              "src": "45795:16:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24787,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 24784,
                                "name": "_tradeExecuters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21989,
                                "src": "45812:15:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 24786,
                              "indexExpression": {
                                "id": 24785,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24773,
                                "src": "45828:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "45812:18:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "45795:36:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 24788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "45834:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "45795:44:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24790,
                        "nodeType": "ExpressionStatement",
                        "src": "45795:44:71"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24776,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24773,
                      "src": "45757:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 24777,
                        "name": "_tradeExecuters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21989,
                        "src": "45759:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 24778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "45759:22:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "45757:24:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24792,
                  "initializationExpression": {
                    "assignments": [
                      24773
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24773,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "45750:1:71",
                        "nodeType": "VariableDeclaration",
                        "scope": 24792,
                        "src": "45745:6:71",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24772,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "45745:4:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24775,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "45754:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "45745:10:71"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "45783:3:71",
                      "subExpression": {
                        "id": 24780,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24773,
                        "src": "45783:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24782,
                    "nodeType": "ExpressionStatement",
                    "src": "45783:3:71"
                  },
                  "nodeType": "ForStatement",
                  "src": "45740:106:71"
                },
                {
                  "body": {
                    "id": 24812,
                    "nodeType": "Block",
                    "src": "45892:52:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 24810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 24804,
                              "name": "_isTradeExecuter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21993,
                              "src": "45900:16:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24808,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 24805,
                                "name": "operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24769,
                                "src": "45917:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 24807,
                              "indexExpression": {
                                "id": 24806,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24794,
                                "src": "45927:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "45917:12:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "45900:30:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 24809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "45933:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "45900:37:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24811,
                        "nodeType": "ExpressionStatement",
                        "src": "45900:37:71"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24797,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24794,
                      "src": "45868:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 24798,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24769,
                        "src": "45870:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "45870:16:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "45868:18:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24813,
                  "initializationExpression": {
                    "assignments": [
                      24794
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24794,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "45861:1:71",
                        "nodeType": "VariableDeclaration",
                        "scope": 24813,
                        "src": "45856:6:71",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24793,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "45856:4:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24796,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "45865:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "45856:10:71"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "45888:3:71",
                      "subExpression": {
                        "id": 24801,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24794,
                        "src": "45888:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24803,
                    "nodeType": "ExpressionStatement",
                    "src": "45888:3:71"
                  },
                  "nodeType": "ForStatement",
                  "src": "45851:93:71"
                },
                {
                  "expression": {
                    "id": 24816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24814,
                      "name": "_tradeExecuters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21989,
                      "src": "45949:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24815,
                      "name": "operators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24769,
                      "src": "45967:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "45949:27:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 24817,
                  "nodeType": "ExpressionStatement",
                  "src": "45949:27:71"
                }
              ]
            },
            "documentation": {
              "id": 24766,
              "nodeType": "StructuredDocumentation",
              "src": "45545:120:71",
              "text": " @dev Set list of trade executers for the Swaps contract.\n @param operators Trade executers addresses."
            },
            "id": 24819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTradeExecuters",
            "nameLocation": "45677:18:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24769,
                  "mutability": "mutable",
                  "name": "operators",
                  "nameLocation": "45713:9:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24819,
                  "src": "45696:26:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24767,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "45696:7:71",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24768,
                    "nodeType": "ArrayTypeName",
                    "src": "45696:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45695:28:71"
            },
            "returnParameters": {
              "id": 24771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45733:0:71"
            },
            "scope": 25543,
            "src": "45668:313:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24832,
              "nodeType": "Block",
              "src": "46350:49:71",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 24828,
                      "name": "_tokenControllers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21998,
                      "src": "46363:17:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 24830,
                    "indexExpression": {
                      "id": 24829,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24822,
                      "src": "46381:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "46363:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 24827,
                  "id": 24831,
                  "nodeType": "Return",
                  "src": "46356:38:71"
                }
              ]
            },
            "documentation": {
              "id": 24820,
              "nodeType": "StructuredDocumentation",
              "src": "46067:191:71",
              "text": " @dev Get the list of token controllers for a given token.\n @param tokenAddress Token address.\n @return List of addresses of all the token controllers for a given token."
            },
            "functionSelector": "759561fa",
            "id": 24833,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenControllers",
            "nameLocation": "46270:16:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24822,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "46295:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24833,
                  "src": "46287:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46287:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46286:22:71"
            },
            "returnParameters": {
              "id": 24827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24826,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24833,
                  "src": "46332:16:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24824,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "46332:7:71",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24825,
                    "nodeType": "ArrayTypeName",
                    "src": "46332:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46331:18:71"
            },
            "scope": 25543,
            "src": "46261:138:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24901,
              "nodeType": "Block",
              "src": "46681:327:71",
              "statements": [
                {
                  "body": {
                    "id": 24870,
                    "nodeType": "Block",
                    "src": "46750:91:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 24868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24858,
                                "name": "_isTokenController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22004,
                                "src": "46758:18:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24865,
                              "indexExpression": {
                                "id": 24859,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24836,
                                "src": "46777:12:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "46758:32:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24866,
                            "indexExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 24860,
                                  "name": "_tokenControllers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21998,
                                  "src": "46791:17:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                    "typeString": "mapping(address => address[] storage ref)"
                                  }
                                },
                                "id": 24862,
                                "indexExpression": {
                                  "id": 24861,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24836,
                                  "src": "46809:12:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "46791:31:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 24864,
                              "indexExpression": {
                                "id": 24863,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24846,
                                "src": "46823:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "46791:34:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "46758:68:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 24867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "46829:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "46758:76:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24869,
                        "nodeType": "ExpressionStatement",
                        "src": "46758:76:71"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24849,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24846,
                      "src": "46704:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 24850,
                          "name": "_tokenControllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21998,
                          "src": "46706:17:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 24852,
                        "indexExpression": {
                          "id": 24851,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24836,
                          "src": "46724:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "46706:31:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 24853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "46706:38:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "46704:40:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24871,
                  "initializationExpression": {
                    "assignments": [
                      24846
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24846,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "46697:1:71",
                        "nodeType": "VariableDeclaration",
                        "scope": 24871,
                        "src": "46692:6:71",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24845,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "46692:4:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24848,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "46701:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "46692:10:71"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "46746:3:71",
                      "subExpression": {
                        "id": 24855,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24846,
                        "src": "46746:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24857,
                    "nodeType": "ExpressionStatement",
                    "src": "46746:3:71"
                  },
                  "nodeType": "ForStatement",
                  "src": "46687:154:71"
                },
                {
                  "body": {
                    "id": 24893,
                    "nodeType": "Block",
                    "src": "46887:68:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 24891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24883,
                                "name": "_isTokenController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22004,
                                "src": "46895:18:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24888,
                              "indexExpression": {
                                "id": 24884,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24836,
                                "src": "46914:12:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "46895:32:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24889,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 24885,
                                "name": "operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24839,
                                "src": "46928:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 24887,
                              "indexExpression": {
                                "id": 24886,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24873,
                                "src": "46938:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "46928:12:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "46895:46:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 24890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "46944:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "46895:53:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24892,
                        "nodeType": "ExpressionStatement",
                        "src": "46895:53:71"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24876,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24873,
                      "src": "46863:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 24877,
                        "name": "operators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24839,
                        "src": "46865:9:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 24878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "46865:16:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "46863:18:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24894,
                  "initializationExpression": {
                    "assignments": [
                      24873
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24873,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "46856:1:71",
                        "nodeType": "VariableDeclaration",
                        "scope": 24894,
                        "src": "46851:6:71",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24872,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "46851:4:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24875,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "46860:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "46851:10:71"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "46883:3:71",
                      "subExpression": {
                        "id": 24880,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24873,
                        "src": "46883:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24882,
                    "nodeType": "ExpressionStatement",
                    "src": "46883:3:71"
                  },
                  "nodeType": "ForStatement",
                  "src": "46846:109:71"
                },
                {
                  "expression": {
                    "id": 24899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24895,
                        "name": "_tokenControllers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21998,
                        "src": "46960:17:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(address => address[] storage ref)"
                        }
                      },
                      "id": 24897,
                      "indexExpression": {
                        "id": 24896,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24836,
                        "src": "46978:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "46960:31:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24898,
                      "name": "operators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24839,
                      "src": "46994:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "46960:43:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 24900,
                  "nodeType": "ExpressionStatement",
                  "src": "46960:43:71"
                }
              ]
            },
            "documentation": {
              "id": 24834,
              "nodeType": "StructuredDocumentation",
              "src": "46403:151:71",
              "text": " @dev Set list of token controllers for a given token.\n @param tokenAddress Token address.\n @param operators Operators addresses."
            },
            "functionSelector": "ec96dfb4",
            "id": 24902,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24842,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24836,
                    "src": "46667:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 24843,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24841,
                  "name": "onlyTokenController",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22034,
                  "src": "46647:19:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "46647:33:71"
              }
            ],
            "name": "setTokenControllers",
            "nameLocation": "46566:19:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24836,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "46594:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24902,
                  "src": "46586:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "46586:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24839,
                  "mutability": "mutable",
                  "name": "operators",
                  "nameLocation": "46627:9:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24902,
                  "src": "46608:28:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24837,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "46608:7:71",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24838,
                    "nodeType": "ArrayTypeName",
                    "src": "46608:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "46585:52:71"
            },
            "returnParameters": {
              "id": 24844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "46681:0:71"
            },
            "scope": 25543,
            "src": "46557:451:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24915,
              "nodeType": "Block",
              "src": "47367:45:71",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 24911,
                      "name": "_priceOracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21962,
                      "src": "47380:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 24913,
                    "indexExpression": {
                      "id": 24912,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24905,
                      "src": "47394:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "47380:27:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 24910,
                  "id": 24914,
                  "nodeType": "Return",
                  "src": "47373:34:71"
                }
              ]
            },
            "documentation": {
              "id": 24903,
              "nodeType": "StructuredDocumentation",
              "src": "47096:183:71",
              "text": " @dev Get the list of price oracles for a given token.\n @param tokenAddress Token address.\n @return List of addresses of all the price oracles for a given token."
            },
            "functionSelector": "01374518",
            "id": 24916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "priceOracles",
            "nameLocation": "47291:12:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24905,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "47312:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24916,
                  "src": "47304:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "47304:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "47303:22:71"
            },
            "returnParameters": {
              "id": 24910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24909,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24916,
                  "src": "47349:16:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24907,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "47349:7:71",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24908,
                    "nodeType": "ArrayTypeName",
                    "src": "47349:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "47348:18:71"
            },
            "scope": 25543,
            "src": "47282:130:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24984,
              "nodeType": "Block",
              "src": "47676:301:71",
              "statements": [
                {
                  "body": {
                    "id": 24953,
                    "nodeType": "Block",
                    "src": "47741:83:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 24951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24941,
                                "name": "_isPriceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21968,
                                "src": "47749:14:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24948,
                              "indexExpression": {
                                "id": 24942,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24919,
                                "src": "47764:12:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "47749:28:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24949,
                            "indexExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 24943,
                                  "name": "_priceOracles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21962,
                                  "src": "47778:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                    "typeString": "mapping(address => address[] storage ref)"
                                  }
                                },
                                "id": 24945,
                                "indexExpression": {
                                  "id": 24944,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24919,
                                  "src": "47792:12:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "47778:27:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 24947,
                              "indexExpression": {
                                "id": 24946,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24929,
                                "src": "47806:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "47778:30:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "47749:60:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 24950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "47812:5:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "47749:68:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24952,
                        "nodeType": "ExpressionStatement",
                        "src": "47749:68:71"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24932,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24929,
                      "src": "47699:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 24933,
                          "name": "_priceOracles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21962,
                          "src": "47701:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 24935,
                        "indexExpression": {
                          "id": 24934,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24919,
                          "src": "47715:12:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "47701:27:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 24936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "47701:34:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "47699:36:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24954,
                  "initializationExpression": {
                    "assignments": [
                      24929
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24929,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "47692:1:71",
                        "nodeType": "VariableDeclaration",
                        "scope": 24954,
                        "src": "47687:6:71",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24928,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "47687:4:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24931,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "47696:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "47687:10:71"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "47737:3:71",
                      "subExpression": {
                        "id": 24938,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24929,
                        "src": "47737:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24940,
                    "nodeType": "ExpressionStatement",
                    "src": "47737:3:71"
                  },
                  "nodeType": "ForStatement",
                  "src": "47682:142:71"
                },
                {
                  "body": {
                    "id": 24976,
                    "nodeType": "Block",
                    "src": "47868:62:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 24974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24966,
                                "name": "_isPriceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21968,
                                "src": "47876:14:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24971,
                              "indexExpression": {
                                "id": 24967,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24919,
                                "src": "47891:12:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "47876:28:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24972,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 24968,
                                "name": "oracles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24922,
                                "src": "47905:7:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 24970,
                              "indexExpression": {
                                "id": 24969,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24956,
                                "src": "47913:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "47905:10:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "47876:40:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 24973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "47919:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "47876:47:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24975,
                        "nodeType": "ExpressionStatement",
                        "src": "47876:47:71"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24959,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24956,
                      "src": "47846:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 24960,
                        "name": "oracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24922,
                        "src": "47848:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 24961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "47848:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "47846:16:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24977,
                  "initializationExpression": {
                    "assignments": [
                      24956
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24956,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "47839:1:71",
                        "nodeType": "VariableDeclaration",
                        "scope": 24977,
                        "src": "47834:6:71",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24955,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "47834:4:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24958,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "47843:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "47834:10:71"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "47864:3:71",
                      "subExpression": {
                        "id": 24963,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24956,
                        "src": "47864:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24965,
                    "nodeType": "ExpressionStatement",
                    "src": "47864:3:71"
                  },
                  "nodeType": "ForStatement",
                  "src": "47829:101:71"
                },
                {
                  "expression": {
                    "id": 24982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24978,
                        "name": "_priceOracles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21962,
                        "src": "47935:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(address => address[] storage ref)"
                        }
                      },
                      "id": 24980,
                      "indexExpression": {
                        "id": 24979,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24919,
                        "src": "47949:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "47935:27:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24981,
                      "name": "oracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24922,
                      "src": "47965:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "47935:37:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 24983,
                  "nodeType": "ExpressionStatement",
                  "src": "47935:37:71"
                }
              ]
            },
            "documentation": {
              "id": 24917,
              "nodeType": "StructuredDocumentation",
              "src": "47416:143:71",
              "text": " @dev Set list of price oracles for a given token.\n @param tokenAddress Token address.\n @param oracles Oracles addresses."
            },
            "functionSelector": "01636f4e",
            "id": 24985,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24925,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24919,
                    "src": "47662:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 24926,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24924,
                  "name": "onlyPriceOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22050,
                  "src": "47646:15:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "47646:29:71"
              }
            ],
            "name": "setPriceOracles",
            "nameLocation": "47571:15:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24919,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "47595:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24985,
                  "src": "47587:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "47587:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24922,
                  "mutability": "mutable",
                  "name": "oracles",
                  "nameLocation": "47628:7:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 24985,
                  "src": "47609:26:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24920,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "47609:7:71",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24921,
                    "nodeType": "ArrayTypeName",
                    "src": "47609:9:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "47586:50:71"
            },
            "returnParameters": {
              "id": 24927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "47676:0:71"
            },
            "scope": 25543,
            "src": "47562:415:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 25010,
              "nodeType": "Block",
              "src": "48281:98:71",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 24995,
                              "name": "_isPriceOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21968,
                              "src": "48294:14:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 24997,
                            "indexExpression": {
                              "id": 24996,
                              "name": "tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24988,
                              "src": "48309:12:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "48294:28:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 24999,
                          "indexExpression": {
                            "id": 24998,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24990,
                            "src": "48323:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "48294:36:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 25006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25000,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24990,
                            "src": "48334:6:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 25002,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24988,
                                    "src": "48352:12:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 25001,
                                  "name": "Ownable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 661,
                                  "src": "48344:7:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Ownable_$661_$",
                                    "typeString": "type(contract Ownable)"
                                  }
                                },
                                "id": 25003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "48344:21:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Ownable_$661",
                                  "typeString": "contract Ownable"
                                }
                              },
                              "id": 25004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 590,
                              "src": "48344:27:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 25005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "48344:29:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "48334:39:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "48294:79:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 25008,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "48293:81:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 24994,
                  "id": 25009,
                  "nodeType": "Return",
                  "src": "48287:87:71"
                }
              ]
            },
            "documentation": {
              "id": 24986,
              "nodeType": "StructuredDocumentation",
              "src": "47981:204:71",
              "text": " @dev Check if address is oracle of a given token.\n @param tokenAddress Token address.\n @param oracle Oracle address.\n @return 'true' if the address is oracle of the given token."
            },
            "id": 25011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkPriceOracle",
            "nameLocation": "48197:17:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24988,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "48223:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25011,
                  "src": "48215:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48215:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24990,
                  "mutability": "mutable",
                  "name": "oracle",
                  "nameLocation": "48245:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25011,
                  "src": "48237:14:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48237:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48214:38:71"
            },
            "returnParameters": {
              "id": 24994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24993,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25011,
                  "src": "48275:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24992,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "48275:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48274:6:71"
            },
            "scope": 25543,
            "src": "48188:191:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25027,
              "nodeType": "Block",
              "src": "48740:63:71",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 25021,
                        "name": "_priceOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21974,
                        "src": "48753:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 25023,
                      "indexExpression": {
                        "id": 25022,
                        "name": "tokenAddress1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25014,
                        "src": "48769:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "48753:30:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 25025,
                    "indexExpression": {
                      "id": 25024,
                      "name": "tokenAddress2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25016,
                      "src": "48784:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "48753:45:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 25020,
                  "id": 25026,
                  "nodeType": "Return",
                  "src": "48746:52:71"
                }
              ]
            },
            "documentation": {
              "id": 25012,
              "nodeType": "StructuredDocumentation",
              "src": "48466:170:71",
              "text": " @dev Get price of the token.\n @param tokenAddress1 Address of the token to be priced.\n @param tokenAddress2 Address of the token to pay for token1."
            },
            "functionSelector": "1af6649f",
            "id": 25028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceOwnership",
            "nameLocation": "48648:17:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25014,
                  "mutability": "mutable",
                  "name": "tokenAddress1",
                  "nameLocation": "48674:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25028,
                  "src": "48666:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48666:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25016,
                  "mutability": "mutable",
                  "name": "tokenAddress2",
                  "nameLocation": "48697:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25028,
                  "src": "48689:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "48689:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48665:46:71"
            },
            "returnParameters": {
              "id": 25020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25019,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25028,
                  "src": "48734:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25018,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "48734:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "48733:6:71"
            },
            "scope": 25543,
            "src": "48639:164:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 25049,
              "nodeType": "Block",
              "src": "49139:73:71",
              "statements": [
                {
                  "expression": {
                    "id": 25047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25041,
                          "name": "_priceOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21974,
                          "src": "49145:15:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 25044,
                        "indexExpression": {
                          "id": 25042,
                          "name": "tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25031,
                          "src": "49161:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "49145:30:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25045,
                      "indexExpression": {
                        "id": 25043,
                        "name": "tokenAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25033,
                        "src": "49176:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "49145:45:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25046,
                      "name": "priceOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25035,
                      "src": "49193:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "49145:62:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25048,
                  "nodeType": "ExpressionStatement",
                  "src": "49145:62:71"
                }
              ]
            },
            "documentation": {
              "id": 25029,
              "nodeType": "StructuredDocumentation",
              "src": "48807:195:71",
              "text": " @dev Take ownership for setting the price of a token.\n @param tokenAddress1 Address of the token to be priced.\n @param tokenAddress2 Address of the token to pay for token1."
            },
            "functionSelector": "0baf41a6",
            "id": 25050,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 25038,
                    "name": "tokenAddress1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25031,
                    "src": "49124:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 25039,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25037,
                  "name": "onlyPriceOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22050,
                  "src": "49108:15:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "49108:30:71"
              }
            ],
            "name": "setPriceOwnership",
            "nameLocation": "49014:17:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25031,
                  "mutability": "mutable",
                  "name": "tokenAddress1",
                  "nameLocation": "49040:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25050,
                  "src": "49032:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49032:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25033,
                  "mutability": "mutable",
                  "name": "tokenAddress2",
                  "nameLocation": "49063:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25050,
                  "src": "49055:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49055:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25035,
                  "mutability": "mutable",
                  "name": "priceOwnership",
                  "nameLocation": "49083:14:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25050,
                  "src": "49078:19:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25034,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "49078:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49031:67:71"
            },
            "returnParameters": {
              "id": 25040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "49139:0:71"
            },
            "scope": 25543,
            "src": "49005:207:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 25062,
              "nodeType": "Block",
              "src": "49478:55:71",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 25058,
                      "name": "_variablePriceStartDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22008,
                      "src": "49491:23:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 25060,
                    "indexExpression": {
                      "id": 25059,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25053,
                      "src": "49515:12:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "49491:37:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 25057,
                  "id": 25061,
                  "nodeType": "Return",
                  "src": "49484:44:71"
                }
              ]
            },
            "documentation": {
              "id": 25051,
              "nodeType": "StructuredDocumentation",
              "src": "49216:174:71",
              "text": " @dev Get date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\n @param tokenAddress Token address."
            },
            "functionSelector": "30f97699",
            "id": 25063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "variablePriceStartDate",
            "nameLocation": "49402:22:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25053,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "49433:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25063,
                  "src": "49425:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49425:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49424:22:71"
            },
            "returnParameters": {
              "id": 25057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25056,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25063,
                  "src": "49469:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "49469:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49468:9:71"
            },
            "scope": 25543,
            "src": "49393:140:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 25095,
              "nodeType": "Block",
              "src": "49958:193:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 25080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 25075,
                                "name": "startDate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25068,
                                "src": "49973:9:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 25076,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "49985:5:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 25077,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "49985:15:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 25078,
                                  "name": "SECONDS_IN_WEEK",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21795,
                                  "src": "50003:15:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "49985:33:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "49973:45:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 25081,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "49972:47:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25082,
                            "name": "startDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25068,
                            "src": "50023:9:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 25083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "50036:1:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "50023:14:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "49972:65:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53746172742064617465206e6565647320746f20626520736574206174206c656173742061207765656b206265666f7265",
                        "id": 25086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "50039:51:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02ebd69188c7db9c3dd01f2aaa1d87221471968f5aa99525c48b99a1505380e0",
                          "typeString": "literal_string \"Start date needs to be set at least a week before\""
                        },
                        "value": "Start date needs to be set at least a week before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02ebd69188c7db9c3dd01f2aaa1d87221471968f5aa99525c48b99a1505380e0",
                          "typeString": "literal_string \"Start date needs to be set at least a week before\""
                        }
                      ],
                      "id": 25074,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "49964:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "49964:127:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25088,
                  "nodeType": "ExpressionStatement",
                  "src": "49964:127:71"
                },
                {
                  "expression": {
                    "id": 25093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25089,
                        "name": "_variablePriceStartDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22008,
                        "src": "50097:23:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25091,
                      "indexExpression": {
                        "id": 25090,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25066,
                        "src": "50121:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "50097:37:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25092,
                      "name": "startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25068,
                      "src": "50137:9:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "50097:49:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25094,
                  "nodeType": "ExpressionStatement",
                  "src": "50097:49:71"
                }
              ]
            },
            "documentation": {
              "id": 25064,
              "nodeType": "StructuredDocumentation",
              "src": "49537:303:71",
              "text": " @dev Set date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).\n @param tokenAddress Token address.\n @param startDate Date after which token price can potentially be set by an oracle (0 if price can not be set by an oracle)."
            },
            "functionSelector": "c9adffe2",
            "id": 25096,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 25071,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25066,
                    "src": "49944:12:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 25072,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25070,
                  "name": "onlyPriceOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22050,
                  "src": "49928:15:71"
                },
                "nodeType": "ModifierInvocation",
                "src": "49928:29:71"
              }
            ],
            "name": "setVariablePriceStartDate",
            "nameLocation": "49852:25:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25066,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "49886:12:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25096,
                  "src": "49878:20:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49878:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25068,
                  "mutability": "mutable",
                  "name": "startDate",
                  "nameLocation": "49908:9:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25096,
                  "src": "49900:17:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "49900:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "49877:41:71"
            },
            "returnParameters": {
              "id": 25073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "49958:0:71"
            },
            "scope": 25543,
            "src": "49843:308:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 25120,
              "nodeType": "Block",
              "src": "50678:95:71",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 25110,
                            "name": "_tokenUnitPricesByPartition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21984,
                            "src": "50691:27:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                            }
                          },
                          "id": 25112,
                          "indexExpression": {
                            "id": 25111,
                            "name": "tokenAddress1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25099,
                            "src": "50719:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "50691:42:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                          }
                        },
                        "id": 25114,
                        "indexExpression": {
                          "id": 25113,
                          "name": "tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25101,
                          "src": "50734:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "50691:57:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                          "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                        }
                      },
                      "id": 25116,
                      "indexExpression": {
                        "id": 25115,
                        "name": "tokenId1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25103,
                        "src": "50749:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "50691:67:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 25118,
                    "indexExpression": {
                      "id": 25117,
                      "name": "tokenId2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25105,
                      "src": "50759:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "50691:77:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 25109,
                  "id": 25119,
                  "nodeType": "Return",
                  "src": "50684:84:71"
                }
              ]
            },
            "documentation": {
              "id": 25097,
              "nodeType": "StructuredDocumentation",
              "src": "50155:384:71",
              "text": " @dev Get price of the token.\n @param tokenAddress1 Address of the token to be priced.\n @param tokenAddress2 Address of the token to pay for token1.\n @param tokenId1 ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).\n @param tokenId1 ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions)."
            },
            "functionSelector": "8595240b",
            "id": 25121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenPrice",
            "nameLocation": "50551:13:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25099,
                  "mutability": "mutable",
                  "name": "tokenAddress1",
                  "nameLocation": "50573:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25121,
                  "src": "50565:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "50565:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25101,
                  "mutability": "mutable",
                  "name": "tokenAddress2",
                  "nameLocation": "50596:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25121,
                  "src": "50588:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "50588:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25103,
                  "mutability": "mutable",
                  "name": "tokenId1",
                  "nameLocation": "50619:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25121,
                  "src": "50611:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25102,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "50611:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25105,
                  "mutability": "mutable",
                  "name": "tokenId2",
                  "nameLocation": "50637:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25121,
                  "src": "50629:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25104,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "50629:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50564:82:71"
            },
            "returnParameters": {
              "id": 25109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25121,
                  "src": "50669:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "50669:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "50668:9:71"
            },
            "scope": 25543,
            "src": "50542:231:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 25201,
              "nodeType": "Block",
              "src": "51339:647:71",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "51353:97:71",
                        "subExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 25146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 25136,
                                    "name": "_priceOwnership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21974,
                                    "src": "51355:15:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 25138,
                                  "indexExpression": {
                                    "id": 25137,
                                    "name": "tokenAddress1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25124,
                                    "src": "51371:13:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "51355:30:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 25140,
                                "indexExpression": {
                                  "id": 25139,
                                  "name": "tokenAddress2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25126,
                                  "src": "51386:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "51355:45:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 25141,
                                    "name": "_priceOwnership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21974,
                                    "src": "51404:15:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 25143,
                                  "indexExpression": {
                                    "id": 25142,
                                    "name": "tokenAddress2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25126,
                                    "src": "51420:13:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "51404:30:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 25145,
                                "indexExpression": {
                                  "id": 25144,
                                  "name": "tokenAddress1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25124,
                                  "src": "51435:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "51404:45:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "51355:94:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 25147,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "51354:96:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e206f6e207072696365206f776e657273686970",
                        "id": 25149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "51452:32:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047",
                          "typeString": "literal_string \"Competition on price ownership\""
                        },
                        "value": "Competition on price ownership"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047",
                          "typeString": "literal_string \"Competition on price ownership\""
                        }
                      ],
                      "id": 25135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "51345:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "51345:140:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25151,
                  "nodeType": "ExpressionStatement",
                  "src": "51345:140:71"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 25152,
                        "name": "_priceOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21974,
                        "src": "51495:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 25154,
                      "indexExpression": {
                        "id": 25153,
                        "name": "tokenAddress1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25124,
                        "src": "51511:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "51495:30:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 25156,
                    "indexExpression": {
                      "id": 25155,
                      "name": "tokenAddress2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25126,
                      "src": "51526:13:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "51495:45:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25167,
                          "name": "_priceOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21974,
                          "src": "51671:15:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 25169,
                        "indexExpression": {
                          "id": 25168,
                          "name": "tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25126,
                          "src": "51687:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "51671:30:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25171,
                      "indexExpression": {
                        "id": 25170,
                        "name": "tokenAddress1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25124,
                        "src": "51702:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "51671:45:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 25186,
                      "nodeType": "Block",
                      "src": "51844:43:71",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "4e6f207072696365206f776e657273686970",
                                "id": 25183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "51859:20:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_242e1ec42c4d9d50f39212896afb445568abd9a5227b187111929b57dbb7bf2e",
                                  "typeString": "literal_string \"No price ownership\""
                                },
                                "value": "No price ownership"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_242e1ec42c4d9d50f39212896afb445568abd9a5227b187111929b57dbb7bf2e",
                                  "typeString": "literal_string \"No price ownership\""
                                }
                              ],
                              "id": 25182,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "51852:6:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 25184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "51852:28:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 25185,
                          "nodeType": "ExpressionStatement",
                          "src": "51852:28:71"
                        }
                      ]
                    },
                    "id": 25187,
                    "nodeType": "IfStatement",
                    "src": "51668:219:71",
                    "trueBody": {
                      "id": 25181,
                      "nodeType": "Block",
                      "src": "51718:120:71",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 25174,
                                    "name": "tokenAddress2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25126,
                                    "src": "51752:13:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 25175,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "51767:3:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 25176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "51767:10:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 25173,
                                  "name": "_checkPriceOracle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25011,
                                  "src": "51734:17:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address,address) view returns (bool)"
                                  }
                                },
                                "id": 25177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "51734:44:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "507269636520736574746572206973206e6f7420616e206f7261636c6520666f72207468697320746f6b656e20283229",
                                "id": 25178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "51780:50:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b1178f18a5aa1a32a6e2280a977824c520f59de733c77c9821fa1a6ad0758d01",
                                  "typeString": "literal_string \"Price setter is not an oracle for this token (2)\""
                                },
                                "value": "Price setter is not an oracle for this token (2)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b1178f18a5aa1a32a6e2280a977824c520f59de733c77c9821fa1a6ad0758d01",
                                  "typeString": "literal_string \"Price setter is not an oracle for this token (2)\""
                                }
                              ],
                              "id": 25172,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "51726:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 25179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "51726:105:71",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 25180,
                          "nodeType": "ExpressionStatement",
                          "src": "51726:105:71"
                        }
                      ]
                    }
                  },
                  "id": 25188,
                  "nodeType": "IfStatement",
                  "src": "51492:395:71",
                  "trueBody": {
                    "id": 25166,
                    "nodeType": "Block",
                    "src": "51542:120:71",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 25159,
                                  "name": "tokenAddress1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25124,
                                  "src": "51576:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 25160,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "51591:3:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 25161,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "51591:10:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 25158,
                                "name": "_checkPriceOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25011,
                                "src": "51558:17:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 25162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "51558:44:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "507269636520736574746572206973206e6f7420616e206f7261636c6520666f72207468697320746f6b656e20283129",
                              "id": 25163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "51604:50:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2f0a6c014b93879ada9ab209e5b7a62ef24399af93bf6c00c1529d6e0d627fce",
                                "typeString": "literal_string \"Price setter is not an oracle for this token (1)\""
                              },
                              "value": "Price setter is not an oracle for this token (1)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2f0a6c014b93879ada9ab209e5b7a62ef24399af93bf6c00c1529d6e0d627fce",
                                "typeString": "literal_string \"Price setter is not an oracle for this token (1)\""
                              }
                            ],
                            "id": 25157,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "51550:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 25164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "51550:105:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25165,
                        "nodeType": "ExpressionStatement",
                        "src": "51550:105:71"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 25199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 25189,
                              "name": "_tokenUnitPricesByPartition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21984,
                              "src": "51893:27:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                              }
                            },
                            "id": 25194,
                            "indexExpression": {
                              "id": 25190,
                              "name": "tokenAddress1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25124,
                              "src": "51921:13:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "51893:42:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                            }
                          },
                          "id": 25195,
                          "indexExpression": {
                            "id": 25191,
                            "name": "tokenAddress2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25126,
                            "src": "51936:13:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "51893:57:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 25196,
                        "indexExpression": {
                          "id": 25192,
                          "name": "tokenId1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25128,
                          "src": "51951:8:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "51893:67:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 25197,
                      "indexExpression": {
                        "id": 25193,
                        "name": "tokenId2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25130,
                        "src": "51961:8:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "51893:77:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25198,
                      "name": "newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25132,
                      "src": "51973:8:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "51893:88:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25200,
                  "nodeType": "ExpressionStatement",
                  "src": "51893:88:71"
                }
              ]
            },
            "documentation": {
              "id": 25122,
              "nodeType": "StructuredDocumentation",
              "src": "50777:427:71",
              "text": " @dev Set price of a token.\n @param tokenAddress1 Address of the token to be priced.\n @param tokenAddress2 Address of the token to pay for token1.\n @param tokenId1 ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).\n @param tokenId2 ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions).\n @param newPrice New price of the token."
            },
            "functionSelector": "58727467",
            "id": 25202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenPrice",
            "nameLocation": "51216:13:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25124,
                  "mutability": "mutable",
                  "name": "tokenAddress1",
                  "nameLocation": "51238:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25202,
                  "src": "51230:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "51230:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25126,
                  "mutability": "mutable",
                  "name": "tokenAddress2",
                  "nameLocation": "51261:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25202,
                  "src": "51253:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "51253:7:71",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25128,
                  "mutability": "mutable",
                  "name": "tokenId1",
                  "nameLocation": "51284:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25202,
                  "src": "51276:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25127,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "51276:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25130,
                  "mutability": "mutable",
                  "name": "tokenId2",
                  "nameLocation": "51302:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25202,
                  "src": "51294:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25129,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "51294:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25132,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nameLocation": "51320:8:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25202,
                  "src": "51312:16:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "51312:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "51229:100:71"
            },
            "returnParameters": {
              "id": 25134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "51339:0:71"
            },
            "scope": 25543,
            "src": "51207:779:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 25513,
              "nodeType": "Block",
              "src": "52171:2690:71",
              "statements": [
                {
                  "assignments": [
                    25212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25212,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "52191:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 25513,
                      "src": "52177:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 25211,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25210,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "52177:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "52177:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25216,
                  "initialValue": {
                    "baseExpression": {
                      "id": 25213,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "52199:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 25215,
                    "indexExpression": {
                      "id": 25214,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25205,
                      "src": "52207:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "52199:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52177:36:71"
                },
                {
                  "assignments": [
                    25218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25218,
                      "mutability": "mutable",
                      "name": "tokenAddress1",
                      "nameLocation": "52228:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 25513,
                      "src": "52220:21:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25217,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "52220:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25222,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 25219,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25212,
                        "src": "52244:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 25220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "52244:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 25221,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21880,
                    "src": "52244:33:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52220:57:71"
                },
                {
                  "assignments": [
                    25224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25224,
                      "mutability": "mutable",
                      "name": "tokenValue1",
                      "nameLocation": "52291:11:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 25513,
                      "src": "52283:19:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25223,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "52283:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25228,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 25225,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25212,
                        "src": "52305:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 25226,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "52305:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 25227,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21882,
                    "src": "52305:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52283:53:71"
                },
                {
                  "assignments": [
                    25230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25230,
                      "mutability": "mutable",
                      "name": "tokenId1",
                      "nameLocation": "52350:8:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 25513,
                      "src": "52342:16:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 25229,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "52342:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25234,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 25231,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25212,
                        "src": "52361:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 25232,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21943,
                      "src": "52361:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 25233,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21884,
                    "src": "52361:28:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52342:47:71"
                },
                {
                  "assignments": [
                    25236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25236,
                      "mutability": "mutable",
                      "name": "tokenAddress2",
                      "nameLocation": "52404:13:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 25513,
                      "src": "52396:21:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25235,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "52396:7:71",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25240,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 25237,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25212,
                        "src": "52420:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 25238,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "52420:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 25239,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21880,
                    "src": "52420:33:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52396:57:71"
                },
                {
                  "assignments": [
                    25242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25242,
                      "mutability": "mutable",
                      "name": "tokenValue2",
                      "nameLocation": "52467:11:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 25513,
                      "src": "52459:19:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25241,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "52459:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25246,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 25243,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25212,
                        "src": "52481:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 25244,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "52481:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 25245,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21882,
                    "src": "52481:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52459:53:71"
                },
                {
                  "assignments": [
                    25248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25248,
                      "mutability": "mutable",
                      "name": "tokenId2",
                      "nameLocation": "52526:8:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 25513,
                      "src": "52518:16:71",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 25247,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "52518:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25252,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 25249,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25212,
                        "src": "52537:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade storage pointer"
                        }
                      },
                      "id": 25250,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "userTradeData2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21946,
                      "src": "52537:20:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserTradeData_$21895_storage",
                        "typeString": "struct Swaps.UserTradeData storage ref"
                      }
                    },
                    "id": 25251,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokenId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21884,
                    "src": "52537:28:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "52518:47:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "52580:97:71",
                        "subExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 25264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 25254,
                                    "name": "_priceOwnership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21974,
                                    "src": "52582:15:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 25256,
                                  "indexExpression": {
                                    "id": 25255,
                                    "name": "tokenAddress1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25218,
                                    "src": "52598:13:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "52582:30:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 25258,
                                "indexExpression": {
                                  "id": 25257,
                                  "name": "tokenAddress2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25236,
                                  "src": "52613:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "52582:45:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 25259,
                                    "name": "_priceOwnership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21974,
                                    "src": "52631:15:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 25261,
                                  "indexExpression": {
                                    "id": 25260,
                                    "name": "tokenAddress2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25236,
                                    "src": "52647:13:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "52631:30:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 25263,
                                "indexExpression": {
                                  "id": 25262,
                                  "name": "tokenAddress1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25218,
                                  "src": "52662:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "52631:45:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "52582:94:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 25265,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "52581:96:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e206f6e207072696365206f776e657273686970",
                        "id": 25267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "52679:32:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047",
                          "typeString": "literal_string \"Competition on price ownership\""
                        },
                        "value": "Competition on price ownership"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cca473d4699184ddb1b521cc84943981ca1f9ae354f32feb4ed94760c4d4047",
                          "typeString": "literal_string \"Competition on price ownership\""
                        }
                      ],
                      "id": 25253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "52572:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "52572:140:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25269,
                  "nodeType": "ExpressionStatement",
                  "src": "52572:140:71"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 25281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 25274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 25270,
                          "name": "_variablePriceStartDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22008,
                          "src": "52722:23:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 25272,
                        "indexExpression": {
                          "id": 25271,
                          "name": "tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25218,
                          "src": "52746:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "52722:38:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 25273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "52764:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "52722:43:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 25280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 25275,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "52769:5:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 25276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "52769:15:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 25277,
                          "name": "_variablePriceStartDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22008,
                          "src": "52787:23:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 25279,
                        "indexExpression": {
                          "id": 25278,
                          "name": "tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25218,
                          "src": "52811:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "52787:38:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "52769:56:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "52722:103:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25285,
                  "nodeType": "IfStatement",
                  "src": "52719:141:71",
                  "trueBody": {
                    "id": 25284,
                    "nodeType": "Block",
                    "src": "52827:33:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 25282,
                          "name": "tokenValue2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25242,
                          "src": "52842:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 25209,
                        "id": 25283,
                        "nodeType": "Return",
                        "src": "52835:18:71"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 25296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25286,
                          "name": "_priceOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21974,
                          "src": "52869:15:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 25288,
                        "indexExpression": {
                          "id": 25287,
                          "name": "tokenAddress1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25218,
                          "src": "52885:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "52869:30:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25290,
                      "indexExpression": {
                        "id": 25289,
                        "name": "tokenAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25236,
                        "src": "52900:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "52869:45:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25291,
                          "name": "_priceOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21974,
                          "src": "52918:15:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 25293,
                        "indexExpression": {
                          "id": 25292,
                          "name": "tokenAddress2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25236,
                          "src": "52934:13:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "52918:30:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 25295,
                      "indexExpression": {
                        "id": 25294,
                        "name": "tokenAddress1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25218,
                        "src": "52949:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "52918:45:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "52869:94:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 25511,
                    "nodeType": "Block",
                    "src": "54824:33:71",
                    "statements": [
                      {
                        "expression": {
                          "id": 25509,
                          "name": "tokenValue2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25242,
                          "src": "54839:11:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 25209,
                        "id": 25510,
                        "nodeType": "Return",
                        "src": "54832:18:71"
                      }
                    ]
                  },
                  "id": 25512,
                  "nodeType": "IfStatement",
                  "src": "52866:1991:71",
                  "trueBody": {
                    "id": 25508,
                    "nodeType": "Block",
                    "src": "52965:1853:71",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 25297,
                                    "name": "_tokenUnitPricesByPartition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21984,
                                    "src": "52977:27:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                      "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                    }
                                  },
                                  "id": 25299,
                                  "indexExpression": {
                                    "id": 25298,
                                    "name": "tokenAddress1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25218,
                                    "src": "53005:13:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "52977:42:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                    "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                  }
                                },
                                "id": 25301,
                                "indexExpression": {
                                  "id": 25300,
                                  "name": "tokenAddress2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25236,
                                  "src": "53020:13:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "52977:57:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                  "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                }
                              },
                              "id": 25303,
                              "indexExpression": {
                                "id": 25302,
                                "name": "tokenId1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25230,
                                "src": "53035:8:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "52977:67:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 25305,
                            "indexExpression": {
                              "id": 25304,
                              "name": "tokenId2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25248,
                              "src": "53045:8:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "52977:77:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 25306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "53058:1:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "52977:82:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 25332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 25322,
                                      "name": "_tokenUnitPricesByPartition",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21984,
                                      "src": "53190:27:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                        "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                      }
                                    },
                                    "id": 25324,
                                    "indexExpression": {
                                      "id": 25323,
                                      "name": "tokenAddress2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25236,
                                      "src": "53218:13:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "53190:42:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                    }
                                  },
                                  "id": 25326,
                                  "indexExpression": {
                                    "id": 25325,
                                    "name": "tokenAddress1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25218,
                                    "src": "53233:13:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "53190:57:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                    "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                  }
                                },
                                "id": 25328,
                                "indexExpression": {
                                  "id": 25327,
                                  "name": "tokenId2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25248,
                                  "src": "53248:8:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "53190:67:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                  "typeString": "mapping(bytes32 => uint256)"
                                }
                              },
                              "id": 25330,
                              "indexExpression": {
                                "id": 25329,
                                "name": "tokenId1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25230,
                                "src": "53258:8:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "53190:77:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 25331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "53271:1:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "53190:82:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 25357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 25347,
                                        "name": "_tokenUnitPricesByPartition",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 21984,
                                        "src": "53403:27:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                          "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                        }
                                      },
                                      "id": 25349,
                                      "indexExpression": {
                                        "id": 25348,
                                        "name": "tokenAddress1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25218,
                                        "src": "53431:13:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "53403:42:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                      }
                                    },
                                    "id": 25351,
                                    "indexExpression": {
                                      "id": 25350,
                                      "name": "tokenAddress2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25236,
                                      "src": "53446:13:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "53403:57:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                      "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                    }
                                  },
                                  "id": 25353,
                                  "indexExpression": {
                                    "id": 25352,
                                    "name": "tokenId1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25230,
                                    "src": "53461:8:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "53403:67:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 25355,
                                "indexExpression": {
                                  "id": 25354,
                                  "name": "ALL_PARTITIONS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21807,
                                  "src": "53471:14:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "53403:83:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 25356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "53490:1:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "53403:88:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 25372,
                                          "name": "_tokenUnitPricesByPartition",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 21984,
                                          "src": "53628:27:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                            "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                          }
                                        },
                                        "id": 25374,
                                        "indexExpression": {
                                          "id": 25373,
                                          "name": "tokenAddress2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25236,
                                          "src": "53656:13:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "53628:42:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                          "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                        }
                                      },
                                      "id": 25376,
                                      "indexExpression": {
                                        "id": 25375,
                                        "name": "tokenAddress1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25218,
                                        "src": "53671:13:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "53628:57:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                        "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                      }
                                    },
                                    "id": 25378,
                                    "indexExpression": {
                                      "id": 25377,
                                      "name": "ALL_PARTITIONS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 21807,
                                      "src": "53686:14:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "53628:73:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                      "typeString": "mapping(bytes32 => uint256)"
                                    }
                                  },
                                  "id": 25380,
                                  "indexExpression": {
                                    "id": 25379,
                                    "name": "tokenId1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25230,
                                    "src": "53702:8:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "53628:83:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 25381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "53715:1:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "53628:88:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 25407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 25397,
                                            "name": "_tokenUnitPricesByPartition",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 21984,
                                            "src": "53853:27:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                              "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                            }
                                          },
                                          "id": 25399,
                                          "indexExpression": {
                                            "id": 25398,
                                            "name": "tokenAddress1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 25218,
                                            "src": "53881:13:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "53853:42:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                            "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                          }
                                        },
                                        "id": 25401,
                                        "indexExpression": {
                                          "id": 25400,
                                          "name": "tokenAddress2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25236,
                                          "src": "53896:13:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "53853:57:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                          "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                        }
                                      },
                                      "id": 25403,
                                      "indexExpression": {
                                        "id": 25402,
                                        "name": "ALL_PARTITIONS",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 21807,
                                        "src": "53911:14:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "53853:73:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                        "typeString": "mapping(bytes32 => uint256)"
                                      }
                                    },
                                    "id": 25405,
                                    "indexExpression": {
                                      "id": 25404,
                                      "name": "tokenId2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25248,
                                      "src": "53927:8:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "53853:83:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 25406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "53940:1:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "53853:88:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 25432,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 25422,
                                              "name": "_tokenUnitPricesByPartition",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 21984,
                                              "src": "54078:27:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                              }
                                            },
                                            "id": 25424,
                                            "indexExpression": {
                                              "id": 25423,
                                              "name": "tokenAddress2",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25236,
                                              "src": "54106:13:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "54078:42:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                              "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                            }
                                          },
                                          "id": 25426,
                                          "indexExpression": {
                                            "id": 25425,
                                            "name": "tokenAddress1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 25218,
                                            "src": "54121:13:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "54078:57:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                            "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                          }
                                        },
                                        "id": 25428,
                                        "indexExpression": {
                                          "id": 25427,
                                          "name": "tokenId2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25248,
                                          "src": "54136:8:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "54078:67:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                          "typeString": "mapping(bytes32 => uint256)"
                                        }
                                      },
                                      "id": 25430,
                                      "indexExpression": {
                                        "id": 25429,
                                        "name": "ALL_PARTITIONS",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 21807,
                                        "src": "54146:14:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "54078:83:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 25431,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "54165:1:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "54078:88:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 25457,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 25447,
                                                "name": "_tokenUnitPricesByPartition",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 21984,
                                                "src": "54303:27:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                  "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                }
                                              },
                                              "id": 25449,
                                              "indexExpression": {
                                                "id": 25448,
                                                "name": "tokenAddress1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25218,
                                                "src": "54331:13:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "54303:42:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                              }
                                            },
                                            "id": 25451,
                                            "indexExpression": {
                                              "id": 25450,
                                              "name": "tokenAddress2",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25236,
                                              "src": "54346:13:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "54303:57:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                              "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                            }
                                          },
                                          "id": 25453,
                                          "indexExpression": {
                                            "id": 25452,
                                            "name": "ALL_PARTITIONS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 21807,
                                            "src": "54361:14:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "54303:73:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                            "typeString": "mapping(bytes32 => uint256)"
                                          }
                                        },
                                        "id": 25455,
                                        "indexExpression": {
                                          "id": 25454,
                                          "name": "ALL_PARTITIONS",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 21807,
                                          "src": "54377:14:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "54303:89:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 25456,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "54396:1:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "54303:94:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 25482,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "baseExpression": {
                                                  "id": 25472,
                                                  "name": "_tokenUnitPricesByPartition",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 21984,
                                                  "src": "54540:27:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                    "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                  }
                                                },
                                                "id": 25474,
                                                "indexExpression": {
                                                  "id": 25473,
                                                  "name": "tokenAddress2",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 25236,
                                                  "src": "54568:13:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "54540:42:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                  "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                }
                                              },
                                              "id": 25476,
                                              "indexExpression": {
                                                "id": 25475,
                                                "name": "tokenAddress1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25218,
                                                "src": "54583:13:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "54540:57:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                              }
                                            },
                                            "id": 25478,
                                            "indexExpression": {
                                              "id": 25477,
                                              "name": "ALL_PARTITIONS",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 21807,
                                              "src": "54598:14:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "54540:73:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                              "typeString": "mapping(bytes32 => uint256)"
                                            }
                                          },
                                          "id": 25480,
                                          "indexExpression": {
                                            "id": 25479,
                                            "name": "ALL_PARTITIONS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 21807,
                                            "src": "54614:14:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "54540:89:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 25481,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "54633:1:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "54540:94:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "id": 25499,
                                        "nodeType": "Block",
                                        "src": "54774:37:71",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 25497,
                                              "name": "tokenValue2",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25242,
                                              "src": "54791:11:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 25209,
                                            "id": 25498,
                                            "nodeType": "Return",
                                            "src": "54784:18:71"
                                          }
                                        ]
                                      },
                                      "id": 25500,
                                      "nodeType": "IfStatement",
                                      "src": "54537:274:71",
                                      "trueBody": {
                                        "id": 25496,
                                        "nodeType": "Block",
                                        "src": "54636:132:71",
                                        "statements": [
                                          {
                                            "expression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 25494,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 25483,
                                                "name": "tokenValue1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25224,
                                                "src": "54653:11:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "components": [
                                                  {
                                                    "baseExpression": {
                                                      "baseExpression": {
                                                        "baseExpression": {
                                                          "baseExpression": {
                                                            "id": 25484,
                                                            "name": "_tokenUnitPricesByPartition",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 21984,
                                                            "src": "54668:27:71",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                              "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                            }
                                                          },
                                                          "id": 25486,
                                                          "indexExpression": {
                                                            "id": 25485,
                                                            "name": "tokenAddress2",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 25236,
                                                            "src": "54696:13:71",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "54668:42:71",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                            "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                          }
                                                        },
                                                        "id": 25488,
                                                        "indexExpression": {
                                                          "id": 25487,
                                                          "name": "tokenAddress1",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 25218,
                                                          "src": "54711:13:71",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "54668:57:71",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                          "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                                        }
                                                      },
                                                      "id": 25490,
                                                      "indexExpression": {
                                                        "id": 25489,
                                                        "name": "ALL_PARTITIONS",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 21807,
                                                        "src": "54726:14:71",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes32",
                                                          "typeString": "bytes32"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "54668:73:71",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                                        "typeString": "mapping(bytes32 => uint256)"
                                                      }
                                                    },
                                                    "id": 25492,
                                                    "indexExpression": {
                                                      "id": 25491,
                                                      "name": "ALL_PARTITIONS",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 21807,
                                                      "src": "54742:14:71",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "54668:89:71",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 25493,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "54667:91:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "54653:105:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 25209,
                                            "id": 25495,
                                            "nodeType": "Return",
                                            "src": "54646:112:71"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 25501,
                                    "nodeType": "IfStatement",
                                    "src": "54300:511:71",
                                    "trueBody": {
                                      "id": 25471,
                                      "nodeType": "Block",
                                      "src": "54399:132:71",
                                      "statements": [
                                        {
                                          "expression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 25469,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 25458,
                                              "name": "tokenValue1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25224,
                                              "src": "54416:11:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "baseExpression": {
                                                        "baseExpression": {
                                                          "id": 25459,
                                                          "name": "_tokenUnitPricesByPartition",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 21984,
                                                          "src": "54431:27:71",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                            "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                          }
                                                        },
                                                        "id": 25461,
                                                        "indexExpression": {
                                                          "id": 25460,
                                                          "name": "tokenAddress1",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 25218,
                                                          "src": "54459:13:71",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "54431:42:71",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                          "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                        }
                                                      },
                                                      "id": 25463,
                                                      "indexExpression": {
                                                        "id": 25462,
                                                        "name": "tokenAddress2",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 25236,
                                                        "src": "54474:13:71",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "54431:57:71",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                        "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                                      }
                                                    },
                                                    "id": 25465,
                                                    "indexExpression": {
                                                      "id": 25464,
                                                      "name": "ALL_PARTITIONS",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 21807,
                                                      "src": "54489:14:71",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "54431:73:71",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                                      "typeString": "mapping(bytes32 => uint256)"
                                                    }
                                                  },
                                                  "id": 25467,
                                                  "indexExpression": {
                                                    "id": 25466,
                                                    "name": "ALL_PARTITIONS",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 21807,
                                                    "src": "54505:14:71",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "54431:89:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 25468,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "54430:91:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "54416:105:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "functionReturnParameters": 25209,
                                          "id": 25470,
                                          "nodeType": "Return",
                                          "src": "54409:112:71"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 25502,
                                  "nodeType": "IfStatement",
                                  "src": "54075:736:71",
                                  "trueBody": {
                                    "id": 25446,
                                    "nodeType": "Block",
                                    "src": "54168:126:71",
                                    "statements": [
                                      {
                                        "expression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 25444,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 25433,
                                            "name": "tokenValue1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 25224,
                                            "src": "54185:11:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "baseExpression": {
                                                        "id": 25434,
                                                        "name": "_tokenUnitPricesByPartition",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 21984,
                                                        "src": "54200:27:71",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                          "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                        }
                                                      },
                                                      "id": 25436,
                                                      "indexExpression": {
                                                        "id": 25435,
                                                        "name": "tokenAddress2",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 25236,
                                                        "src": "54228:13:71",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "54200:42:71",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                        "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                      }
                                                    },
                                                    "id": 25438,
                                                    "indexExpression": {
                                                      "id": 25437,
                                                      "name": "tokenAddress1",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 25218,
                                                      "src": "54243:13:71",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "54200:57:71",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                      "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                                    }
                                                  },
                                                  "id": 25440,
                                                  "indexExpression": {
                                                    "id": 25439,
                                                    "name": "tokenId2",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25248,
                                                    "src": "54258:8:71",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes32",
                                                      "typeString": "bytes32"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "54200:67:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                                    "typeString": "mapping(bytes32 => uint256)"
                                                  }
                                                },
                                                "id": 25442,
                                                "indexExpression": {
                                                  "id": 25441,
                                                  "name": "ALL_PARTITIONS",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 21807,
                                                  "src": "54268:14:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "54200:83:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 25443,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "54199:85:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "54185:99:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "functionReturnParameters": 25209,
                                        "id": 25445,
                                        "nodeType": "Return",
                                        "src": "54178:106:71"
                                      }
                                    ]
                                  }
                                },
                                "id": 25503,
                                "nodeType": "IfStatement",
                                "src": "53850:961:71",
                                "trueBody": {
                                  "id": 25421,
                                  "nodeType": "Block",
                                  "src": "53943:126:71",
                                  "statements": [
                                    {
                                      "expression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 25419,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 25408,
                                          "name": "tokenValue1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25224,
                                          "src": "53960:11:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "baseExpression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "baseExpression": {
                                                      "id": 25409,
                                                      "name": "_tokenUnitPricesByPartition",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 21984,
                                                      "src": "53975:27:71",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                        "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                      }
                                                    },
                                                    "id": 25411,
                                                    "indexExpression": {
                                                      "id": 25410,
                                                      "name": "tokenAddress1",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 25218,
                                                      "src": "54003:13:71",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "53975:42:71",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                      "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                    }
                                                  },
                                                  "id": 25413,
                                                  "indexExpression": {
                                                    "id": 25412,
                                                    "name": "tokenAddress2",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25236,
                                                    "src": "54018:13:71",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "53975:57:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                    "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                                  }
                                                },
                                                "id": 25415,
                                                "indexExpression": {
                                                  "id": 25414,
                                                  "name": "ALL_PARTITIONS",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 21807,
                                                  "src": "54033:14:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "53975:73:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                                  "typeString": "mapping(bytes32 => uint256)"
                                                }
                                              },
                                              "id": 25417,
                                              "indexExpression": {
                                                "id": 25416,
                                                "name": "tokenId2",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25248,
                                                "src": "54049:8:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "53975:83:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 25418,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "53974:85:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "53960:99:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "functionReturnParameters": 25209,
                                      "id": 25420,
                                      "nodeType": "Return",
                                      "src": "53953:106:71"
                                    }
                                  ]
                                }
                              },
                              "id": 25504,
                              "nodeType": "IfStatement",
                              "src": "53625:1186:71",
                              "trueBody": {
                                "id": 25396,
                                "nodeType": "Block",
                                "src": "53718:126:71",
                                "statements": [
                                  {
                                    "expression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 25394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 25383,
                                        "name": "tokenValue1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25224,
                                        "src": "53735:11:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "id": 25384,
                                                    "name": "_tokenUnitPricesByPartition",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 21984,
                                                    "src": "53750:27:71",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                      "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                    }
                                                  },
                                                  "id": 25386,
                                                  "indexExpression": {
                                                    "id": 25385,
                                                    "name": "tokenAddress2",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25236,
                                                    "src": "53778:13:71",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "53750:42:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                    "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                  }
                                                },
                                                "id": 25388,
                                                "indexExpression": {
                                                  "id": 25387,
                                                  "name": "tokenAddress1",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 25218,
                                                  "src": "53793:13:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "53750:57:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                  "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                                }
                                              },
                                              "id": 25390,
                                              "indexExpression": {
                                                "id": 25389,
                                                "name": "ALL_PARTITIONS",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 21807,
                                                "src": "53808:14:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "53750:73:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                                "typeString": "mapping(bytes32 => uint256)"
                                              }
                                            },
                                            "id": 25392,
                                            "indexExpression": {
                                              "id": 25391,
                                              "name": "tokenId1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25230,
                                              "src": "53824:8:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "53750:83:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 25393,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "53749:85:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "53735:99:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 25209,
                                    "id": 25395,
                                    "nodeType": "Return",
                                    "src": "53728:106:71"
                                  }
                                ]
                              }
                            },
                            "id": 25505,
                            "nodeType": "IfStatement",
                            "src": "53400:1411:71",
                            "trueBody": {
                              "id": 25371,
                              "nodeType": "Block",
                              "src": "53493:126:71",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 25369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 25358,
                                      "name": "tokenValue1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25224,
                                      "src": "53510:11:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "baseExpression": {
                                                  "id": 25359,
                                                  "name": "_tokenUnitPricesByPartition",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 21984,
                                                  "src": "53525:27:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                    "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                  }
                                                },
                                                "id": 25361,
                                                "indexExpression": {
                                                  "id": 25360,
                                                  "name": "tokenAddress1",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 25218,
                                                  "src": "53553:13:71",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "53525:42:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                  "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                                }
                                              },
                                              "id": 25363,
                                              "indexExpression": {
                                                "id": 25362,
                                                "name": "tokenAddress2",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25236,
                                                "src": "53568:13:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "53525:57:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                                "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                              }
                                            },
                                            "id": 25365,
                                            "indexExpression": {
                                              "id": 25364,
                                              "name": "tokenId1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25230,
                                              "src": "53583:8:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "53525:67:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                              "typeString": "mapping(bytes32 => uint256)"
                                            }
                                          },
                                          "id": 25367,
                                          "indexExpression": {
                                            "id": 25366,
                                            "name": "ALL_PARTITIONS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 21807,
                                            "src": "53593:14:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "53525:83:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 25368,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "53524:85:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "53510:99:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 25209,
                                  "id": 25370,
                                  "nodeType": "Return",
                                  "src": "53503:106:71"
                                }
                              ]
                            }
                          },
                          "id": 25506,
                          "nodeType": "IfStatement",
                          "src": "53187:1624:71",
                          "trueBody": {
                            "id": 25346,
                            "nodeType": "Block",
                            "src": "53274:120:71",
                            "statements": [
                              {
                                "expression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 25344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 25333,
                                    "name": "tokenValue1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25224,
                                    "src": "53291:11:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 25334,
                                                "name": "_tokenUnitPricesByPartition",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 21984,
                                                "src": "53306:27:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                  "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                                }
                                              },
                                              "id": 25336,
                                              "indexExpression": {
                                                "id": 25335,
                                                "name": "tokenAddress2",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25236,
                                                "src": "53334:13:71",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "53306:42:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                                "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                              }
                                            },
                                            "id": 25338,
                                            "indexExpression": {
                                              "id": 25337,
                                              "name": "tokenAddress1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25218,
                                              "src": "53349:13:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "53306:57:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                              "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                            }
                                          },
                                          "id": 25340,
                                          "indexExpression": {
                                            "id": 25339,
                                            "name": "tokenId2",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 25248,
                                            "src": "53364:8:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "53306:67:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                            "typeString": "mapping(bytes32 => uint256)"
                                          }
                                        },
                                        "id": 25342,
                                        "indexExpression": {
                                          "id": 25341,
                                          "name": "tokenId1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25230,
                                          "src": "53374:8:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "53306:77:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 25343,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "53305:79:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "53291:93:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 25209,
                                "id": 25345,
                                "nodeType": "Return",
                                "src": "53284:100:71"
                              }
                            ]
                          }
                        },
                        "id": 25507,
                        "nodeType": "IfStatement",
                        "src": "52974:1837:71",
                        "trueBody": {
                          "id": 25321,
                          "nodeType": "Block",
                          "src": "53061:120:71",
                          "statements": [
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 25308,
                                  "name": "tokenValue1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25224,
                                  "src": "53078:11:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 25309,
                                              "name": "_tokenUnitPricesByPartition",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 21984,
                                              "src": "53093:27:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$_$",
                                                "typeString": "mapping(address => mapping(address => mapping(bytes32 => mapping(bytes32 => uint256))))"
                                              }
                                            },
                                            "id": 25311,
                                            "indexExpression": {
                                              "id": 25310,
                                              "name": "tokenAddress1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25218,
                                              "src": "53121:13:71",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "53093:42:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$_$",
                                              "typeString": "mapping(address => mapping(bytes32 => mapping(bytes32 => uint256)))"
                                            }
                                          },
                                          "id": 25313,
                                          "indexExpression": {
                                            "id": 25312,
                                            "name": "tokenAddress2",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 25236,
                                            "src": "53136:13:71",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "53093:57:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                            "typeString": "mapping(bytes32 => mapping(bytes32 => uint256))"
                                          }
                                        },
                                        "id": 25315,
                                        "indexExpression": {
                                          "id": 25314,
                                          "name": "tokenId1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25230,
                                          "src": "53151:8:71",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "53093:67:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                          "typeString": "mapping(bytes32 => uint256)"
                                        }
                                      },
                                      "id": 25317,
                                      "indexExpression": {
                                        "id": 25316,
                                        "name": "tokenId2",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25248,
                                        "src": "53161:8:71",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "53093:77:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 25318,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "53092:79:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "53078:93:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 25209,
                              "id": 25320,
                              "nodeType": "Return",
                              "src": "53071:100:71"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 25203,
              "nodeType": "StructuredDocumentation",
              "src": "51990:116:71",
              "text": " @dev Get amount of token2 to pay to acquire the token1.\n @param index Index of the Swaps request."
            },
            "functionSelector": "e7572230",
            "id": 25514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "52118:8:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25205,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "52135:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25514,
                  "src": "52127:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "52127:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "52126:15:71"
            },
            "returnParameters": {
              "id": 25209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25208,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25514,
                  "src": "52162:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "52162:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "52161:9:71"
            },
            "scope": 25543,
            "src": "52109:2752:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25532,
              "nodeType": "Block",
              "src": "55110:65:71",
              "statements": [
                {
                  "assignments": [
                    25525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25525,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "55130:5:71",
                      "nodeType": "VariableDeclaration",
                      "scope": 25532,
                      "src": "55116:19:71",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                        "typeString": "struct Swaps.Trade"
                      },
                      "typeName": {
                        "id": 25524,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 25523,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21950,
                          "src": "55116:5:71"
                        },
                        "referencedDeclaration": 21950,
                        "src": "55116:5:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                          "typeString": "struct Swaps.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25529,
                  "initialValue": {
                    "baseExpression": {
                      "id": 25526,
                      "name": "_trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21957,
                      "src": "55138:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$21950_storage_$",
                        "typeString": "mapping(uint256 => struct Swaps.Trade storage ref)"
                      }
                    },
                    "id": 25528,
                    "indexExpression": {
                      "id": 25527,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25517,
                      "src": "55146:5:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "55138:14:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage",
                      "typeString": "struct Swaps.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "55116:36:71"
                },
                {
                  "expression": {
                    "id": 25530,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25525,
                    "src": "55165:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                      "typeString": "struct Swaps.Trade storage pointer"
                    }
                  },
                  "functionReturnParameters": 25522,
                  "id": 25531,
                  "nodeType": "Return",
                  "src": "55158:12:71"
                }
              ]
            },
            "documentation": {
              "id": 25515,
              "nodeType": "StructuredDocumentation",
              "src": "54946:92:71",
              "text": " @dev Get the trade.\n @param index Index of the trade.\n @return Trade."
            },
            "functionSelector": "2db25e05",
            "id": 25533,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrade",
            "nameLocation": "55050:8:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25517,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "55067:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 25533,
                  "src": "55059:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "55059:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "55058:15:71"
            },
            "returnParameters": {
              "id": 25522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25533,
                  "src": "55096:12:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$21950_memory_ptr",
                    "typeString": "struct Swaps.Trade"
                  },
                  "typeName": {
                    "id": 25520,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25519,
                      "name": "Trade",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21950,
                      "src": "55096:5:71"
                    },
                    "referencedDeclaration": 21950,
                    "src": "55096:5:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$21950_storage_ptr",
                      "typeString": "struct Swaps.Trade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "55095:14:71"
            },
            "scope": 25543,
            "src": "55041:134:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 25541,
              "nodeType": "Block",
              "src": "55372:24:71",
              "statements": [
                {
                  "expression": {
                    "id": 25539,
                    "name": "_index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21952,
                    "src": "55385:6:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 25538,
                  "id": 25540,
                  "nodeType": "Return",
                  "src": "55378:13:71"
                }
              ]
            },
            "documentation": {
              "id": 25534,
              "nodeType": "StructuredDocumentation",
              "src": "55179:136:71",
              "text": " @dev Get the total number of requests in the Swaps contract.\n @return Total number of requests in the Swaps contract."
            },
            "functionSelector": "ebbca407",
            "id": 25542,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNbTrades",
            "nameLocation": "55327:11:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "55338:2:71"
            },
            "returnParameters": {
              "id": 25538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25537,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25542,
                  "src": "55363:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "55363:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "55362:9:71"
            },
            "scope": 25543,
            "src": "55318:78:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 25544,
        "src": "3595:51804:71",
        "usedErrors": []
      }
    ],
    "src": "154:55246:71"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {
        "0x5ffb3072e4515cf3bfae8b16be9dff6313cf7c313a0c26faafe6971d8c7585f1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "noteHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "metadata",
              "type": "bytes"
            }
          ],
          "name": "CreateNote",
          "type": "event"
        },
        "0x979308e20fbd28822c4526e85d528175e04e3ca0cf91c46301db34401a26a8c6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "noteHash",
              "type": "bytes32"
            }
          ],
          "name": "DestroyNote",
          "type": "event"
        },
        "0xf16e81ebbf4a87ccaa6230614a9d911f4d2a9e9274e2aaca49922f1779959489": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "holdId",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "lockPreimage",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "name": "ExecutedHold",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokens",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xff4e9a26af4eb73b8bacfaa4abd4fea03d9448e7b912dc5ff4019048875aa2d4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "fromPartition",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "name": "TransferByPartition",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7eF84473a4E772fB6aDfA1B0C6728A3dbf268Dd7",
      "transactionHash": "0x3318079e544896f7bdf31efe5d425055dcc6709e29661451cee9d3a6d4bd4c3a"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-05-10T15:14:39.376Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Delivery-Vs-Payment contract for investor-to-investor token trades.Intended usage: The purpose of the contract is to allow secure token transfers/exchanges between 2 stakeholders (called holder1 and holder2). From now on, an operation in the Swaps smart contract (transfer/exchange) is called a trade. Depending on the type of trade, one/multiple token transfers will be executed. The simplified workflow is the following: 1) A trade request is created in the Swaps smart contract, it specifies:  - The token holder(s) involved in the trade  - The trade executer (optional)  - An expiration date  - Details on the first token (address, requested amount, standard)  - Details on the second token (address, requested amount, standard)  - Whether the tokens need to be escrowed in the Swaps contract or not  - The current status of the trade (pending / executed / forced / cancelled) 2) The trade is accepted by both token holders 3) [OPTIONAL] The trade is approved by token controllers (only if requested by tokens controllers) 4) The trade is executed (either by the executer in case the executer is specified, or by anyone) STANDARD-AGNOSTIC: The Swaps smart contract is standard-agnostic, it supports ETH, ERC20, ERC721, ERC1400. The advantage of using an ERC1400 token is to leverages its hook property, thus requiring ONE single transaction (operatorTransferByPartition()) to send tokens to the Swaps smart contract instead of TWO with the ERC20 token standard (approve() + transferFrom()). OFF-CHAIN PAYMENT: The contract can be used as escrow contract while waiting for an off-chain payment. Once payment is received off-chain, the token sender realeases the tokens escrowed in the Swaps contract to deliver them to the recipient. ESCROW VS SWAP MODE: In case escrow mode is selected, tokens need to be escrowed in Swaps smart contract before the trade can occur. In case swap mode is selected, tokens are not escrowed in the Swaps. Instead, the Swaps contract is only allowed to transfer tokens ON BEHALF of their owners. When trade is executed, an atomic token swap occurs. EXPIRATION DATE: The trade can be cancelled by both parties in case expiration date is passed. CLAIMS: The executer has the ability to force or cancel the trade. In case of disagreement/missing payment, both parties can contact the \"executer\" of the trade to deposit a claim and solve the issue. MARKETPLACE: The contract can be used as a token marketplace. Indeed, when trades are created without specifying the recipient address, anyone can purchase them by sending the requested payment in exchange. PRICE ORACLES: When price oracles are defined, those can define the price at which trades need to be executed. This feature is particularly useful for assets with NAV (net asset value).",
    "events": {
      "ExecutedHold(address,bytes32,bytes32,address)": {
        "details": "Include token events so they can be parsed by Ethereum clients from the settlement transactions."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptTrade(uint256,bytes32)": {
        "details": "Accept a given trade (+ potentially escrow tokens).",
        "params": {
          "index": "Index of the trade to be accepted."
        }
      },
      "approveTradeWithPreimage(uint256,bool,bytes32)": {
        "details": "Approve a trade (if the tokens involved in the trade are controlled) This function can only be called by a token controller of one of the tokens involved in the trade. Indeed, when a token smart contract is controlled by an owner, the owner can decide to open the secondary market by:  - Allowlisting the Swaps smart contract  - Setting \"token controllers\" in the Swaps smart contract, in order to approve all the trades made with his token",
        "params": {
          "approved": "'true' if trade is approved, 'false' if not.",
          "index": "Index of the trade to be executed."
        }
      },
      "canReceive(bytes,bytes32,address,address,address,uint256,bytes,bytes)": {
        "details": "Indicate whether or not the Swaps contract can receive the tokens or not. [USED FOR ERC1400 TOKENS ONLY]",
        "params": {
          "data": "Information attached to the token transfer.",
          "operatorData": "Information attached to the Swaps transfer, by the operator."
        },
        "returns": {
          "_0": "'true' if the Swaps contract can receive the tokens, 'false' if not."
        }
      },
      "cancelTrade(uint256)": {
        "details": "Cancel a trade execution in the Swaps contract by transferring tokens back to their initial owners.",
        "params": {
          "index": "Index of the trade to be cancelled."
        }
      },
      "constructor": {
        "details": "Initialize Swaps + register the contract implementation in ERC1820Registry."
      },
      "executeTradeWithPreimage(uint256,bytes32)": {
        "details": "Execute a trade in the Swaps contract if possible (e.g. if tokens have been esccrowed, in case it is required). This function can only be called by the executer specified at trade creation. If no executer is specified, the trade can be launched by anyone.",
        "params": {
          "index": "Index of the trade to be executed."
        }
      },
      "forceTradeWithPreimage(uint256,bytes32)": {
        "details": "Force a trade execution in the Swaps contract by transferring tokens back to their target recipients.",
        "params": {
          "index": "Index of the trade to be forced."
        }
      },
      "getNbTrades()": {
        "details": "Get the total number of requests in the Swaps contract.",
        "returns": {
          "_0": "Total number of requests in the Swaps contract."
        }
      },
      "getPrice(uint256)": {
        "details": "Get amount of token2 to pay to acquire the token1.",
        "params": {
          "index": "Index of the Swaps request."
        }
      },
      "getPriceOwnership(address,address)": {
        "details": "Get price of the token.",
        "params": {
          "tokenAddress1": "Address of the token to be priced.",
          "tokenAddress2": "Address of the token to pay for token1."
        }
      },
      "getTokenPrice(address,address,bytes32,bytes32)": {
        "details": "Get price of the token.",
        "params": {
          "tokenAddress1": "Address of the token to be priced.",
          "tokenAddress2": "Address of the token to pay for token1.",
          "tokenId1": "ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions)."
        }
      },
      "getTrade(uint256)": {
        "details": "Get the trade.",
        "params": {
          "index": "Index of the trade."
        },
        "returns": {
          "_0": "Trade."
        }
      },
      "getTradeAcceptanceStatus(uint256)": {
        "details": "Verify if a trade has been accepted by the token holders. The trade needs to be accepted by both parties (token holders) before it gets executed.",
        "params": {
          "index": "Index of the trade to be accepted."
        }
      },
      "getTradeApprovalStatus(uint256)": {
        "details": "Verify if a trade has been approved by the token controllers. In case a given token has token controllers, those need to validate the trade before it gets executed.",
        "params": {
          "index": "Index of the trade to be approved."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "priceOracles(address)": {
        "details": "Get the list of price oracles for a given token.",
        "params": {
          "tokenAddress": "Token address."
        },
        "returns": {
          "_0": "List of addresses of all the price oracles for a given token."
        }
      },
      "renounceOwnership()": {
        "details": "Renounce ownership of the contract."
      },
      "requestTrade((address,address,address,uint256,address,uint256,bytes32,uint8,address,uint256,bytes32,uint8,uint8,uint8,uint256),bytes32)": {
        "details": "Create a new trade request in the Swaps smart contract.",
        "params": {
          "inputData": "The input for this function"
        }
      },
      "setPriceOracles(address,address[])": {
        "details": "Set list of price oracles for a given token.",
        "params": {
          "oracles": "Oracles addresses.",
          "tokenAddress": "Token address."
        }
      },
      "setPriceOwnership(address,address,bool)": {
        "details": "Take ownership for setting the price of a token.",
        "params": {
          "tokenAddress1": "Address of the token to be priced.",
          "tokenAddress2": "Address of the token to pay for token1."
        }
      },
      "setTokenControllers(address,address[])": {
        "details": "Set list of token controllers for a given token.",
        "params": {
          "operators": "Operators addresses.",
          "tokenAddress": "Token address."
        }
      },
      "setTokenPrice(address,address,bytes32,bytes32,uint256)": {
        "details": "Set price of a token.",
        "params": {
          "newPrice": "New price of the token.",
          "tokenAddress1": "Address of the token to be priced.",
          "tokenAddress2": "Address of the token to pay for token1.",
          "tokenId1": "ID/partition of the token1 (set to 0 bytes32 if price is set for all IDs/partitions).",
          "tokenId2": "ID/partition of the token2 (set to 0 bytes32 if price is set for all IDs/partitions)."
        }
      },
      "setTradeExecuters(address[])": {
        "details": "Set list of trade executers for the Swaps contract.",
        "params": {
          "operators": "Trade executers addresses."
        }
      },
      "setVariablePriceStartDate(address,uint256)": {
        "details": "Set date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).",
        "params": {
          "startDate": "Date after which token price can potentially be set by an oracle (0 if price can not be set by an oracle).",
          "tokenAddress": "Token address."
        }
      },
      "tokenControllers(address)": {
        "details": "Get the list of token controllers for a given token.",
        "params": {
          "tokenAddress": "Token address."
        },
        "returns": {
          "_0": "List of addresses of all the token controllers for a given token."
        }
      },
      "tokensReceived(bytes,bytes32,address,address,address,uint256,bytes,bytes)": {
        "details": "Hook function executed when tokens are sent to the Swaps contract. [USED FOR ERC1400 TOKENS ONLY]",
        "params": {
          "data": "Information attached to the token transfer.",
          "from": "Token holder.",
          "operatorData": "Information attached to the Swaps transfer, by the operator.",
          "partition": "Name of the partition.",
          "to": "Token recipient.",
          "value": "Number of tokens to transfer."
        }
      },
      "tradeExecuters()": {
        "details": "Get the list of trade executers as defined by the Swaps contract.",
        "returns": {
          "_0": "List of addresses of all the trade executers."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "variablePriceStartDate(address)": {
        "details": "Get date after which the token price can potentially be set by an oracle (0 if price can not be set by an oracle).",
        "params": {
          "tokenAddress": "Token address."
        }
      }
    },
    "title": "Swaps",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "canReceive(bytes,bytes32,address,address,address,uint256,bytes,bytes)": {
        "notice": "[ERC1400TokensRecipient INTERFACE (1/2)]"
      },
      "constructor": {
        "notice": "[Swaps CONSTRUCTOR]"
      },
      "tokensReceived(bytes,bytes32,address,address,address,uint256,bytes,bytes)": {
        "notice": "[ERC1400TokensRecipient INTERFACE (2/2)]"
      }
    },
    "version": 1
  }
}